const vc="123",gn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},_n={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},xc=0,Ka=1,wc=2,kl=1,Mc=2,Wi=3,yr=0,nt=1,Ti=2,Il=1,qi=0,Xi=1,Qa=2,$a=3,eo=4,Sc=5,ai=100,Ec=101,Tc=102,to=103,no=104,Ac=200,Pc=201,Lc=202,Cc=203,Ol=204,Dl=205,Rc=206,kc=207,Ic=208,Oc=209,Dc=210,Fc=0,Nc=1,zc=2,na=3,Bc=4,Uc=5,Hc=6,Gc=7,br=0,Vc=1,Wc=2,Yi=0,jc=1,qc=2,Xc=3,Yc=4,Zc=5,Fl=300,Da=301,Fa=302,io=303,so=304,Na=306,za=307,$s=1e3,yt=1001,ia=1002,rt=1003,ro=1004,ao=1004,oo=1005,lt=1006,Jc=1007,vr=1008,Ba=1009,Kc=1010,Qc=1011,er=1012,$c=1013,Ks=1014,yn=1015,tr=1016,eh=1017,th=1018,nh=1019,Zi=1020,ih=1021,On=1022,Ft=1023,sh=1024,rh=1025,pi=1026,es=1027,ah=1028,oh=1029,lh=1030,ch=1031,hh=1032,uh=1033,lo=33776,co=33777,ho=33778,uo=33779,fo=35840,po=35841,mo=35842,go=35843,dh=36196,_o=37492,yo=37496,fh=37808,ph=37809,mh=37810,gh=37811,_h=37812,yh=37813,bh=37814,vh=37815,xh=37816,wh=37817,Mh=37818,Sh=37819,Eh=37820,Th=37821,Ah=36492,Ph=37840,Lh=37841,Ch=37842,Rh=37843,kh=37844,Ih=37845,Oh=37846,Dh=37847,Fh=37848,Nh=37849,zh=37850,Bh=37851,Uh=37852,Hh=37853,Gh=2200,Vh=2201,Wh=2202,nr=2300,Qs=2301,Tr=2302,oi=2400,li=2401,ir=2402,Ua=2500,Nl=2501,jh=0,ms=3e3,zl=3001,qh=3007,Xh=3002,Yh=3003,Zh=3004,Jh=3005,Kh=3006,Qh=3200,$h=3201,Ai=0,eu=1,Ar=7680,tu=519,xr=35044,ts=35048,bo="300 es";function Pt(){}Object.assign(Pt.prototype,{addEventListener:function(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)},hasEventListener:function(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1},removeEventListener:function(t,e){if(this._listeners===void 0)return;const i=this._listeners[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}},dispatchEvent:function(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,r=i.length;s<r;s++)i[s].call(this,t)}}});const st=[];for(let t=0;t<256;t++)st[t]=(t<16?"0":"")+t.toString(16);let ys=1234567;const Me={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(st[t&255]+st[t>>8&255]+st[t>>16&255]+st[t>>24&255]+"-"+st[e&255]+st[e>>8&255]+"-"+st[e>>16&15|64]+st[e>>24&255]+"-"+st[n&63|128]+st[n>>8&255]+"-"+st[n>>16&255]+st[n>>24&255]+st[i&255]+st[i>>8&255]+st[i>>16&255]+st[i>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,i,s){return i+(t-e)*(s-i)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*(3-2*t))},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e),t*t*t*(t*(t*6-15)+10))},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return t!==void 0&&(ys=t%2147483647),ys=ys*16807%2147483647,(ys-1)/2147483646},degToRad:function(t){return t*Me.DEG2RAD},radToDeg:function(t){return t*Me.RAD2DEG},isPowerOfTwo:function(t){return(t&t-1)===0&&t!==0},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,i,s){const r=Math.cos,a=Math.sin,o=r(n/2),l=a(n/2),c=r((e+i)/2),d=a((e+i)/2),h=r((e-i)/2),f=a((e-i)/2),u=r((i-e)/2),p=a((i-e)/2);switch(s){case"XYX":t.set(o*d,l*h,l*f,o*c);break;case"YZY":t.set(l*f,o*d,l*h,o*c);break;case"ZXZ":t.set(l*h,l*f,o*d,o*c);break;case"XZX":t.set(o*d,l*p,l*u,o*c);break;case"YXY":t.set(l*u,o*d,l*p,o*c);break;case"ZYZ":t.set(l*p,l*u,o*d,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}};class H{constructor(e=0,n=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=e,this.y=n}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,n){return this.x=e,this.y=n,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const n=this.x,i=this.y,s=e.elements;return this.x=s[0]*n+s[3]*i+s[6],this.y=s[1]*n+s[4]*i+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y;return n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this}rotateAround(e,n){const i=Math.cos(n),s=Math.sin(n),r=this.x-e.x,a=this.y-e.y;return this.x=r*i-a*s+e.x,this.y=r*s+a*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class pt{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,s,r,a,o,l,c){const d=this.elements;return d[0]=e,d[1]=s,d[2]=o,d[3]=n,d[4]=r,d[5]=l,d[6]=i,d[7]=a,d[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return new this.constructor().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(e,n,i){return e.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const n=e.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,a=i[0],o=i[3],l=i[6],c=i[1],d=i[4],h=i[7],f=i[2],u=i[5],p=i[8],_=s[0],y=s[3],g=s[6],m=s[1],E=s[4],A=s[7],T=s[2],v=s[5],P=s[8];return r[0]=a*_+o*m+l*T,r[3]=a*y+o*E+l*v,r[6]=a*g+o*A+l*P,r[1]=c*_+d*m+h*T,r[4]=c*y+d*E+h*v,r[7]=c*g+d*A+h*P,r[2]=f*_+u*m+p*T,r[5]=f*y+u*E+p*v,r[8]=f*g+u*A+p*P,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=e,n[4]*=e,n[7]*=e,n[2]*=e,n[5]*=e,n[8]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8];return n*a*d-n*o*c-i*r*d+i*o*l+s*r*c-s*a*l}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],h=d*a-o*c,f=o*l-d*r,u=c*r-a*l,p=n*h+i*f+s*u;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(s*c-d*i)*_,e[2]=(o*i-s*a)*_,e[3]=f*_,e[4]=(d*n-s*l)*_,e[5]=(s*r-o*n)*_,e[6]=u*_,e[7]=(i*l-c*n)*_,e[8]=(a*n-i*r)*_,this}transpose(){let e;const n=this.elements;return e=n[1],n[1]=n[3],n[3]=e,e=n[2],n[2]=n[6],n[6]=e,e=n[5],n[5]=n[7],n[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).copy(this).invert().transpose()}transposeIntoArray(e){const n=this.elements;return e[0]=n[0],e[1]=n[3],e[2]=n[6],e[3]=n[1],e[4]=n[4],e[5]=n[7],e[6]=n[2],e[7]=n[5],e[8]=n[8],this}setUvTransform(e,n,i,s,r,a,o){const l=Math.cos(r),c=Math.sin(r);this.set(i*l,i*c,-i*(l*a+c*o)+a+e,-s*c,s*l,-s*(-c*a+l*o)+o+n,0,0,1)}scale(e,n){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=n,i[4]*=n,i[7]*=n,this}rotate(e){const n=Math.cos(e),i=Math.sin(e),s=this.elements,r=s[0],a=s[3],o=s[6],l=s[1],c=s[4],d=s[7];return s[0]=n*r+i*l,s[3]=n*a+i*c,s[6]=n*o+i*d,s[1]=-i*r+n*l,s[4]=-i*a+n*c,s[7]=-i*o+n*d,this}translate(e,n){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=n*i[2],i[4]+=n*i[5],i[7]+=n*i[8],this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<9;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<9;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e}}let Wn;const Pi={getDataURL:function(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Wn===void 0&&(Wn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Wn.width=t.width,Wn.height=t.height;const n=Wn.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Wn}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let nu=0;function je(t=je.DEFAULT_IMAGE,e=je.DEFAULT_MAPPING,n=yt,i=yt,s=lt,r=vr,a=Ft,o=Ba,l=1,c=ms){Object.defineProperty(this,"id",{value:nu++}),this.uuid=Me.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=r,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=o,this.offset=new H(0,0),this.repeat=new H(1,1),this.center=new H(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}je.DEFAULT_IMAGE=void 0;je.DEFAULT_MAPPING=Fl;je.prototype=Object.assign(Object.create(Pt.prototype),{constructor:je,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==void 0){const i=this.image;if(i.uuid===void 0&&(i.uuid=Me.generateUUID()),!e&&t.images[i.uuid]===void 0){let s;if(Array.isArray(i)){s=[];for(let r=0,a=i.length;r<a;r++)i[r].isDataTexture?s.push(Pr(i[r].image)):s.push(Pr(i[r]))}else s=Pr(i);t.images[i.uuid]={uuid:i.uuid,url:s}}n.image=i.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping!==Fl)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case $s:t.x=t.x-Math.floor(t.x);break;case yt:t.x=t.x<0?0:1;break;case ia:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case $s:t.y=t.y-Math.floor(t.y);break;case yt:t.y=t.y<0?0:1;break;case ia:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}});Object.defineProperty(je.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function Pr(t){return typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap?Pi.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}class ze{constructor(e=0,n=0,i=0,s=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=e,this.y=n,this.z=i,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,n,i,s){return this.x=e,this.y=n,this.z=i,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this.w=e.w+n.w,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this.w+=e.w*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this.w=e.w-n.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=this.w,a=e.elements;return this.x=a[0]*n+a[4]*i+a[8]*s+a[12]*r,this.y=a[1]*n+a[5]*i+a[9]*s+a[13]*r,this.z=a[2]*n+a[6]*i+a[10]*s+a[14]*r,this.w=a[3]*n+a[7]*i+a[11]*s+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const n=Math.sqrt(1-e.w*e.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/n,this.y=e.y/n,this.z=e.z/n),this}setAxisAngleFromRotationMatrix(e){let n,i,s,r;const l=e.elements,c=l[0],d=l[4],h=l[8],f=l[1],u=l[5],p=l[9],_=l[2],y=l[6],g=l[10];if(Math.abs(d-f)<.01&&Math.abs(h-_)<.01&&Math.abs(p-y)<.01){if(Math.abs(d+f)<.1&&Math.abs(h+_)<.1&&Math.abs(p+y)<.1&&Math.abs(c+u+g-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const E=(c+1)/2,A=(u+1)/2,T=(g+1)/2,v=(d+f)/4,P=(h+_)/4,U=(p+y)/4;return E>A&&E>T?E<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(E),s=v/i,r=P/i):A>T?A<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(A),i=v/s,r=U/s):T<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(T),i=P/r,s=U/r),this.set(i,s,r,n),this}let m=Math.sqrt((y-p)*(y-p)+(h-_)*(h-_)+(f-d)*(f-d));return Math.abs(m)<.001&&(m=1),this.x=(y-p)/m,this.y=(h-_)/m,this.z=(f-d)/m,this.w=Math.acos((c+u+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this.w=Math.max(e.w,Math.min(n.w,this.w)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this.w=Math.max(e,Math.min(n,this.w)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this.w+=(e.w-this.w)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this.w=e.w+(n.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this.w=e[n+3],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e[n+3]=this.w,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this.w=e.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function Nt(t,e,n){this.width=t,this.height=e,this.scissor=new ze(0,0,t,e),this.scissorTest=!1,this.viewport=new ze(0,0,t,e),n=n||{},this.texture=new je(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:lt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Nt.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Nt,isWebGLRenderTarget:!0,setSize:function(t,e){(this.width!==t||this.height!==e)&&(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function vo(t,e,n){Nt.call(this,t,e,n),this.samples=4}vo.prototype=Object.assign(Object.create(Nt.prototype),{constructor:vo,isWebGLMultisampleRenderTarget:!0,copy:function(t){return Nt.prototype.copy.call(this,t),this.samples=t.samples,this}});class ht{constructor(e=0,n=0,i=0,s=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=e,this._y=n,this._z=i,this._w=s}static slerp(e,n,i,s){return i.copy(e).slerp(n,s)}static slerpFlat(e,n,i,s,r,a,o){let l=i[s+0],c=i[s+1],d=i[s+2],h=i[s+3];const f=r[a+0],u=r[a+1],p=r[a+2],_=r[a+3];if(h!==_||l!==f||c!==u||d!==p){let y=1-o;const g=l*f+c*u+d*p+h*_,m=g>=0?1:-1,E=1-g*g;if(E>Number.EPSILON){const T=Math.sqrt(E),v=Math.atan2(T,g*m);y=Math.sin(y*v)/T,o=Math.sin(o*v)/T}const A=o*m;if(l=l*y+f*A,c=c*y+u*A,d=d*y+p*A,h=h*y+_*A,y===1-o){const T=1/Math.sqrt(l*l+c*c+d*d+h*h);l*=T,c*=T,d*=T,h*=T}}e[n]=l,e[n+1]=c,e[n+2]=d,e[n+3]=h}static multiplyQuaternionsFlat(e,n,i,s,r,a){const o=i[s],l=i[s+1],c=i[s+2],d=i[s+3],h=r[a],f=r[a+1],u=r[a+2],p=r[a+3];return e[n]=o*p+d*h+l*u-c*f,e[n+1]=l*p+d*f+c*h-o*u,e[n+2]=c*p+d*u+o*f-l*h,e[n+3]=d*p-o*h-l*f-c*u,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,n){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,s=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(i/2),d=o(s/2),h=o(r/2),f=l(i/2),u=l(s/2),p=l(r/2);switch(a){case"XYZ":this._x=f*d*h+c*u*p,this._y=c*u*h-f*d*p,this._z=c*d*p+f*u*h,this._w=c*d*h-f*u*p;break;case"YXZ":this._x=f*d*h+c*u*p,this._y=c*u*h-f*d*p,this._z=c*d*p-f*u*h,this._w=c*d*h+f*u*p;break;case"ZXY":this._x=f*d*h-c*u*p,this._y=c*u*h+f*d*p,this._z=c*d*p+f*u*h,this._w=c*d*h-f*u*p;break;case"ZYX":this._x=f*d*h-c*u*p,this._y=c*u*h+f*d*p,this._z=c*d*p-f*u*h,this._w=c*d*h+f*u*p;break;case"YZX":this._x=f*d*h+c*u*p,this._y=c*u*h+f*d*p,this._z=c*d*p-f*u*h,this._w=c*d*h-f*u*p;break;case"XZY":this._x=f*d*h-c*u*p,this._y=c*u*h-f*d*p,this._z=c*d*p+f*u*h,this._w=c*d*h+f*u*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,n){const i=n/2,s=Math.sin(i);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const n=e.elements,i=n[0],s=n[4],r=n[8],a=n[1],o=n[5],l=n[9],c=n[2],d=n[6],h=n[10],f=i+o+h;if(f>0){const u=.5/Math.sqrt(f+1);this._w=.25/u,this._x=(d-l)*u,this._y=(r-c)*u,this._z=(a-s)*u}else if(i>o&&i>h){const u=2*Math.sqrt(1+i-o-h);this._w=(d-l)/u,this._x=.25*u,this._y=(s+a)/u,this._z=(r+c)/u}else if(o>h){const u=2*Math.sqrt(1+o-i-h);this._w=(r-c)/u,this._x=(s+a)/u,this._y=.25*u,this._z=(l+d)/u}else{const u=2*Math.sqrt(1+h-i-o);this._w=(a-s)/u,this._x=(r+c)/u,this._y=(l+d)/u,this._z=.25*u}return this._onChangeCallback(),this}setFromUnitVectors(e,n){let s=e.dot(n)+1;return s<1e-6?(s=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=s):(this._x=0,this._y=-e.z,this._z=e.y,this._w=s)):(this._x=e.y*n.z-e.z*n.y,this._y=e.z*n.x-e.x*n.z,this._z=e.x*n.y-e.y*n.x,this._w=s),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Me.clamp(this.dot(e),-1,1)))}rotateTowards(e,n){const i=this.angleTo(e);if(i===0)return this;const s=Math.min(1,n/i);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,n){return n!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,n)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,n){const i=e._x,s=e._y,r=e._z,a=e._w,o=n._x,l=n._y,c=n._z,d=n._w;return this._x=i*d+a*o+s*c-r*l,this._y=s*d+a*l+r*o-i*c,this._z=r*d+a*c+i*l-s*o,this._w=a*d-i*o-s*l-r*c,this._onChangeCallback(),this}slerp(e,n){if(n===0)return this;if(n===1)return this.copy(e);const i=this._x,s=this._y,r=this._z,a=this._w;let o=a*e._w+i*e._x+s*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=i,this._y=s,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const u=1-n;return this._w=u*a+n*this._w,this._x=u*i+n*this._x,this._y=u*s+n*this._y,this._z=u*r+n*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),d=Math.atan2(c,o),h=Math.sin((1-n)*d)/c,f=Math.sin(n*d)/c;return this._w=a*h+this._w*f,this._x=i*h+this._x*f,this._y=s*h+this._y*f,this._z=r*h+this._z*f,this._onChangeCallback(),this}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,n=0){return this._x=e[n],this._y=e[n+1],this._z=e[n+2],this._w=e[n+3],this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._w,e}fromBufferAttribute(e,n){return this._x=e.getX(n),this._y=e.getY(n),this._z=e.getZ(n),this._w=e.getW(n),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}class b{constructor(e=0,n=0,i=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=e,this.y=n,this.z=i}set(e,n,i){return i===void 0&&(i=this.z),this.x=e,this.y=n,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,n){switch(e){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,n){return n!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,n)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,n){return this.x=e.x+n.x,this.y=e.y+n.y,this.z=e.z+n.z,this}addScaledVector(e,n){return this.x+=e.x*n,this.y+=e.y*n,this.z+=e.z*n,this}sub(e,n){return n!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,n)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,n){return this.x=e.x-n.x,this.y=e.y-n.y,this.z=e.z-n.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,n)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,n){return this.x=e.x*n.x,this.y=e.y*n.y,this.z=e.z*n.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(xo.setFromEuler(e))}applyAxisAngle(e,n){return this.applyQuaternion(xo.setFromAxisAngle(e,n))}applyMatrix3(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[3]*i+r[6]*s,this.y=r[1]*n+r[4]*i+r[7]*s,this.z=r[2]*n+r[5]*i+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const n=this.x,i=this.y,s=this.z,r=e.elements,a=1/(r[3]*n+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*n+r[4]*i+r[8]*s+r[12])*a,this.y=(r[1]*n+r[5]*i+r[9]*s+r[13])*a,this.z=(r[2]*n+r[6]*i+r[10]*s+r[14])*a,this}applyQuaternion(e){const n=this.x,i=this.y,s=this.z,r=e.x,a=e.y,o=e.z,l=e.w,c=l*n+a*s-o*i,d=l*i+o*n-r*s,h=l*s+r*i-a*n,f=-r*n-a*i-o*s;return this.x=c*l+f*-r+d*-o-h*-a,this.y=d*l+f*-a+h*-r-c*-o,this.z=h*l+f*-o+c*-a-d*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const n=this.x,i=this.y,s=this.z,r=e.elements;return this.x=r[0]*n+r[4]*i+r[8]*s,this.y=r[1]*n+r[5]*i+r[9]*s,this.z=r[2]*n+r[6]*i+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,n){return this.x=Math.max(e.x,Math.min(n.x,this.x)),this.y=Math.max(e.y,Math.min(n.y,this.y)),this.z=Math.max(e.z,Math.min(n.z,this.z)),this}clampScalar(e,n){return this.x=Math.max(e,Math.min(n,this.x)),this.y=Math.max(e,Math.min(n,this.y)),this.z=Math.max(e,Math.min(n,this.z)),this}clampLength(e,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,n){return this.x+=(e.x-this.x)*n,this.y+=(e.y-this.y)*n,this.z+=(e.z-this.z)*n,this}lerpVectors(e,n,i){return this.x=e.x+(n.x-e.x)*i,this.y=e.y+(n.y-e.y)*i,this.z=e.z+(n.z-e.z)*i,this}cross(e,n){return n!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,n)):this.crossVectors(this,e)}crossVectors(e,n){const i=e.x,s=e.y,r=e.z,a=n.x,o=n.y,l=n.z;return this.x=s*l-r*o,this.y=r*a-i*l,this.z=i*o-s*a,this}projectOnVector(e){const n=e.lengthSq();if(n===0)return this.set(0,0,0);const i=e.dot(this)/n;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return Lr.copy(this).projectOnVector(e),this.sub(Lr)}reflect(e){return this.sub(Lr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const n=Math.sqrt(this.lengthSq()*e.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(e)/n;return Math.acos(Me.clamp(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const n=this.x-e.x,i=this.y-e.y,s=this.z-e.z;return n*n+i*i+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,n,i){const s=Math.sin(n)*e;return this.x=s*Math.sin(i),this.y=Math.cos(n)*e,this.z=s*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,n,i){return this.x=e*Math.sin(n),this.y=i,this.z=e*Math.cos(n),this}setFromMatrixPosition(e){const n=e.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(e){const n=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=n,this.y=i,this.z=s,this}setFromMatrixColumn(e,n){return this.fromArray(e.elements,n*4)}setFromMatrix3Column(e,n){return this.fromArray(e.elements,n*3)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,n=0){return this.x=e[n],this.y=e[n+1],this.z=e[n+2],this}toArray(e=[],n=0){return e[n]=this.x,e[n+1]=this.y,e[n+2]=this.z,e}fromBufferAttribute(e,n,i){return i!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(n),this.y=e.getY(n),this.z=e.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const Lr=new b,xo=new ht;class An{constructor(e,n){Object.defineProperty(this,"isBox3",{value:!0}),this.min=e!==void 0?e:new b(1/0,1/0,1/0),this.max=n!==void 0?n:new b(-1/0,-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromArray(e){let n=1/0,i=1/0,s=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const d=e[l],h=e[l+1],f=e[l+2];d<n&&(n=d),h<i&&(i=h),f<s&&(s=f),d>r&&(r=d),h>a&&(a=h),f>o&&(o=f)}return this.min.set(n,i,s),this.max.set(r,a,o),this}setFromBufferAttribute(e){let n=1/0,i=1/0,s=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const d=e.getX(l),h=e.getY(l),f=e.getZ(l);d<n&&(n=d),h<i&&(i=h),f<s&&(s=f),d>r&&(r=d),h>a&&(a=h),f>o&&(o=f)}return this.min.set(n,i,s),this.max.set(r,a,o),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Di.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new b),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new b),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const n=e.geometry;n!==void 0&&(n.boundingBox===null&&n.computeBoundingBox(),Rr.copy(n.boundingBox),Rr.applyMatrix4(e.matrixWorld),this.union(Rr));const i=e.children;for(let s=0,r=i.length;s<r;s++)this.expandByObject(i[s]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),n=new b),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Di),Di.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let n,i;return e.normal.x>0?(n=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(n=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(n+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(n+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(n+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(n+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),n<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Fi),bs.subVectors(this.max,Fi),jn.subVectors(e.a,Fi),qn.subVectors(e.b,Fi),Xn.subVectors(e.c,Fi),ln.subVectors(qn,jn),cn.subVectors(Xn,qn),Cn.subVectors(jn,Xn);let n=[0,-ln.z,ln.y,0,-cn.z,cn.y,0,-Cn.z,Cn.y,ln.z,0,-ln.x,cn.z,0,-cn.x,Cn.z,0,-Cn.x,-ln.y,ln.x,0,-cn.y,cn.x,0,-Cn.y,Cn.x,0];return!Cr(n,jn,qn,Xn,bs)||(n=[1,0,0,0,1,0,0,0,1],!Cr(n,jn,qn,Xn,bs))?!1:(vs.crossVectors(ln,cn),n=[vs.x,vs.y,vs.z],Cr(n,jn,qn,Xn,bs))}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),n=new b),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Di.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(Di).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Jt[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Jt[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Jt[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Jt[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Jt[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Jt[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Jt[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Jt[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Jt),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function Cr(t,e,n,i,s){for(let r=0,a=t.length-3;r<=a;r+=3){Rn.fromArray(t,r);const o=s.x*Math.abs(Rn.x)+s.y*Math.abs(Rn.y)+s.z*Math.abs(Rn.z),l=e.dot(Rn),c=n.dot(Rn),d=i.dot(Rn);if(Math.max(-Math.max(l,c,d),Math.min(l,c,d))>o)return!1}return!0}const Jt=[new b,new b,new b,new b,new b,new b,new b,new b],Di=new b,Rr=new An,jn=new b,qn=new b,Xn=new b,ln=new b,cn=new b,Cn=new b,Fi=new b,bs=new b,vs=new b,Rn=new b,iu=new An;class Pn{constructor(e,n){this.center=e!==void 0?e:new b,this.radius=n!==void 0?n:-1}set(e,n){return this.center.copy(e),this.radius=n,this}setFromPoints(e,n){const i=this.center;n!==void 0?i.copy(n):iu.setFromPoints(e).getCenter(i);let s=0;for(let r=0,a=e.length;r<a;r++)s=Math.max(s,i.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const n=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=n*n}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,n){const i=this.center.distanceToSquared(e);return n===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),n=new b),n.copy(e),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new An),this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}}const Kt=new b,kr=new b,xs=new b,hn=new b,Ir=new b,ws=new b,Or=new b;class gs{constructor(e,n){this.origin=e!==void 0?e:new b,this.direction=n!==void 0?n:new b(0,0,-1)}set(e,n){return this.origin.copy(e),this.direction.copy(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,n){return n===void 0&&(console.warn("THREE.Ray: .at() target is now required"),n=new b),n.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Kt)),this}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),n=new b),n.subVectors(e,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const n=Kt.subVectors(e,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(e):(Kt.copy(this.direction).multiplyScalar(n).add(this.origin),Kt.distanceToSquared(e))}distanceSqToSegment(e,n,i,s){kr.copy(e).add(n).multiplyScalar(.5),xs.copy(n).sub(e).normalize(),hn.copy(this.origin).sub(kr);const r=e.distanceTo(n)*.5,a=-this.direction.dot(xs),o=hn.dot(this.direction),l=-hn.dot(xs),c=hn.lengthSq(),d=Math.abs(1-a*a);let h,f,u,p;if(d>0)if(h=a*l-o,f=a*o-l,p=r*d,h>=0)if(f>=-p)if(f<=p){const _=1/d;h*=_,f*=_,u=h*(h+a*f+2*o)+f*(a*h+f+2*l)+c}else f=r,h=Math.max(0,-(a*f+o)),u=-h*h+f*(f+2*l)+c;else f=-r,h=Math.max(0,-(a*f+o)),u=-h*h+f*(f+2*l)+c;else f<=-p?(h=Math.max(0,-(-a*r+o)),f=h>0?-r:Math.min(Math.max(-r,-l),r),u=-h*h+f*(f+2*l)+c):f<=p?(h=0,f=Math.min(Math.max(-r,-l),r),u=f*(f+2*l)+c):(h=Math.max(0,-(a*r+o)),f=h>0?r:Math.min(Math.max(-r,-l),r),u=-h*h+f*(f+2*l)+c);else f=a>0?-r:r,h=Math.max(0,-(a*f+o)),u=-h*h+f*(f+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(h).add(this.origin),s&&s.copy(xs).multiplyScalar(f).add(kr),u}intersectSphere(e,n){Kt.subVectors(e.center,this.origin);const i=Kt.dot(this.direction),s=Kt.dot(Kt)-i*i,r=e.radius*e.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=i-a,l=i+a;return o<0&&l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const n=e.normal.dot(this.direction);if(n===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/n;return i>=0?i:null}intersectPlane(e,n){const i=this.distanceToPlane(e);return i===null?null:this.at(i,n)}intersectsPlane(e){const n=e.distanceToPoint(this.origin);return n===0||e.normal.dot(this.direction)*n<0}intersectBox(e,n){let i,s,r,a,o,l;const c=1/this.direction.x,d=1/this.direction.y,h=1/this.direction.z,f=this.origin;return c>=0?(i=(e.min.x-f.x)*c,s=(e.max.x-f.x)*c):(i=(e.max.x-f.x)*c,s=(e.min.x-f.x)*c),d>=0?(r=(e.min.y-f.y)*d,a=(e.max.y-f.y)*d):(r=(e.max.y-f.y)*d,a=(e.min.y-f.y)*d),i>a||r>s||((r>i||i!==i)&&(i=r),(a<s||s!==s)&&(s=a),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),i>l||o>s)||((o>i||i!==i)&&(i=o),(l<s||s!==s)&&(s=l),s<0)?null:this.at(i>=0?i:s,n)}intersectsBox(e){return this.intersectBox(e,Kt)!==null}intersectTriangle(e,n,i,s,r){Ir.subVectors(n,e),ws.subVectors(i,e),Or.crossVectors(Ir,ws);let a=this.direction.dot(Or),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;hn.subVectors(this.origin,e);const l=o*this.direction.dot(ws.crossVectors(hn,ws));if(l<0)return null;const c=o*this.direction.dot(Ir.cross(hn));if(c<0||l+c>a)return null;const d=-o*hn.dot(Or);return d<0?null:this.at(d/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}class Te{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,n,i,s,r,a,o,l,c,d,h,f,u,p,_,y){const g=this.elements;return g[0]=e,g[4]=n,g[8]=i,g[12]=s,g[1]=r,g[5]=a,g[9]=o,g[13]=l,g[2]=c,g[6]=d,g[10]=h,g[14]=f,g[3]=u,g[7]=p,g[11]=_,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Te().fromArray(this.elements)}copy(e){const n=this.elements,i=e.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(e){const n=this.elements,i=e.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}extractBasis(e,n,i){return e.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,n,i){return this.set(e.x,n.x,i.x,0,e.y,n.y,i.y,0,e.z,n.z,i.z,0,0,0,0,1),this}extractRotation(e){const n=this.elements,i=e.elements,s=1/Yn.setFromMatrixColumn(e,0).length(),r=1/Yn.setFromMatrixColumn(e,1).length(),a=1/Yn.setFromMatrixColumn(e,2).length();return n[0]=i[0]*s,n[1]=i[1]*s,n[2]=i[2]*s,n[3]=0,n[4]=i[4]*r,n[5]=i[5]*r,n[6]=i[6]*r,n[7]=0,n[8]=i[8]*a,n[9]=i[9]*a,n[10]=i[10]*a,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const n=this.elements,i=e.x,s=e.y,r=e.z,a=Math.cos(i),o=Math.sin(i),l=Math.cos(s),c=Math.sin(s),d=Math.cos(r),h=Math.sin(r);if(e.order==="XYZ"){const f=a*d,u=a*h,p=o*d,_=o*h;n[0]=l*d,n[4]=-l*h,n[8]=c,n[1]=u+p*c,n[5]=f-_*c,n[9]=-o*l,n[2]=_-f*c,n[6]=p+u*c,n[10]=a*l}else if(e.order==="YXZ"){const f=l*d,u=l*h,p=c*d,_=c*h;n[0]=f+_*o,n[4]=p*o-u,n[8]=a*c,n[1]=a*h,n[5]=a*d,n[9]=-o,n[2]=u*o-p,n[6]=_+f*o,n[10]=a*l}else if(e.order==="ZXY"){const f=l*d,u=l*h,p=c*d,_=c*h;n[0]=f-_*o,n[4]=-a*h,n[8]=p+u*o,n[1]=u+p*o,n[5]=a*d,n[9]=_-f*o,n[2]=-a*c,n[6]=o,n[10]=a*l}else if(e.order==="ZYX"){const f=a*d,u=a*h,p=o*d,_=o*h;n[0]=l*d,n[4]=p*c-u,n[8]=f*c+_,n[1]=l*h,n[5]=_*c+f,n[9]=u*c-p,n[2]=-c,n[6]=o*l,n[10]=a*l}else if(e.order==="YZX"){const f=a*l,u=a*c,p=o*l,_=o*c;n[0]=l*d,n[4]=_-f*h,n[8]=p*h+u,n[1]=h,n[5]=a*d,n[9]=-o*d,n[2]=-c*d,n[6]=u*h+p,n[10]=f-_*h}else if(e.order==="XZY"){const f=a*l,u=a*c,p=o*l,_=o*c;n[0]=l*d,n[4]=-h,n[8]=c*d,n[1]=f*h+_,n[5]=a*d,n[9]=u*h-p,n[2]=p*h-u,n[6]=o*d,n[10]=_*h+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(e){return this.compose(su,e,ru)}lookAt(e,n,i){const s=this.elements;return gt.subVectors(e,n),gt.lengthSq()===0&&(gt.z=1),gt.normalize(),un.crossVectors(i,gt),un.lengthSq()===0&&(Math.abs(i.z)===1?gt.x+=1e-4:gt.z+=1e-4,gt.normalize(),un.crossVectors(i,gt)),un.normalize(),Ms.crossVectors(gt,un),s[0]=un.x,s[4]=Ms.x,s[8]=gt.x,s[1]=un.y,s[5]=Ms.y,s[9]=gt.y,s[2]=un.z,s[6]=Ms.z,s[10]=gt.z,this}multiply(e,n){return n!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,n)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,n){const i=e.elements,s=n.elements,r=this.elements,a=i[0],o=i[4],l=i[8],c=i[12],d=i[1],h=i[5],f=i[9],u=i[13],p=i[2],_=i[6],y=i[10],g=i[14],m=i[3],E=i[7],A=i[11],T=i[15],v=s[0],P=s[4],U=s[8],K=s[12],le=s[1],C=s[5],B=s[9],D=s[13],z=s[2],k=s[6],I=s[10],G=s[14],j=s[3],se=s[7],ce=s[11],oe=s[15];return r[0]=a*v+o*le+l*z+c*j,r[4]=a*P+o*C+l*k+c*se,r[8]=a*U+o*B+l*I+c*ce,r[12]=a*K+o*D+l*G+c*oe,r[1]=d*v+h*le+f*z+u*j,r[5]=d*P+h*C+f*k+u*se,r[9]=d*U+h*B+f*I+u*ce,r[13]=d*K+h*D+f*G+u*oe,r[2]=p*v+_*le+y*z+g*j,r[6]=p*P+_*C+y*k+g*se,r[10]=p*U+_*B+y*I+g*ce,r[14]=p*K+_*D+y*G+g*oe,r[3]=m*v+E*le+A*z+T*j,r[7]=m*P+E*C+A*k+T*se,r[11]=m*U+E*B+A*I+T*ce,r[15]=m*K+E*D+A*G+T*oe,this}multiplyScalar(e){const n=this.elements;return n[0]*=e,n[4]*=e,n[8]*=e,n[12]*=e,n[1]*=e,n[5]*=e,n[9]*=e,n[13]*=e,n[2]*=e,n[6]*=e,n[10]*=e,n[14]*=e,n[3]*=e,n[7]*=e,n[11]*=e,n[15]*=e,this}determinant(){const e=this.elements,n=e[0],i=e[4],s=e[8],r=e[12],a=e[1],o=e[5],l=e[9],c=e[13],d=e[2],h=e[6],f=e[10],u=e[14],p=e[3],_=e[7],y=e[11],g=e[15];return p*(+r*l*h-s*c*h-r*o*f+i*c*f+s*o*u-i*l*u)+_*(+n*l*u-n*c*f+r*a*f-s*a*u+s*c*d-r*l*d)+y*(+n*c*h-n*o*u-r*a*h+i*a*u+r*o*d-i*c*d)+g*(-s*o*d-n*l*h+n*o*f+s*a*h-i*a*f+i*l*d)}transpose(){const e=this.elements;let n;return n=e[1],e[1]=e[4],e[4]=n,n=e[2],e[2]=e[8],e[8]=n,n=e[6],e[6]=e[9],e[9]=n,n=e[3],e[3]=e[12],e[12]=n,n=e[7],e[7]=e[13],e[13]=n,n=e[11],e[11]=e[14],e[14]=n,this}setPosition(e,n,i){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=n,s[14]=i),this}invert(){const e=this.elements,n=e[0],i=e[1],s=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],d=e[8],h=e[9],f=e[10],u=e[11],p=e[12],_=e[13],y=e[14],g=e[15],m=h*y*c-_*f*c+_*l*u-o*y*u-h*l*g+o*f*g,E=p*f*c-d*y*c-p*l*u+a*y*u+d*l*g-a*f*g,A=d*_*c-p*h*c+p*o*u-a*_*u-d*o*g+a*h*g,T=p*h*l-d*_*l-p*o*f+a*_*f+d*o*y-a*h*y,v=n*m+i*E+s*A+r*T;if(v===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/v;return e[0]=m*P,e[1]=(_*f*r-h*y*r-_*s*u+i*y*u+h*s*g-i*f*g)*P,e[2]=(o*y*r-_*l*r+_*s*c-i*y*c-o*s*g+i*l*g)*P,e[3]=(h*l*r-o*f*r-h*s*c+i*f*c+o*s*u-i*l*u)*P,e[4]=E*P,e[5]=(d*y*r-p*f*r+p*s*u-n*y*u-d*s*g+n*f*g)*P,e[6]=(p*l*r-a*y*r-p*s*c+n*y*c+a*s*g-n*l*g)*P,e[7]=(a*f*r-d*l*r+d*s*c-n*f*c-a*s*u+n*l*u)*P,e[8]=A*P,e[9]=(p*h*r-d*_*r-p*i*u+n*_*u+d*i*g-n*h*g)*P,e[10]=(a*_*r-p*o*r+p*i*c-n*_*c-a*i*g+n*o*g)*P,e[11]=(d*o*r-a*h*r-d*i*c+n*h*c+a*i*u-n*o*u)*P,e[12]=T*P,e[13]=(d*_*s-p*h*s+p*i*f-n*_*f-d*i*y+n*h*y)*P,e[14]=(p*o*s-a*_*s-p*i*l+n*_*l+a*i*y-n*o*y)*P,e[15]=(a*h*s-d*o*s+d*i*l-n*h*l-a*i*f+n*o*f)*P,this}scale(e){const n=this.elements,i=e.x,s=e.y,r=e.z;return n[0]*=i,n[4]*=s,n[8]*=r,n[1]*=i,n[5]*=s,n[9]*=r,n[2]*=i,n[6]*=s,n[10]*=r,n[3]*=i,n[7]*=s,n[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(n,i,s))}makeTranslation(e,n,i){return this.set(1,0,0,e,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(e){const n=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(e){const n=Math.cos(e),i=Math.sin(e);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,n){const i=Math.cos(n),s=Math.sin(n),r=1-i,a=e.x,o=e.y,l=e.z,c=r*a,d=r*o;return this.set(c*a+i,c*o-s*l,c*l+s*o,0,c*o+s*l,d*o+i,d*l-s*a,0,c*l-s*o,d*l+s*a,r*l*l+i,0,0,0,0,1),this}makeScale(e,n,i){return this.set(e,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,n,i){return this.set(1,n,i,0,e,1,i,0,e,n,1,0,0,0,0,1),this}compose(e,n,i){const s=this.elements,r=n._x,a=n._y,o=n._z,l=n._w,c=r+r,d=a+a,h=o+o,f=r*c,u=r*d,p=r*h,_=a*d,y=a*h,g=o*h,m=l*c,E=l*d,A=l*h,T=i.x,v=i.y,P=i.z;return s[0]=(1-(_+g))*T,s[1]=(u+A)*T,s[2]=(p-E)*T,s[3]=0,s[4]=(u-A)*v,s[5]=(1-(f+g))*v,s[6]=(y+m)*v,s[7]=0,s[8]=(p+E)*P,s[9]=(y-m)*P,s[10]=(1-(f+_))*P,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,n,i){const s=this.elements;let r=Yn.set(s[0],s[1],s[2]).length();const a=Yn.set(s[4],s[5],s[6]).length(),o=Yn.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],Ct.copy(this);const c=1/r,d=1/a,h=1/o;return Ct.elements[0]*=c,Ct.elements[1]*=c,Ct.elements[2]*=c,Ct.elements[4]*=d,Ct.elements[5]*=d,Ct.elements[6]*=d,Ct.elements[8]*=h,Ct.elements[9]*=h,Ct.elements[10]*=h,n.setFromRotationMatrix(Ct),i.x=r,i.y=a,i.z=o,this}makePerspective(e,n,i,s,r,a){a===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const o=this.elements,l=2*r/(n-e),c=2*r/(i-s),d=(n+e)/(n-e),h=(i+s)/(i-s),f=-(a+r)/(a-r),u=-2*a*r/(a-r);return o[0]=l,o[4]=0,o[8]=d,o[12]=0,o[1]=0,o[5]=c,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=u,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,n,i,s,r,a){const o=this.elements,l=1/(n-e),c=1/(i-s),d=1/(a-r),h=(n+e)*l,f=(i+s)*c,u=(a+r)*d;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-u,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const n=this.elements,i=e.elements;for(let s=0;s<16;s++)if(n[s]!==i[s])return!1;return!0}fromArray(e,n=0){for(let i=0;i<16;i++)this.elements[i]=e[i+n];return this}toArray(e=[],n=0){const i=this.elements;return e[n]=i[0],e[n+1]=i[1],e[n+2]=i[2],e[n+3]=i[3],e[n+4]=i[4],e[n+5]=i[5],e[n+6]=i[6],e[n+7]=i[7],e[n+8]=i[8],e[n+9]=i[9],e[n+10]=i[10],e[n+11]=i[11],e[n+12]=i[12],e[n+13]=i[13],e[n+14]=i[14],e[n+15]=i[15],e}}const Yn=new b,Ct=new Te,su=new b(0,0,0),ru=new b(1,1,1),un=new b,Ms=new b,gt=new b;class Li{constructor(e=0,n=0,i=0,s=Li.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=e,this._y=n,this._z=i,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,n,i,s){return this._x=e,this._y=n,this._z=i,this._order=s||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,n,i){const s=Me.clamp,r=e.elements,a=r[0],o=r[4],l=r[8],c=r[1],d=r[5],h=r[9],f=r[2],u=r[6],p=r[10];switch(n=n||this._order,n){case"XYZ":this._y=Math.asin(s(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(u,d),this._z=0);break;case"YXZ":this._x=Math.asin(-s(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(l,p),this._z=Math.atan2(c,d)):(this._y=Math.atan2(-f,a),this._z=0);break;case"ZXY":this._x=Math.asin(s(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-o,d)):(this._y=0,this._z=Math.atan2(c,a));break;case"ZYX":this._y=Math.asin(-s(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(u,p),this._z=Math.atan2(c,a)):(this._x=0,this._z=Math.atan2(-o,d));break;case"YZX":this._z=Math.asin(s(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,d),this._y=Math.atan2(-f,a)):(this._x=0,this._y=Math.atan2(l,p));break;case"XZY":this._z=Math.asin(-s(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(u,d),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i!==!1&&this._onChangeCallback(),this}setFromQuaternion(e,n,i){return wo.makeRotationFromQuaternion(e),this.setFromRotationMatrix(wo,n,i)}setFromVector3(e,n){return this.set(e.x,e.y,e.z,n||this._order)}reorder(e){return Mo.setFromEuler(this),this.setFromQuaternion(Mo,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],n=0){return e[n]=this._x,e[n+1]=this._y,e[n+2]=this._z,e[n+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new b(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Li.DefaultOrder="XYZ";Li.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const wo=new Te,Mo=new ht;class Bl{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}}let au=0;const So=new b,Zn=new ht,Qt=new Te,Ss=new b,Ni=new b,ou=new b,lu=new ht,Eo=new b(1,0,0),To=new b(0,1,0),Ao=new b(0,0,1),cu={type:"added"},Po={type:"removed"};function _e(){Object.defineProperty(this,"id",{value:au++}),this.uuid=Me.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=_e.DefaultUp.clone();const t=new b,e=new Li,n=new ht,i=new b(1,1,1);function s(){n.setFromEuler(e,!1)}function r(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(r),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Te},normalMatrix:{value:new pt}}),this.matrix=new Te,this.matrixWorld=new Te,this.matrixAutoUpdate=_e.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Bl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}_e.DefaultUp=new b(0,1,0);_e.DefaultMatrixAutoUpdate=!0;_e.prototype=Object.assign(Object.create(Pt.prototype),{constructor:_e,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Zn.setFromAxisAngle(t,e),this.quaternion.multiply(Zn),this},rotateOnWorldAxis:function(t,e){return Zn.setFromAxisAngle(t,e),this.quaternion.premultiply(Zn),this},rotateX:function(t){return this.rotateOnAxis(Eo,t)},rotateY:function(t){return this.rotateOnAxis(To,t)},rotateZ:function(t){return this.rotateOnAxis(Ao,t)},translateOnAxis:function(t,e){return So.copy(t).applyQuaternion(this.quaternion),this.position.add(So.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(Eo,t)},translateY:function(t){return this.translateOnAxis(To,t)},translateZ:function(t){return this.translateOnAxis(Ao,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Qt.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Ss.copy(t):Ss.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ni.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qt.lookAt(Ni,Ss,this.up):Qt.lookAt(Ss,Ni,this.up),this.quaternion.setFromRotationMatrix(Qt),i&&(Qt.extractRotation(i.matrixWorld),Zn.setFromRotationMatrix(Qt),this.quaternion.premultiply(Zn.invert()))},add:function(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(cu)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Po)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(Po)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),Qt.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Qt.multiply(t.parent.matrixWorld)),t.applyMatrix4(Qt),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const r=this.children[n].getObjectByProperty(t,e);if(r!==void 0)return r}},getWorldPosition:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new b),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new ht),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ni,t,ou),t},getWorldScale:function(t){return t===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new b),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ni,lu,t),t},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new b),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)},traverseVisible:function(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const i=this.children;for(let s=0,r=i.length;s<r;s++)i[s].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON());function s(a,o){return a[o.uuid]===void 0&&(a[o.uuid]=o.toJSON(t)),o.uuid}if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const o=a.shapes;if(Array.isArray(o))for(let l=0,c=o.length;l<c;l++){const d=o[l];s(t.shapes,d)}else s(t.shapes,o)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let o=0,l=this.material.length;o<l;o++)a.push(s(t.materials,this.material[o]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const o=this.animations[a];i.animations.push(s(t.animations,o))}}if(e){const a=r(t.geometries),o=r(t.materials),l=r(t.textures),c=r(t.images),d=r(t.shapes),h=r(t.skeletons),f=r(t.animations);a.length>0&&(n.geometries=a),o.length>0&&(n.materials=o),l.length>0&&(n.textures=l),c.length>0&&(n.images=c),d.length>0&&(n.shapes=d),h.length>0&&(n.skeletons=h),f.length>0&&(n.animations=f)}return n.object=i,n;function r(a){const o=[];for(const l in a){const c=a[l];delete c.metadata,o.push(c)}return o}},clone:function(t){return new this.constructor().copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}});const Dr=new b,hu=new b,uu=new pt;class tn{constructor(e,n){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=e!==void 0?e:new b(1,0,0),this.constant=n!==void 0?n:0}set(e,n){return this.normal.copy(e),this.constant=n,this}setComponents(e,n,i,s){return this.normal.set(e,n,i),this.constant=s,this}setFromNormalAndCoplanarPoint(e,n){return this.normal.copy(e),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(e,n,i){const s=Dr.subVectors(i,n).cross(hu.subVectors(e,n)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}clone(){return new this.constructor().copy(this)}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,n){return n===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),n=new b),n.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,n){n===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),n=new b);const i=e.delta(Dr),s=this.normal.dot(i);if(s===0)return this.distanceToPoint(e.start)===0?n.copy(e.start):void 0;const r=-(e.start.dot(this.normal)+this.constant)/s;if(!(r<0||r>1))return n.copy(i).multiplyScalar(r).add(e.start)}intersectsLine(e){const n=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return n<0&&i>0||i<0&&n>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new b),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,n){const i=n||uu.getNormalMatrix(e),s=this.coplanarPoint(Dr).applyMatrix4(e),r=this.normal.applyMatrix3(i).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}const Rt=new b,$t=new b,Fr=new b,en=new b,Jn=new b,Kn=new b,Lo=new b,Nr=new b,zr=new b,Br=new b;class ot{constructor(e,n,i){this.a=e!==void 0?e:new b,this.b=n!==void 0?n:new b,this.c=i!==void 0?i:new b}static getNormal(e,n,i,s){s===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),s=new b),s.subVectors(i,n),Rt.subVectors(e,n),s.cross(Rt);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,n,i,s,r){Rt.subVectors(s,n),$t.subVectors(i,n),Fr.subVectors(e,n);const a=Rt.dot(Rt),o=Rt.dot($t),l=Rt.dot(Fr),c=$t.dot($t),d=$t.dot(Fr),h=a*c-o*o;if(r===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),r=new b),h===0)return r.set(-2,-1,-1);const f=1/h,u=(c*l-o*d)*f,p=(a*d-o*l)*f;return r.set(1-u-p,p,u)}static containsPoint(e,n,i,s){return this.getBarycoord(e,n,i,s,en),en.x>=0&&en.y>=0&&en.x+en.y<=1}static getUV(e,n,i,s,r,a,o,l){return this.getBarycoord(e,n,i,s,en),l.set(0,0),l.addScaledVector(r,en.x),l.addScaledVector(a,en.y),l.addScaledVector(o,en.z),l}static isFrontFacing(e,n,i,s){return Rt.subVectors(i,n),$t.subVectors(e,n),Rt.cross($t).dot(s)<0}set(e,n,i){return this.a.copy(e),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(e,n,i,s){return this.a.copy(e[n]),this.b.copy(e[i]),this.c.copy(e[s]),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Rt.subVectors(this.c,this.b),$t.subVectors(this.a,this.b),Rt.cross($t).length()*.5}getMidpoint(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new b),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ot.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new tn),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,n){return ot.getBarycoord(e,this.a,this.b,this.c,n)}getUV(e,n,i,s,r){return ot.getUV(e,this.a,this.b,this.c,n,i,s,r)}containsPoint(e){return ot.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ot.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,n){n===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),n=new b);const i=this.a,s=this.b,r=this.c;let a,o;Jn.subVectors(s,i),Kn.subVectors(r,i),Nr.subVectors(e,i);const l=Jn.dot(Nr),c=Kn.dot(Nr);if(l<=0&&c<=0)return n.copy(i);zr.subVectors(e,s);const d=Jn.dot(zr),h=Kn.dot(zr);if(d>=0&&h<=d)return n.copy(s);const f=l*h-d*c;if(f<=0&&l>=0&&d<=0)return a=l/(l-d),n.copy(i).addScaledVector(Jn,a);Br.subVectors(e,r);const u=Jn.dot(Br),p=Kn.dot(Br);if(p>=0&&u<=p)return n.copy(r);const _=u*c-l*p;if(_<=0&&c>=0&&p<=0)return o=c/(c-p),n.copy(i).addScaledVector(Kn,o);const y=d*p-u*h;if(y<=0&&h-d>=0&&u-p>=0)return Lo.subVectors(r,s),o=(h-d)/(h-d+(u-p)),n.copy(s).addScaledVector(Lo,o);const g=1/(y+_+f);return a=_*g,o=f*g,n.copy(i).addScaledVector(Jn,a).addScaledVector(Kn,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Ul={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={h:0,s:0,l:0},Es={h:0,s:0,l:0};function Ur(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+(e-t)*6*n:n<1/2?e:n<2/3?t+(e-t)*6*(2/3-n):t}function Hr(t){return t<.04045?t*.0773993808:Math.pow(t*.9478672986+.0521327014,2.4)}function Gr(t){return t<.0031308?t*12.92:1.055*Math.pow(t,.41666)-.055}class de{constructor(e,n,i){return Object.defineProperty(this,"isColor",{value:!0}),n===void 0&&i===void 0?this.set(e):this.setRGB(e,n,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this}setRGB(e,n,i){return this.r=e,this.g=n,this.b=i,this}setHSL(e,n,i){if(e=Me.euclideanModulo(e,1),n=Me.clamp(n,0,1),i=Me.clamp(i,0,1),n===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+n):i+n-i*n,r=2*i-s;this.r=Ur(r,s,e+1/3),this.g=Ur(r,s,e),this.b=Ur(r,s,e-1/3)}return this}setStyle(e){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){let s;const r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(s=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,n(s[5]),this;if(s=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,n(s[5]),this;break;case"hsl":case"hsla":if(s=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){const o=parseFloat(s[1])/360,l=parseInt(s[2],10)/100,c=parseInt(s[3],10)/100;return n(s[5]),this.setHSL(o,l,c)}break}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(e)){const s=i[1],r=s.length;if(r===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,this;if(r===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}setColorName(e){const n=Ul[e];return n!==void 0?this.setHex(n):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,n=2){return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}copyLinearToGamma(e,n=2){const i=n>0?1/n:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Hr(e.r),this.g=Hr(e.g),this.b=Hr(e.b),this}copyLinearToSRGB(e){return this.r=Gr(e.r),this.g=Gr(e.g),this.b=Gr(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});const n=this.r,i=this.g,s=this.b,r=Math.max(n,i,s),a=Math.min(n,i,s);let o,l;const c=(a+r)/2;if(a===r)o=0,l=0;else{const d=r-a;switch(l=c<=.5?d/(r+a):d/(2-r-a),r){case n:o=(i-s)/d+(i<s?6:0);break;case i:o=(s-n)/d+2;break;case s:o=(n-i)/d+4;break}o/=6}return e.h=o,e.s=l,e.l=c,e}getStyle(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"}offsetHSL(e,n,i){return this.getHSL(kt),kt.h+=e,kt.s+=n,kt.l+=i,this.setHSL(kt.h,kt.s,kt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,n){return this.r=e.r+n.r,this.g=e.g+n.g,this.b=e.b+n.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,n){return this.r+=(e.r-this.r)*n,this.g+=(e.g-this.g)*n,this.b+=(e.b-this.b)*n,this}lerpHSL(e,n){this.getHSL(kt),e.getHSL(Es);const i=Me.lerp(kt.h,Es.h,n),s=Me.lerp(kt.s,Es.s,n),r=Me.lerp(kt.l,Es.l,n);return this.setHSL(i,s,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,n=0){return this.r=e[n],this.g=e[n+1],this.b=e[n+2],this}toArray(e=[],n=0){return e[n]=this.r,e[n+1]=this.g,e[n+2]=this.b,e}fromBufferAttribute(e,n){return this.r=e.getX(n),this.g=e.getY(n),this.b=e.getZ(n),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}de.NAMES=Ul;de.prototype.r=1;de.prototype.g=1;de.prototype.b=1;class Le{constructor(e,n,i,s,r,a=0){this.a=e,this.b=n,this.c=i,this.normal=s&&s.isVector3?s:new b,this.vertexNormals=Array.isArray(s)?s:[],this.color=r&&r.isColor?r:new de,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=a}clone(){return new this.constructor().copy(this)}copy(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(let n=0,i=e.vertexNormals.length;n<i;n++)this.vertexNormals[n]=e.vertexNormals[n].clone();for(let n=0,i=e.vertexColors.length;n<i;n++)this.vertexColors[n]=e.vertexColors[n].clone();return this}}let du=0;function ye(){Object.defineProperty(this,"id",{value:du++}),this.uuid=Me.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=Xi,this.side=yr,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Ol,this.blendDst=Dl,this.blendEquation=ai,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=na,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=tu,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ar,this.stencilZFail=Ar,this.stencilZPass=Ar,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}ye.prototype=Object.assign(Object.create(Pt.prototype),{constructor:ye,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if(e==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Il;continue}const i=this[e];if(i===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}},toJSON:function(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,this.combine!==void 0&&(n.combine=this.combine),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Xi&&(n.blending=this.blending),this.flatShading===!0&&(n.flatShading=this.flatShading),this.side!==yr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(n.morphTargets=!0),this.morphNormals===!0&&(n.morphNormals=!0),this.skinning===!0&&(n.skinning=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const r=[];for(const a in s){const o=s[a];delete o.metadata,r.push(o)}return r}if(e){const s=i(t.textures),r=i(t.images);s.length>0&&(n.textures=s),r.length>0&&(n.images=r)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Object.defineProperty(ye.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});function wn(t){ye.call(this),this.type="MeshBasicMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}wn.prototype=Object.create(ye.prototype);wn.prototype.constructor=wn;wn.prototype.isMeshBasicMaterial=!0;wn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const We=new b,Ts=new H;function xe(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n===!0,this.usage=xr,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(xe.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(xe.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let r=t[i];r===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),r=new de),e[n++]=r.r,e[n++]=r.g,e[n++]=r.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let r=t[i];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),r=new H),e[n++]=r.x,e[n++]=r.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let r=t[i];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),r=new b),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let i=0,s=t.length;i<s;i++){let r=t[i];r===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),r=new ze),e[n++]=r.x,e[n++]=r.y,e[n++]=r.z,e[n++]=r.w}return this},applyMatrix3:function(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Ts.fromBufferAttribute(this,e),Ts.applyMatrix3(t),this.setXY(e,Ts.x,Ts.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)We.fromBufferAttribute(this,e),We.applyMatrix3(t),this.setXYZ(e,We.x,We.y,We.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.applyMatrix4(t),this.setXYZ(e,We.x,We.y,We.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.applyNormalMatrix(t),this.setXYZ(e,We.x,We.y,We.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)We.x=this.getX(e),We.y=this.getY(e),We.z=this.getZ(e),We.transformDirection(t),this.setXYZ(e,We.x,We.y,We.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this},setXYZW:function(t,e,n,i,s){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function sa(t,e,n){xe.call(this,new Int8Array(t),e,n)}sa.prototype=Object.create(xe.prototype);sa.prototype.constructor=sa;function ra(t,e,n){xe.call(this,new Uint8Array(t),e,n)}ra.prototype=Object.create(xe.prototype);ra.prototype.constructor=ra;function aa(t,e,n){xe.call(this,new Uint8ClampedArray(t),e,n)}aa.prototype=Object.create(xe.prototype);aa.prototype.constructor=aa;function oa(t,e,n){xe.call(this,new Int16Array(t),e,n)}oa.prototype=Object.create(xe.prototype);oa.prototype.constructor=oa;function ns(t,e,n){xe.call(this,new Uint16Array(t),e,n)}ns.prototype=Object.create(xe.prototype);ns.prototype.constructor=ns;function la(t,e,n){xe.call(this,new Int32Array(t),e,n)}la.prototype=Object.create(xe.prototype);la.prototype.constructor=la;function is(t,e,n){xe.call(this,new Uint32Array(t),e,n)}is.prototype=Object.create(xe.prototype);is.prototype.constructor=is;function sr(t,e,n){xe.call(this,new Uint16Array(t),e,n)}sr.prototype=Object.create(xe.prototype);sr.prototype.constructor=sr;sr.prototype.isFloat16BufferAttribute=!0;function Ne(t,e,n){xe.call(this,new Float32Array(t),e,n)}Ne.prototype=Object.create(xe.prototype);Ne.prototype.constructor=Ne;function ca(t,e,n){xe.call(this,new Float64Array(t),e,n)}ca.prototype=Object.create(xe.prototype);ca.prototype.constructor=ca;class fu{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(e){const n=[];let i,s,r;const a=e.faces;for(s=0;s<a.length;s++){const o=a[s];o.materialIndex!==r&&(r=o.materialIndex,i!==void 0&&(i.count=s*3-i.start,n.push(i)),i={start:s*3,materialIndex:r})}i!==void 0&&(i.count=s*3-i.start,n.push(i)),this.groups=n}fromGeometry(e){const n=e.faces,i=e.vertices,s=e.faceVertexUvs,r=s[0]&&s[0].length>0,a=s[1]&&s[1].length>0,o=e.morphTargets,l=o.length;let c;if(l>0){c=[];for(let g=0;g<l;g++)c[g]={name:o[g].name,data:[]};this.morphTargets.position=c}const d=e.morphNormals,h=d.length;let f;if(h>0){f=[];for(let g=0;g<h;g++)f[g]={name:d[g].name,data:[]};this.morphTargets.normal=f}const u=e.skinIndices,p=e.skinWeights,_=u.length===i.length,y=p.length===i.length;i.length>0&&n.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let g=0;g<n.length;g++){const m=n[g];this.vertices.push(i[m.a],i[m.b],i[m.c]);const E=m.vertexNormals;if(E.length===3)this.normals.push(E[0],E[1],E[2]);else{const T=m.normal;this.normals.push(T,T,T)}const A=m.vertexColors;if(A.length===3)this.colors.push(A[0],A[1],A[2]);else{const T=m.color;this.colors.push(T,T,T)}if(r===!0){const T=s[0][g];T!==void 0?this.uvs.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",g),this.uvs.push(new H,new H,new H))}if(a===!0){const T=s[1][g];T!==void 0?this.uvs2.push(T[0],T[1],T[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",g),this.uvs2.push(new H,new H,new H))}for(let T=0;T<l;T++){const v=o[T].vertices;c[T].data.push(v[m.a],v[m.b],v[m.c])}for(let T=0;T<h;T++){const v=d[T].vertexNormals[g];f[T].data.push(v.a,v.b,v.c)}_&&this.skinIndices.push(u[m.a],u[m.b],u[m.c]),y&&this.skinWeights.push(p[m.a],p[m.b],p[m.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}}function Hl(t){if(t.length===0)return-1/0;let e=t[0];for(let n=1,i=t.length;n<i;++n)t[n]>e&&(e=t[n]);return e}const pu={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function As(t,e){return new pu[t](e)}let mu=1;const zt=new Te,Vr=new _e,Qn=new b,_t=new An,zi=new An,tt=new b;function Be(){Object.defineProperty(this,"id",{value:mu+=2}),this.uuid=Me.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}Be.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Be,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(Hl(t)>65535?is:ns)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return this.attributes[t]!==void 0},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(t){return zt.makeRotationX(t),this.applyMatrix4(zt),this},rotateY:function(t){return zt.makeRotationY(t),this.applyMatrix4(zt),this},rotateZ:function(t){return zt.makeRotationZ(t),this.applyMatrix4(zt),this},translate:function(t,e,n){return zt.makeTranslation(t,e,n),this.applyMatrix4(zt),this},scale:function(t,e,n){return zt.makeScale(t,e,n),this.applyMatrix4(zt),this},lookAt:function(t){return Vr.lookAt(t),Vr.updateMatrix(),this.applyMatrix4(Vr.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(Qn).negate(),this.translate(Qn.x,Qn.y,Qn.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const n=new Ne(e.vertices.length*3,3),i=new Ne(e.colors.length*3,3);if(this.setAttribute("position",n.copyVector3sArray(e.vertices)),this.setAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const s=new Ne(e.lineDistances.length,1);this.setAttribute("lineDistance",s.copyArray(e.lineDistances))}e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,i=t.length;n<i;n++){const s=t[n];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ne(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let n=e.__directGeometry;if(e.elementsNeedUpdate===!0&&(n=void 0,e.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(e);n.verticesNeedUpdate=e.verticesNeedUpdate,n.normalsNeedUpdate=e.normalsNeedUpdate,n.colorsNeedUpdate=e.colorsNeedUpdate,n.uvsNeedUpdate=e.uvsNeedUpdate,n.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=n}if(e.verticesNeedUpdate===!0){const n=this.attributes.position;n!==void 0&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1}if(e.normalsNeedUpdate===!0){const n=this.attributes.normal;n!==void 0&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1}if(e.colorsNeedUpdate===!0){const n=this.attributes.color;n!==void 0&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const n=this.attributes.uv;n!==void 0&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const n=this.attributes.lineDistance;n!==void 0&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=new fu().fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(t.vertices.length*3);if(this.setAttribute("position",new xe(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const n=new Float32Array(t.normals.length*3);this.setAttribute("normal",new xe(n,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const n=new Float32Array(t.colors.length*3);this.setAttribute("color",new xe(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const n=new Float32Array(t.uvs.length*2);this.setAttribute("uv",new xe(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const n=new Float32Array(t.uvs2.length*2);this.setAttribute("uv2",new xe(n,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const n in t.morphTargets){const i=[],s=t.morphTargets[n];for(let r=0,a=s.length;r<a;r++){const o=s[r],l=new Ne(o.data.length*3,3);l.name=o.name,i.push(l.copyVector3sArray(o.data))}this.morphAttributes[n]=i}if(t.skinIndices.length>0){const n=new Ne(t.skinIndices.length*4,4);this.setAttribute("skinIndex",n.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const n=new Ne(t.skinWeights.length*4,4);this.setAttribute("skinWeight",n.copyVector4sArray(t.skinWeights))}return t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new An);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new b(-1/0,-1/0,-1/0),new b(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];_t.setFromBufferAttribute(s),this.morphTargetsRelative?(tt.addVectors(this.boundingBox.min,_t.min),this.boundingBox.expandByPoint(tt),tt.addVectors(this.boundingBox.max,_t.max),this.boundingBox.expandByPoint(tt)):(this.boundingBox.expandByPoint(_t.min),this.boundingBox.expandByPoint(_t.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Pn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new b,1/0);return}if(t){const n=this.boundingSphere.center;if(_t.setFromBufferAttribute(t),e)for(let s=0,r=e.length;s<r;s++){const a=e[s];zi.setFromBufferAttribute(a),this.morphTargetsRelative?(tt.addVectors(_t.min,zi.min),_t.expandByPoint(tt),tt.addVectors(_t.max,zi.max),_t.expandByPoint(tt)):(_t.expandByPoint(zi.min),_t.expandByPoint(zi.max))}_t.getCenter(n);let i=0;for(let s=0,r=t.count;s<r;s++)tt.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(tt));if(e)for(let s=0,r=e.length;s<r;s++){const a=e[s],o=this.morphTargetsRelative;for(let l=0,c=a.count;l<c;l++)tt.fromBufferAttribute(a,l),o&&(Qn.fromBufferAttribute(t,l),tt.add(Qn)),i=Math.max(i,n.distanceToSquared(tt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new xe(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let h=0,f=n.count;h<f;h++)n.setXYZ(h,0,0,0);const i=new b,s=new b,r=new b,a=new b,o=new b,l=new b,c=new b,d=new b;if(t)for(let h=0,f=t.count;h<f;h+=3){const u=t.getX(h+0),p=t.getX(h+1),_=t.getX(h+2);i.fromBufferAttribute(e,u),s.fromBufferAttribute(e,p),r.fromBufferAttribute(e,_),c.subVectors(r,s),d.subVectors(i,s),c.cross(d),a.fromBufferAttribute(n,u),o.fromBufferAttribute(n,p),l.fromBufferAttribute(n,_),a.add(c),o.add(c),l.add(c),n.setXYZ(u,a.x,a.y,a.z),n.setXYZ(p,o.x,o.y,o.z),n.setXYZ(_,l.x,l.y,l.z)}else for(let h=0,f=e.count;h<f;h+=3)i.fromBufferAttribute(e,h+0),s.fromBufferAttribute(e,h+1),r.fromBufferAttribute(e,h+2),c.subVectors(r,s),d.subVectors(i,s),c.cross(d),n.setXYZ(h+0,c.x,c.y,c.z),n.setXYZ(h+1,c.x,c.y,c.z),n.setXYZ(h+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!(t&&t.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);return}e===void 0&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(t.attributes[i]===void 0)continue;const r=n[i].array,a=t.attributes[i],o=a.array,l=a.itemSize*e,c=Math.min(o.length,r.length-l);for(let d=0,h=l;d<c;d++,h++)r[h]=o[d]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)tt.fromBufferAttribute(t,e),tt.normalize(),t.setXYZ(e,tt.x,tt.y,tt.z)},toNonIndexed:function(){function t(a,o){const l=a.array,c=a.itemSize,d=a.normalized,h=new l.constructor(o.length*c);let f=0,u=0;for(let p=0,_=o.length;p<_;p++){f=o[p]*c;for(let y=0;y<c;y++)h[u++]=l[f++]}return new xe(h,c,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new Be,n=this.index.array,i=this.attributes;for(const a in i){const o=i[a],l=t(o,n);e.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const o=[],l=s[a];for(let c=0,d=l.length;c<d;c++){const h=l[c],f=t(h,n);o.push(f)}e.morphAttributes[a]=o}e.morphTargetsRelative=this.morphTargetsRelative;const r=this.groups;for(let a=0,o=r.length;a<o;a++){const l=r[a];e.addGroup(l.start,l.count,l.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const o=this.parameters;for(const l in o)o[l]!==void 0&&(t[l]=o[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const o in n){const l=n[o],c=l.toJSON(t.data);l.name!==""&&(c.name=l.name),t.data.attributes[o]=c}const i={};let s=!1;for(const o in this.morphAttributes){const l=this.morphAttributes[o],c=[];for(let d=0,h=l.length;d<h;d++){const f=l[d],u=f.toJSON(t.data);f.name!==""&&(u.name=f.name),c.push(u)}c.length>0&&(i[o]=c,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const r=this.groups;r.length>0&&(t.data.groups=JSON.parse(JSON.stringify(r)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t},clone:function(){return new Be().copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const l in i){const c=i[l];this.setAttribute(l,c.clone(e))}const s=t.morphAttributes;for(const l in s){const c=[],d=s[l];for(let h=0,f=d.length;h<f;h++)c.push(d[h].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const r=t.groups;for(let l=0,c=r.length;l<c;l++){const d=r[l];this.addGroup(d.start,d.count,d.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const o=t.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const Co=new Te,kn=new gs,Wr=new Pn,dn=new b,fn=new b,pn=new b,jr=new b,qr=new b,Xr=new b,Ps=new b,Ls=new b,Cs=new b,ci=new H,hi=new H,ui=new H,Ji=new b,Rs=new b;function $e(t,e){_e.call(this),this.type="Mesh",this.geometry=t!==void 0?t:new Be,this.material=e!==void 0?e:new wn,this.updateMorphTargets()}$e.prototype=Object.assign(Object.create(_e.prototype),{constructor:$e,isMesh:!0,copy:function(t){return _e.prototype.copy.call(this,t),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Wr.copy(n.boundingSphere),Wr.applyMatrix4(s),t.ray.intersectsSphere(Wr)===!1)||(Co.copy(s).invert(),kn.copy(t.ray).applyMatrix4(Co),n.boundingBox!==null&&kn.intersectsBox(n.boundingBox)===!1))return;let r;if(n.isBufferGeometry){const a=n.index,o=n.attributes.position,l=n.morphAttributes.position,c=n.morphTargetsRelative,d=n.attributes.uv,h=n.attributes.uv2,f=n.groups,u=n.drawRange;if(a!==null)if(Array.isArray(i))for(let p=0,_=f.length;p<_;p++){const y=f[p],g=i[y.materialIndex],m=Math.max(y.start,u.start),E=Math.min(y.start+y.count,u.start+u.count);for(let A=m,T=E;A<T;A+=3){const v=a.getX(A),P=a.getX(A+1),U=a.getX(A+2);r=ks(this,g,t,kn,o,l,c,d,h,v,P,U),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=y.materialIndex,e.push(r))}}else{const p=Math.max(0,u.start),_=Math.min(a.count,u.start+u.count);for(let y=p,g=_;y<g;y+=3){const m=a.getX(y),E=a.getX(y+1),A=a.getX(y+2);r=ks(this,i,t,kn,o,l,c,d,h,m,E,A),r&&(r.faceIndex=Math.floor(y/3),e.push(r))}}else if(o!==void 0)if(Array.isArray(i))for(let p=0,_=f.length;p<_;p++){const y=f[p],g=i[y.materialIndex],m=Math.max(y.start,u.start),E=Math.min(y.start+y.count,u.start+u.count);for(let A=m,T=E;A<T;A+=3){const v=A,P=A+1,U=A+2;r=ks(this,g,t,kn,o,l,c,d,h,v,P,U),r&&(r.faceIndex=Math.floor(A/3),r.face.materialIndex=y.materialIndex,e.push(r))}}else{const p=Math.max(0,u.start),_=Math.min(o.count,u.start+u.count);for(let y=p,g=_;y<g;y+=3){const m=y,E=y+1,A=y+2;r=ks(this,i,t,kn,o,l,c,d,h,m,E,A),r&&(r.faceIndex=Math.floor(y/3),e.push(r))}}}else if(n.isGeometry){const a=Array.isArray(i),o=n.vertices,l=n.faces;let c;const d=n.faceVertexUvs[0];d.length>0&&(c=d);for(let h=0,f=l.length;h<f;h++){const u=l[h],p=a?i[u.materialIndex]:i;if(p===void 0)continue;const _=o[u.a],y=o[u.b],g=o[u.c];if(r=Gl(this,p,t,kn,_,y,g,Ji),r){if(c&&c[h]){const m=c[h];ci.copy(m[0]),hi.copy(m[1]),ui.copy(m[2]),r.uv=ot.getUV(Ji,_,y,g,ci,hi,ui,new H)}r.face=u,r.faceIndex=h,e.push(r)}}}}});function Gl(t,e,n,i,s,r,a,o){let l;if(e.side===nt?l=i.intersectTriangle(a,r,s,!0,o):l=i.intersectTriangle(s,r,a,e.side!==Ti,o),l===null)return null;Rs.copy(o),Rs.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(Rs);return c<n.near||c>n.far?null:{distance:c,point:Rs.clone(),object:t}}function ks(t,e,n,i,s,r,a,o,l,c,d,h){dn.fromBufferAttribute(s,c),fn.fromBufferAttribute(s,d),pn.fromBufferAttribute(s,h);const f=t.morphTargetInfluences;if(e.morphTargets&&r&&f){Ps.set(0,0,0),Ls.set(0,0,0),Cs.set(0,0,0);for(let p=0,_=r.length;p<_;p++){const y=f[p],g=r[p];y!==0&&(jr.fromBufferAttribute(g,c),qr.fromBufferAttribute(g,d),Xr.fromBufferAttribute(g,h),a?(Ps.addScaledVector(jr,y),Ls.addScaledVector(qr,y),Cs.addScaledVector(Xr,y)):(Ps.addScaledVector(jr.sub(dn),y),Ls.addScaledVector(qr.sub(fn),y),Cs.addScaledVector(Xr.sub(pn),y)))}dn.add(Ps),fn.add(Ls),pn.add(Cs)}t.isSkinnedMesh&&(t.boneTransform(c,dn),t.boneTransform(d,fn),t.boneTransform(h,pn));const u=Gl(t,e,n,i,dn,fn,pn,Ji);if(u){o&&(ci.fromBufferAttribute(o,c),hi.fromBufferAttribute(o,d),ui.fromBufferAttribute(o,h),u.uv=ot.getUV(Ji,dn,fn,pn,ci,hi,ui,new H)),l&&(ci.fromBufferAttribute(l,c),hi.fromBufferAttribute(l,d),ui.fromBufferAttribute(l,h),u.uv2=ot.getUV(Ji,dn,fn,pn,ci,hi,ui,new H));const p=new Le(c,d,h);ot.getNormal(dn,fn,pn,p.normal),u.face=p}return u}class Ha extends Be{constructor(e=1,n=1,i=1,s=1,r=1,a=1){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],d=[],h=[];let f=0,u=0;p("z","y","x",-1,-1,i,n,e,a,r,0),p("z","y","x",1,-1,i,n,-e,a,r,1),p("x","z","y",1,1,e,i,n,s,a,2),p("x","z","y",1,-1,e,i,-n,s,a,3),p("x","y","z",1,-1,e,n,i,s,r,4),p("x","y","z",-1,-1,e,n,-i,s,r,5),this.setIndex(l),this.setAttribute("position",new Ne(c,3)),this.setAttribute("normal",new Ne(d,3)),this.setAttribute("uv",new Ne(h,2));function p(_,y,g,m,E,A,T,v,P,U,K){const le=A/P,C=T/U,B=A/2,D=T/2,z=v/2,k=P+1,I=U+1;let G=0,j=0;const se=new b;for(let ce=0;ce<I;ce++){const oe=ce*C-D;for(let be=0;be<k;be++){const we=be*le-B;se[_]=we*m,se[y]=oe*E,se[g]=z,c.push(se.x,se.y,se.z),se[_]=0,se[y]=0,se[g]=v>0?1:-1,d.push(se.x,se.y,se.z),h.push(be/P),h.push(1-ce/U),G+=1}}for(let ce=0;ce<U;ce++)for(let oe=0;oe<P;oe++){const be=f+oe+k*ce,we=f+oe+k*(ce+1),He=f+(oe+1)+k*(ce+1),W=f+(oe+1)+k*ce;l.push(be,we,W),l.push(we,He,W),j+=6}o.addGroup(u,j,K),u+=j,f+=G}}}function gi(t){const e={};for(const n in t){e[n]={};for(const i in t[n]){const s=t[n][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture)?e[n][i]=s.clone():Array.isArray(s)?e[n][i]=s.slice():e[n][i]=s}}return e}function at(t){const e={};for(let n=0;n<t.length;n++){const i=gi(t[n]);for(const s in i)e[s]=i[s]}return e}const gu={clone:gi,merge:at};var _u=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yu=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function dt(t){ye.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=_u,this.fragmentShader=yu,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&(t.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}dt.prototype=Object.create(ye.prototype);dt.prototype.constructor=dt;dt.prototype.isShaderMaterial=!0;dt.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=gi(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this};dt.prototype.toJSON=function(t){const e=ye.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const r=this.uniforms[i].value;r&&r.isTexture?e.uniforms[i]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[i]={type:"m4",value:r.toArray()}:e.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e};function Mn(){_e.call(this),this.type="Camera",this.matrixWorldInverse=new Te,this.projectionMatrix=new Te,this.projectionMatrixInverse=new Te}Mn.prototype=Object.assign(Object.create(_e.prototype),{constructor:Mn,isCamera:!0,copy:function(t,e){return _e.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){t===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new b),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){_e.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){_e.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return new this.constructor().copy(this)}});function it(t=50,e=1,n=.1,i=2e3){Mn.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}it.prototype=Object.assign(Object.create(Mn.prototype),{constructor:it,isPerspectiveCamera:!0,copy:function(t,e){return Mn.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=Me.RAD2DEG*2*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(Me.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/t},getEffectiveFOV:function(){return Me.RAD2DEG*2*Math.atan(Math.tan(Me.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,i,s,r){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(Me.DEG2RAD*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const r=this.view;if(this.view!==null&&this.view.enabled){const o=r.fullWidth,l=r.fullHeight;s+=r.offsetX*i/o,e-=r.offsetY*n/l,i*=r.width/o,n*=r.height/l}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=_e.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const $n=90,ei=1;function _i(t,e,n){if(_e.call(this),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new it($n,ei,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new b(1,0,0)),this.add(i);const s=new it($n,ei,t,e);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new b(-1,0,0)),this.add(s);const r=new it($n,ei,t,e);r.layers=this.layers,r.up.set(0,0,1),r.lookAt(new b(0,1,0)),this.add(r);const a=new it($n,ei,t,e);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new b(0,-1,0)),this.add(a);const o=new it($n,ei,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new b(0,0,1)),this.add(o);const l=new it($n,ei,t,e);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new b(0,0,-1)),this.add(l),this.update=function(c,d){this.parent===null&&this.updateMatrixWorld();const h=c.xr.enabled,f=c.getRenderTarget();c.xr.enabled=!1;const u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,c.setRenderTarget(n,0),c.render(d,i),c.setRenderTarget(n,1),c.render(d,s),c.setRenderTarget(n,2),c.render(d,r),c.setRenderTarget(n,3),c.render(d,a),c.setRenderTarget(n,4),c.render(d,o),n.texture.generateMipmaps=u,c.setRenderTarget(n,5),c.render(d,l),c.setRenderTarget(f),c.xr.enabled=h}}_i.prototype=Object.create(_e.prototype);_i.prototype.constructor=_i;function Sn(t,e,n,i,s,r,a,o,l,c){t=t!==void 0?t:[],e=e!==void 0?e:Da,a=a!==void 0?a:On,je.call(this,t,e,n,i,s,r,a,o,l,c),this.flipY=!1,this._needsFlipEnvMap=!0}Sn.prototype=Object.create(je.prototype);Sn.prototype.constructor=Sn;Sn.prototype.isCubeTexture=!0;Object.defineProperty(Sn.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});function Dn(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),Nt.call(this,t,t,e),e=e||{},this.texture=new Sn(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}Dn.prototype=Object.create(Nt.prototype);Dn.prototype.constructor=Dn;Dn.prototype.isWebGLCubeRenderTarget=!0;Dn.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=Ft,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

			varying vec3 vWorldDirection;

			vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

				return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

			}

			void main() {

				vWorldDirection = transformDirection( position, modelMatrix );

				#include <begin_vertex>
				#include <project_vertex>

			}
		`,fragmentShader:`

			uniform sampler2D tEquirect;

			varying vec3 vWorldDirection;

			#include <common>

			void main() {

				vec3 direction = normalize( vWorldDirection );

				vec2 sampleUV = equirectUv( direction );

				gl_FragColor = texture2D( tEquirect, sampleUV );

			}
		`},i=new Ha(5,5,5),s=new dt({name:"CubemapFromEquirect",uniforms:gi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:nt,blending:qi});s.uniforms.tEquirect.value=e;const r=new $e(i,s),a=e.minFilter;return e.minFilter===vr&&(e.minFilter=lt),new _i(1,10,this).update(t,r),e.minFilter=a,r.geometry.dispose(),r.material.dispose(),this};Dn.prototype.clear=function(t,e,n,i){const s=t.getRenderTarget();for(let r=0;r<6;r++)t.setRenderTarget(this,r),t.clear(e,n,i);t.setRenderTarget(s)};function yi(t,e,n,i,s,r,a,o,l,c,d,h){je.call(this,null,r,a,o,l,c,i,s,d,h),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=l!==void 0?l:rt,this.minFilter=c!==void 0?c:rt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}yi.prototype=Object.create(je.prototype);yi.prototype.constructor=yi;yi.prototype.isDataTexture=!0;const ti=new Pn,Is=new b;class wr{constructor(e,n,i,s,r,a){this.planes=[e!==void 0?e:new tn,n!==void 0?n:new tn,i!==void 0?i:new tn,s!==void 0?s:new tn,r!==void 0?r:new tn,a!==void 0?a:new tn]}set(e,n,i,s,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(n),o[2].copy(i),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}clone(){return new this.constructor().copy(this)}copy(e){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const n=this.planes,i=e.elements,s=i[0],r=i[1],a=i[2],o=i[3],l=i[4],c=i[5],d=i[6],h=i[7],f=i[8],u=i[9],p=i[10],_=i[11],y=i[12],g=i[13],m=i[14],E=i[15];return n[0].setComponents(o-s,h-l,_-f,E-y).normalize(),n[1].setComponents(o+s,h+l,_+f,E+y).normalize(),n[2].setComponents(o+r,h+c,_+u,E+g).normalize(),n[3].setComponents(o-r,h-c,_-u,E-g).normalize(),n[4].setComponents(o-a,h-d,_-p,E-m).normalize(),n[5].setComponents(o+a,h+d,_+p,E+m).normalize(),this}intersectsObject(e){const n=e.geometry;return n.boundingSphere===null&&n.computeBoundingSphere(),ti.copy(n.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ti)}intersectsSprite(e){return ti.center.set(0,0,0),ti.radius=.7071067811865476,ti.applyMatrix4(e.matrixWorld),this.intersectsSphere(ti)}intersectsSphere(e){const n=this.planes,i=e.center,s=-e.radius;for(let r=0;r<6;r++)if(n[r].distanceToPoint(i)<s)return!1;return!0}intersectsBox(e){const n=this.planes;for(let i=0;i<6;i++){const s=n[i];if(Is.x=s.normal.x>0?e.max.x:e.min.x,Is.y=s.normal.y>0?e.max.y:e.min.y,Is.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Is)<0)return!1}return!0}containsPoint(e){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(e)<0)return!1;return!0}}function Vl(){let t=null,e=!1,n=null,i=null;function s(r,a){n(r,a),i=t.requestAnimationFrame(s)}return{start:function(){e!==!0&&n!==null&&(i=t.requestAnimationFrame(s),e=!0)},stop:function(){t.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(r){n=r},setContext:function(r){t=r}}}function bu(t,e){const n=e.isWebGL2,i=new WeakMap;function s(c,d){const h=c.array,f=c.usage,u=t.createBuffer();t.bindBuffer(d,u),t.bufferData(d,h,f),c.onUploadCallback();let p=5126;return h instanceof Float32Array?p=5126:h instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):h instanceof Uint16Array?c.isFloat16BufferAttribute?n?p=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):p=5123:h instanceof Int16Array?p=5122:h instanceof Uint32Array?p=5125:h instanceof Int32Array?p=5124:h instanceof Int8Array?p=5120:h instanceof Uint8Array&&(p=5121),{buffer:u,type:p,bytesPerElement:h.BYTES_PER_ELEMENT,version:c.version}}function r(c,d,h){const f=d.array,u=d.updateRange;t.bindBuffer(h,c),u.count===-1?t.bufferSubData(h,0,f):(n?t.bufferSubData(h,u.offset*f.BYTES_PER_ELEMENT,f,u.offset,u.count):t.bufferSubData(h,u.offset*f.BYTES_PER_ELEMENT,f.subarray(u.offset,u.offset+u.count)),u.count=-1)}function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d&&(t.deleteBuffer(d.buffer),i.delete(c))}function l(c,d){if(c.isGLBufferAttribute){const f=i.get(c);(!f||f.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const h=i.get(c);h===void 0?i.set(c,s(c,d)):h.version<c.version&&(r(h.buffer,c,d),h.version=c.version)}return{get:a,remove:o,update:l}}class vu extends Be{constructor(e=1,n=1,i=1,s=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:e,height:n,widthSegments:i,heightSegments:s};const r=e/2,a=n/2,o=Math.floor(i),l=Math.floor(s),c=o+1,d=l+1,h=e/o,f=n/l,u=[],p=[],_=[],y=[];for(let g=0;g<d;g++){const m=g*f-a;for(let E=0;E<c;E++){const A=E*h-r;p.push(A,-m,0),_.push(0,0,1),y.push(E/o),y.push(1-g/l)}}for(let g=0;g<l;g++)for(let m=0;m<o;m++){const E=m+c*g,A=m+c*(g+1),T=m+1+c*(g+1),v=m+1+c*g;u.push(E,A,v),u.push(A,T,v)}this.setIndex(u),this.setAttribute("position",new Ne(p,3)),this.setAttribute("normal",new Ne(_,3)),this.setAttribute("uv",new Ne(y,2))}}var xu=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,wu=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Mu=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,Su=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,Eu=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Tu="vec3 transformed = vec3( position );",Au=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Pu=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,Lu=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Cu=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Ru=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ku=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Iu=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Ou=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,Du=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,Fu=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Nu=`#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor.xyz *= color.xyz;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,zu=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Bu=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_maxMipLevel 8.0
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_maxTileSize 256.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		float texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );
		vec2 f = fract( uv );
		uv += 0.5 - f;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		if ( mipInt < cubeUV_maxMipLevel ) {
			uv.y += 2.0 * cubeUV_maxTileSize;
		}
		uv.y += filterInt * 2.0 * cubeUV_minTileSize;
		uv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );
		uv *= texelSize;
		vec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x += texelSize;
		vec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.y += texelSize;
		vec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		uv.x -= texelSize;
		vec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;
		vec3 tm = mix( tl, tr, f.x );
		vec3 bm = mix( bl, br, f.x );
		return mix( tm, bm, f.y );
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Uu=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Hu=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Gu=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Vu=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Wu=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ju="gl_FragColor = linearToOutputTexel( gl_FragColor );",qu=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value ) {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,Xu=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Yu=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Zu=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Ju=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Ku=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Qu=`#ifdef USE_FOG
	fogDepth = - mvPosition.z;
#endif`,$u=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,ed=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,td=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,nd=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,id=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,sd=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,rd=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
	#pragma unroll_loop_end
#endif`,ad=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,od=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
			vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,ld=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,cd=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,hd=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,ud=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,dd=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,fd=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float specularRoughness;
	vec3 specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,pd=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,md=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,gd=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_d=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,yd=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bd=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,vd=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,xd=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,wd=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Md=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Sd=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Ed=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Td=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Ad=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,Pd=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
		uniform float morphTargetInfluences[ 8 ];
	#else
		uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,Ld=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
		transformed += morphTarget4 * morphTargetInfluences[ 4 ];
		transformed += morphTarget5 * morphTargetInfluences[ 5 ];
		transformed += morphTarget6 * morphTargetInfluences[ 6 ];
		transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,Cd=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Rd=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,kd=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,Id=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Od=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,Dd=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Fd=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Nd=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,zd=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Bd=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Ud=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Hd=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gd=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Vd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Wd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,jd=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,qd=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Xd=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Yd=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Zd=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Jd=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Kd=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Qd=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$d=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,ef=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,tf=`#ifdef USE_TRANSMISSIONMAP
	totalTransmission *= texture2D( transmissionMap, vUv ).r;
#endif`,nf=`#ifdef USE_TRANSMISSIONMAP
	uniform sampler2D transmissionMap;
#endif`,sf=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,rf=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,af=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,of=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,lf=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,cf=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,hf=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,uf=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,df=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,ff=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,pf=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,mf=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,gf=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,_f=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,yf=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,bf=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vf=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,xf=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wf=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Mf=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sf=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Ef=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Tf=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Af=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pf=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Lf=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Cf=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Rf=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kf=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,If=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSMISSION
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSMISSION
	uniform float transmission;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <transmissionmap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#ifdef TRANSMISSION
		float totalTransmission = transmission;
	#endif
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <transmissionmap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSMISSION
		diffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Of=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Df=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,Ff=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Nf=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,zf=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Bf=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Uf=`#include <common>
#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Hf=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Gf=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`;const Ce={alphamap_fragment:xu,alphamap_pars_fragment:wu,alphatest_fragment:Mu,aomap_fragment:Su,aomap_pars_fragment:Eu,begin_vertex:Tu,beginnormal_vertex:Au,bsdfs:Pu,bumpmap_pars_fragment:Lu,clipping_planes_fragment:Cu,clipping_planes_pars_fragment:Ru,clipping_planes_pars_vertex:ku,clipping_planes_vertex:Iu,color_fragment:Ou,color_pars_fragment:Du,color_pars_vertex:Fu,color_vertex:Nu,common:zu,cube_uv_reflection_fragment:Bu,defaultnormal_vertex:Uu,displacementmap_pars_vertex:Hu,displacementmap_vertex:Gu,emissivemap_fragment:Vu,emissivemap_pars_fragment:Wu,encodings_fragment:ju,encodings_pars_fragment:qu,envmap_fragment:Xu,envmap_common_pars_fragment:Yu,envmap_pars_fragment:Zu,envmap_pars_vertex:Ju,envmap_physical_pars_fragment:od,envmap_vertex:Ku,fog_vertex:Qu,fog_pars_vertex:$u,fog_fragment:ed,fog_pars_fragment:td,gradientmap_pars_fragment:nd,lightmap_fragment:id,lightmap_pars_fragment:sd,lights_lambert_vertex:rd,lights_pars_begin:ad,lights_toon_fragment:ld,lights_toon_pars_fragment:cd,lights_phong_fragment:hd,lights_phong_pars_fragment:ud,lights_physical_fragment:dd,lights_physical_pars_fragment:fd,lights_fragment_begin:pd,lights_fragment_maps:md,lights_fragment_end:gd,logdepthbuf_fragment:_d,logdepthbuf_pars_fragment:yd,logdepthbuf_pars_vertex:bd,logdepthbuf_vertex:vd,map_fragment:xd,map_pars_fragment:wd,map_particle_fragment:Md,map_particle_pars_fragment:Sd,metalnessmap_fragment:Ed,metalnessmap_pars_fragment:Td,morphnormal_vertex:Ad,morphtarget_pars_vertex:Pd,morphtarget_vertex:Ld,normal_fragment_begin:Cd,normal_fragment_maps:Rd,normalmap_pars_fragment:kd,clearcoat_normal_fragment_begin:Id,clearcoat_normal_fragment_maps:Od,clearcoat_pars_fragment:Dd,packing:Fd,premultiplied_alpha_fragment:Nd,project_vertex:zd,dithering_fragment:Bd,dithering_pars_fragment:Ud,roughnessmap_fragment:Hd,roughnessmap_pars_fragment:Gd,shadowmap_pars_fragment:Vd,shadowmap_pars_vertex:Wd,shadowmap_vertex:jd,shadowmask_pars_fragment:qd,skinbase_vertex:Xd,skinning_pars_vertex:Yd,skinning_vertex:Zd,skinnormal_vertex:Jd,specularmap_fragment:Kd,specularmap_pars_fragment:Qd,tonemapping_fragment:$d,tonemapping_pars_fragment:ef,transmissionmap_fragment:tf,transmissionmap_pars_fragment:nf,uv_pars_fragment:sf,uv_pars_vertex:rf,uv_vertex:af,uv2_pars_fragment:of,uv2_pars_vertex:lf,uv2_vertex:cf,worldpos_vertex:hf,background_frag:uf,background_vert:df,cube_frag:ff,cube_vert:pf,depth_frag:mf,depth_vert:gf,distanceRGBA_frag:_f,distanceRGBA_vert:yf,equirect_frag:bf,equirect_vert:vf,linedashed_frag:xf,linedashed_vert:wf,meshbasic_frag:Mf,meshbasic_vert:Sf,meshlambert_frag:Ef,meshlambert_vert:Tf,meshmatcap_frag:Af,meshmatcap_vert:Pf,meshtoon_frag:Lf,meshtoon_vert:Cf,meshphong_frag:Rf,meshphong_vert:kf,meshphysical_frag:If,meshphysical_vert:Of,normal_frag:Df,normal_vert:Ff,points_frag:Nf,points_vert:zf,shadow_frag:Bf,shadow_vert:Uf,sprite_frag:Hf,sprite_vert:Gf},ne={common:{diffuse:{value:new de(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new pt},uv2Transform:{value:new pt},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new H(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new de(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new de(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pt}},sprite:{diffuse:{value:new de(15658734)},opacity:{value:1},center:{value:new H(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new pt}}},Ot={basic:{uniforms:at([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.fog]),vertexShader:Ce.meshbasic_vert,fragmentShader:Ce.meshbasic_frag},lambert:{uniforms:at([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.fog,ne.lights,{emissive:{value:new de(0)}}]),vertexShader:Ce.meshlambert_vert,fragmentShader:Ce.meshlambert_frag},phong:{uniforms:at([ne.common,ne.specularmap,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,ne.lights,{emissive:{value:new de(0)},specular:{value:new de(1118481)},shininess:{value:30}}]),vertexShader:Ce.meshphong_vert,fragmentShader:Ce.meshphong_frag},standard:{uniforms:at([ne.common,ne.envmap,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.roughnessmap,ne.metalnessmap,ne.fog,ne.lights,{emissive:{value:new de(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ce.meshphysical_vert,fragmentShader:Ce.meshphysical_frag},toon:{uniforms:at([ne.common,ne.aomap,ne.lightmap,ne.emissivemap,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.gradientmap,ne.fog,ne.lights,{emissive:{value:new de(0)}}]),vertexShader:Ce.meshtoon_vert,fragmentShader:Ce.meshtoon_frag},matcap:{uniforms:at([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,ne.fog,{matcap:{value:null}}]),vertexShader:Ce.meshmatcap_vert,fragmentShader:Ce.meshmatcap_frag},points:{uniforms:at([ne.points,ne.fog]),vertexShader:Ce.points_vert,fragmentShader:Ce.points_frag},dashed:{uniforms:at([ne.common,ne.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ce.linedashed_vert,fragmentShader:Ce.linedashed_frag},depth:{uniforms:at([ne.common,ne.displacementmap]),vertexShader:Ce.depth_vert,fragmentShader:Ce.depth_frag},normal:{uniforms:at([ne.common,ne.bumpmap,ne.normalmap,ne.displacementmap,{opacity:{value:1}}]),vertexShader:Ce.normal_vert,fragmentShader:Ce.normal_frag},sprite:{uniforms:at([ne.sprite,ne.fog]),vertexShader:Ce.sprite_vert,fragmentShader:Ce.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null}},vertexShader:Ce.background_vert,fragmentShader:Ce.background_frag},cube:{uniforms:at([ne.envmap,{opacity:{value:1}}]),vertexShader:Ce.cube_vert,fragmentShader:Ce.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ce.equirect_vert,fragmentShader:Ce.equirect_frag},distanceRGBA:{uniforms:at([ne.common,ne.displacementmap,{referencePosition:{value:new b},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ce.distanceRGBA_vert,fragmentShader:Ce.distanceRGBA_frag},shadow:{uniforms:at([ne.lights,ne.fog,{color:{value:new de(0)},opacity:{value:1}}]),vertexShader:Ce.shadow_vert,fragmentShader:Ce.shadow_frag}};Ot.physical={uniforms:at([Ot.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new H(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new de(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ce.meshphysical_vert,fragmentShader:Ce.meshphysical_frag};function Vf(t,e,n,i,s){const r=new de(0);let a=0,o,l,c=null,d=0,h=null;function f(p,_,y,g){let m=_.isScene===!0?_.background:null;m&&m.isTexture&&(m=e.get(m));const E=t.xr,A=E.getSession&&E.getSession();A&&A.environmentBlendMode==="additive"&&(m=null),m===null?u(r,a):m&&m.isColor&&(u(m,1),g=!0),(t.autoClear||g)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||m.mapping===Na)?(l===void 0&&(l=new $e(new Ha(1,1,1),new dt({name:"BackgroundCubeMaterial",uniforms:gi(Ot.cube.uniforms),vertexShader:Ot.cube.vertexShader,fragmentShader:Ot.cube.fragmentShader,side:nt,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(T,v,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),m.isWebGLCubeRenderTarget&&(m=m.texture),l.material.uniforms.envMap.value=m,l.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,(c!==m||d!==m.version||h!==t.toneMapping)&&(l.material.needsUpdate=!0,c=m,d=m.version,h=t.toneMapping),p.unshift(l,l.geometry,l.material,0,0,null)):m&&m.isTexture&&(o===void 0&&(o=new $e(new vu(2,2),new dt({name:"BackgroundMaterial",uniforms:gi(Ot.background.uniforms),vertexShader:Ot.background.vertexShader,fragmentShader:Ot.background.fragmentShader,side:yr,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),Object.defineProperty(o.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(o)),o.material.uniforms.t2D.value=m,m.matrixAutoUpdate===!0&&m.updateMatrix(),o.material.uniforms.uvTransform.value.copy(m.matrix),(c!==m||d!==m.version||h!==t.toneMapping)&&(o.material.needsUpdate=!0,c=m,d=m.version,h=t.toneMapping),p.unshift(o,o.geometry,o.material,0,0,null))}function u(p,_){n.buffers.color.setClear(p.r,p.g,p.b,_,s)}return{getClearColor:function(){return r},setClearColor:function(p,_=1){r.set(p),a=_,u(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(p){a=p,u(r,a)},render:f}}function Wf(t,e,n,i){const s=t.getParameter(34921),r=i.isWebGL2?null:e.get("OES_vertex_array_object"),a=i.isWebGL2||r!==null,o={},l=_(null);let c=l;function d(D,z,k,I,G){let j=!1;if(a){const se=p(I,k,z);c!==se&&(c=se,f(c.object)),j=y(I,G),j&&g(I,G)}else{const se=z.wireframe===!0;(c.geometry!==I.id||c.program!==k.id||c.wireframe!==se)&&(c.geometry=I.id,c.program=k.id,c.wireframe=se,j=!0)}D.isInstancedMesh===!0&&(j=!0),G!==null&&n.update(G,34963),j&&(P(D,z,k,I),G!==null&&t.bindBuffer(34963,n.get(G).buffer))}function h(){return i.isWebGL2?t.createVertexArray():r.createVertexArrayOES()}function f(D){return i.isWebGL2?t.bindVertexArray(D):r.bindVertexArrayOES(D)}function u(D){return i.isWebGL2?t.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function p(D,z,k){const I=k.wireframe===!0;let G=o[D.id];G===void 0&&(G={},o[D.id]=G);let j=G[z.id];j===void 0&&(j={},G[z.id]=j);let se=j[I];return se===void 0&&(se=_(h()),j[I]=se),se}function _(D){const z=[],k=[],I=[];for(let G=0;G<s;G++)z[G]=0,k[G]=0,I[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:k,attributeDivisors:I,object:D,attributes:{},index:null}}function y(D,z){const k=c.attributes,I=D.attributes;let G=0;for(const j in I){const se=k[j],ce=I[j];if(se===void 0||se.attribute!==ce||se.data!==ce.data)return!0;G++}return c.attributesNum!==G||c.index!==z}function g(D,z){const k={},I=D.attributes;let G=0;for(const j in I){const se=I[j],ce={};ce.attribute=se,se.data&&(ce.data=se.data),k[j]=ce,G++}c.attributes=k,c.attributesNum=G,c.index=z}function m(){const D=c.newAttributes;for(let z=0,k=D.length;z<k;z++)D[z]=0}function E(D){A(D,0)}function A(D,z){const k=c.newAttributes,I=c.enabledAttributes,G=c.attributeDivisors;k[D]=1,I[D]===0&&(t.enableVertexAttribArray(D),I[D]=1),G[D]!==z&&((i.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,z),G[D]=z)}function T(){const D=c.newAttributes,z=c.enabledAttributes;for(let k=0,I=z.length;k<I;k++)z[k]!==D[k]&&(t.disableVertexAttribArray(k),z[k]=0)}function v(D,z,k,I,G,j){i.isWebGL2===!0&&(k===5124||k===5125)?t.vertexAttribIPointer(D,z,k,G,j):t.vertexAttribPointer(D,z,k,I,G,j)}function P(D,z,k,I){if(i.isWebGL2===!1&&(D.isInstancedMesh||I.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;m();const G=I.attributes,j=k.getAttributes(),se=z.defaultAttributeValues;for(const ce in j){const oe=j[ce];if(oe>=0){const be=G[ce];if(be!==void 0){const we=be.normalized,He=be.itemSize,W=n.get(be);if(W===void 0)continue;const Ke=W.buffer,ge=W.type,Re=W.bytesPerElement;if(be.isInterleavedBufferAttribute){const ve=be.data,De=ve.stride,Se=be.offset;ve&&ve.isInstancedInterleavedBuffer?(A(oe,ve.meshPerAttribute),I._maxInstanceCount===void 0&&(I._maxInstanceCount=ve.meshPerAttribute*ve.count)):E(oe),t.bindBuffer(34962,Ke),v(oe,He,ge,we,De*Re,Se*Re)}else be.isInstancedBufferAttribute?(A(oe,be.meshPerAttribute),I._maxInstanceCount===void 0&&(I._maxInstanceCount=be.meshPerAttribute*be.count)):E(oe),t.bindBuffer(34962,Ke),v(oe,He,ge,we,0,0)}else if(ce==="instanceMatrix"){const we=n.get(D.instanceMatrix);if(we===void 0)continue;const He=we.buffer,W=we.type;A(oe+0,1),A(oe+1,1),A(oe+2,1),A(oe+3,1),t.bindBuffer(34962,He),t.vertexAttribPointer(oe+0,4,W,!1,64,0),t.vertexAttribPointer(oe+1,4,W,!1,64,16),t.vertexAttribPointer(oe+2,4,W,!1,64,32),t.vertexAttribPointer(oe+3,4,W,!1,64,48)}else if(ce==="instanceColor"){const we=n.get(D.instanceColor);if(we===void 0)continue;const He=we.buffer,W=we.type;A(oe,1),t.bindBuffer(34962,He),t.vertexAttribPointer(oe,3,W,!1,12,0)}else if(se!==void 0){const we=se[ce];if(we!==void 0)switch(we.length){case 2:t.vertexAttrib2fv(oe,we);break;case 3:t.vertexAttrib3fv(oe,we);break;case 4:t.vertexAttrib4fv(oe,we);break;default:t.vertexAttrib1fv(oe,we)}}}}T()}function U(){C();for(const D in o){const z=o[D];for(const k in z){const I=z[k];for(const G in I)u(I[G].object),delete I[G];delete z[k]}delete o[D]}}function K(D){if(o[D.id]===void 0)return;const z=o[D.id];for(const k in z){const I=z[k];for(const G in I)u(I[G].object),delete I[G];delete z[k]}delete o[D.id]}function le(D){for(const z in o){const k=o[z];if(k[D.id]===void 0)continue;const I=k[D.id];for(const G in I)u(I[G].object),delete I[G];delete k[D.id]}}function C(){B(),c!==l&&(c=l,f(c.object))}function B(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:C,resetDefaultState:B,dispose:U,releaseStatesOfGeometry:K,releaseStatesOfProgram:le,initAttributes:m,enableAttribute:E,disableUnusedAttributes:T}}function jf(t,e,n,i){const s=i.isWebGL2;let r;function a(c){r=c}function o(c,d){t.drawArrays(r,c,d),n.update(d,r,1)}function l(c,d,h){if(h===0)return;let f,u;if(s)f=t,u="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),u="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[u](r,c,d,h),n.update(d,r,h)}this.setMode=a,this.render=o,this.renderInstances=l}function qf(t,e,n){let i;function s(){if(i!==void 0)return i;const v=e.get("EXT_texture_filter_anisotropic");return v!==null?i=t.getParameter(v.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function r(v){if(v==="highp"){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";v="mediump"}return v==="mediump"&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext!="undefined"&&t instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&t instanceof WebGL2ComputeRenderingContext;let o=n.precision!==void 0?n.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=n.logarithmicDepthBuffer===!0,d=t.getParameter(34930),h=t.getParameter(35660),f=t.getParameter(3379),u=t.getParameter(34076),p=t.getParameter(34921),_=t.getParameter(36347),y=t.getParameter(36348),g=t.getParameter(36349),m=h>0,E=a||!!e.get("OES_texture_float"),A=m&&E,T=a?t.getParameter(36183):0;return{isWebGL2:a,getMaxAnisotropy:s,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:c,maxTextures:d,maxVertexTextures:h,maxTextureSize:f,maxCubemapSize:u,maxAttributes:p,maxVertexUniforms:_,maxVaryings:y,maxFragmentUniforms:g,vertexTextures:m,floatFragmentTextures:E,floatVertexTextures:A,maxSamples:T}}function Xf(t){const e=this;let n=null,i=0,s=!1,r=!1;const a=new tn,o=new pt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f,u){const p=h.length!==0||f||i!==0||s;return s=f,n=d(h,u,0),i=h.length,p},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1,c()},this.setState=function(h,f,u){const p=h.clippingPlanes,_=h.clipIntersection,y=h.clipShadows,g=t.get(h);if(!s||p===null||p.length===0||r&&!y)r?d(null):c();else{const m=r?0:i,E=m*4;let A=g.clippingState||null;l.value=A,A=d(p,f,E,u);for(let T=0;T!==E;++T)A[T]=n[T];g.clippingState=A,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=m}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function d(h,f,u,p){const _=h!==null?h.length:0;let y=null;if(_!==0){if(y=l.value,p!==!0||y===null){const g=u+_*4,m=f.matrixWorldInverse;o.getNormalMatrix(m),(y===null||y.length<g)&&(y=new Float32Array(g));for(let E=0,A=u;E!==_;++E,A+=4)a.copy(h[E]).applyMatrix4(m,o),a.normal.toArray(y,A),y[A+3]=a.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,y}}function Yf(t){let e=new WeakMap;function n(a,o){return o===io?a.mapping=Da:o===so&&(a.mapping=Fa),a}function i(a){if(a&&a.isTexture){const o=a.mapping;if(o===io||o===so)if(e.has(a)){const l=e.get(a).texture;return n(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=t.getRenderList(),d=t.getRenderTarget(),h=t.getRenderState(),f=new Dn(l.height/2);return f.fromEquirectangularTexture(t,a),e.set(a,f),t.setRenderTarget(d),t.setRenderList(c),t.setRenderState(h),a.addEventListener("dispose",s),n(f.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function r(){e=new WeakMap}return{get:i,dispose:r}}function Zf(t){const e={};return{has:function(n){if(e[n]!==void 0)return e[n]!==null;let i;switch(n){case"WEBGL_depth_texture":i=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(n)}return e[n]=i,i!==null},get:function(n){return this.has(n)||console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),e[n]}}}function Jf(t,e,n,i){const s=new WeakMap,r=new WeakMap;function a(h){const f=h.target,u=s.get(f);u.index!==null&&e.remove(u.index);for(const _ in u.attributes)e.remove(u.attributes[_]);f.removeEventListener("dispose",a),s.delete(f);const p=r.get(u);p&&(e.remove(p),r.delete(u)),i.releaseStatesOfGeometry(u),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function o(h,f){let u=s.get(f);return u||(f.addEventListener("dispose",a),f.isBufferGeometry?u=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new Be().setFromObject(h)),u=f._bufferGeometry),s.set(f,u),n.memory.geometries++,u)}function l(h){const f=h.attributes;for(const p in f)e.update(f[p],34962);const u=h.morphAttributes;for(const p in u){const _=u[p];for(let y=0,g=_.length;y<g;y++)e.update(_[y],34962)}}function c(h){const f=[],u=h.index,p=h.attributes.position;let _=0;if(u!==null){const m=u.array;_=u.version;for(let E=0,A=m.length;E<A;E+=3){const T=m[E+0],v=m[E+1],P=m[E+2];f.push(T,v,v,P,P,T)}}else{const m=p.array;_=p.version;for(let E=0,A=m.length/3-1;E<A;E+=3){const T=E+0,v=E+1,P=E+2;f.push(T,v,v,P,P,T)}}const y=new(Hl(f)>65535?is:ns)(f,1);y.version=_;const g=r.get(h);g&&e.remove(g),r.set(h,y)}function d(h){const f=r.get(h);if(f){const u=h.index;u!==null&&f.version<u.version&&c(h)}else c(h);return r.get(h)}return{get:o,update:l,getWireframeAttribute:d}}function Kf(t,e,n,i){const s=i.isWebGL2;let r;function a(f){r=f}let o,l;function c(f){o=f.type,l=f.bytesPerElement}function d(f,u){t.drawElements(r,u,o,f*l),n.update(u,r,1)}function h(f,u,p){if(p===0)return;let _,y;if(s)_=t,y="drawElementsInstanced";else if(_=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",_===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}_[y](r,u,o,f*l,p),n.update(u,r,p)}this.setMode=a,this.setIndex=c,this.render=d,this.renderInstances=h}function Qf(t){const e={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(r,a,o){switch(n.calls++,a){case 4:n.triangles+=o*(r/3);break;case 1:n.lines+=o*(r/2);break;case 3:n.lines+=o*(r-1);break;case 2:n.lines+=o*r;break;case 0:n.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:e,render:n,programs:null,autoReset:!0,reset:s,update:i}}function $f(t,e){return t[0]-e[0]}function ep(t,e){return Math.abs(e[1])-Math.abs(t[1])}function tp(t){const e={},n=new Float32Array(8),i=[];for(let r=0;r<8;r++)i[r]=[r,0];function s(r,a,o,l){const c=r.morphTargetInfluences,d=c===void 0?0:c.length;let h=e[a.id];if(h===void 0){h=[];for(let y=0;y<d;y++)h[y]=[y,0];e[a.id]=h}for(let y=0;y<d;y++){const g=h[y];g[0]=y,g[1]=c[y]}h.sort(ep);for(let y=0;y<8;y++)y<d&&h[y][1]?(i[y][0]=h[y][0],i[y][1]=h[y][1]):(i[y][0]=Number.MAX_SAFE_INTEGER,i[y][1]=0);i.sort($f);const f=o.morphTargets&&a.morphAttributes.position,u=o.morphNormals&&a.morphAttributes.normal;let p=0;for(let y=0;y<8;y++){const g=i[y],m=g[0],E=g[1];m!==Number.MAX_SAFE_INTEGER&&E?(f&&a.getAttribute("morphTarget"+y)!==f[m]&&a.setAttribute("morphTarget"+y,f[m]),u&&a.getAttribute("morphNormal"+y)!==u[m]&&a.setAttribute("morphNormal"+y,u[m]),n[y]=E,p+=E):(f&&a.hasAttribute("morphTarget"+y)===!0&&a.deleteAttribute("morphTarget"+y),u&&a.hasAttribute("morphNormal"+y)===!0&&a.deleteAttribute("morphNormal"+y),n[y]=0)}const _=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(t,"morphTargetBaseInfluence",_),l.getUniforms().setValue(t,"morphTargetInfluences",n)}return{update:s}}function np(t,e,n,i){let s=new WeakMap;function r(o){const l=i.render.frame,c=o.geometry,d=e.get(o,c);return s.get(d)!==l&&(c.isGeometry&&d.updateFromObject(o),e.update(d),s.set(d,l)),o.isInstancedMesh&&(n.update(o.instanceMatrix,34962),o.instanceColor!==null&&n.update(o.instanceColor,34962)),d}function a(){s=new WeakMap}return{update:r,dispose:a}}function ss(t=null,e=1,n=1,i=1){je.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=rt,this.minFilter=rt,this.wrapR=yt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}ss.prototype=Object.create(je.prototype);ss.prototype.constructor=ss;ss.prototype.isDataTexture2DArray=!0;function rs(t=null,e=1,n=1,i=1){je.call(this,null),this.image={data:t,width:e,height:n,depth:i},this.magFilter=rt,this.minFilter=rt,this.wrapR=yt,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}rs.prototype=Object.create(je.prototype);rs.prototype.constructor=rs;rs.prototype.isDataTexture3D=!0;const Wl=new je,ip=new ss,sp=new rs,jl=new Sn,Ro=[],ko=[],Io=new Float32Array(16),Oo=new Float32Array(9),Do=new Float32Array(4);function Ci(t,e,n){const i=t[0];if(i<=0||i>0)return t;const s=e*n;let r=Ro[s];if(r===void 0&&(r=new Float32Array(s),Ro[s]=r),e!==0){i.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=n,t[a].toArray(r,o)}return r}function Et(t,e){if(t.length!==e.length)return!1;for(let n=0,i=t.length;n<i;n++)if(t[n]!==e[n])return!1;return!0}function bt(t,e){for(let n=0,i=e.length;n<i;n++)t[n]=e[n]}function ql(t,e){let n=ko[e];n===void 0&&(n=new Int32Array(e),ko[e]=n);for(let i=0;i!==e;++i)n[i]=t.allocateTextureUnit();return n}function rp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function ap(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y)&&(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(Et(n,e))return;t.uniform2fv(this.addr,e),bt(n,e)}}function op(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z)&&(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(e.r!==void 0)(n[0]!==e.r||n[1]!==e.g||n[2]!==e.b)&&(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(Et(n,e))return;t.uniform3fv(this.addr,e),bt(n,e)}}function lp(t,e){const n=this.cache;if(e.x!==void 0)(n[0]!==e.x||n[1]!==e.y||n[2]!==e.z||n[3]!==e.w)&&(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(Et(n,e))return;t.uniform4fv(this.addr,e),bt(n,e)}}function cp(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Et(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),bt(n,e)}else{if(Et(n,i))return;Do.set(i),t.uniformMatrix2fv(this.addr,!1,Do),bt(n,i)}}function hp(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Et(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),bt(n,e)}else{if(Et(n,i))return;Oo.set(i),t.uniformMatrix3fv(this.addr,!1,Oo),bt(n,i)}}function up(t,e){const n=this.cache,i=e.elements;if(i===void 0){if(Et(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),bt(n,e)}else{if(Et(n,i))return;Io.set(i),t.uniformMatrix4fv(this.addr,!1,Io),bt(n,i)}}function dp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.safeSetTexture2D(e||Wl,s)}function fp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture2DArray(e||ip,s)}function pp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.setTexture3D(e||sp,s)}function mp(t,e,n){const i=this.cache,s=n.allocateTextureUnit();i[0]!==s&&(t.uniform1i(this.addr,s),i[0]=s),n.safeSetTextureCube(e||jl,s)}function gp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function _p(t,e){const n=this.cache;Et(n,e)||(t.uniform2iv(this.addr,e),bt(n,e))}function yp(t,e){const n=this.cache;Et(n,e)||(t.uniform3iv(this.addr,e),bt(n,e))}function bp(t,e){const n=this.cache;Et(n,e)||(t.uniform4iv(this.addr,e),bt(n,e))}function vp(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function xp(t){switch(t){case 5126:return rp;case 35664:return ap;case 35665:return op;case 35666:return lp;case 35674:return cp;case 35675:return hp;case 35676:return up;case 5124:case 35670:return gp;case 35667:case 35671:return _p;case 35668:case 35672:return yp;case 35669:case 35673:return bp;case 5125:return vp;case 35678:case 36198:case 36298:case 36306:case 35682:return dp;case 35679:case 36299:case 36307:return pp;case 35680:case 36300:case 36308:case 36293:return mp;case 36289:case 36303:case 36311:case 36292:return fp}}function wp(t,e){t.uniform1fv(this.addr,e)}function Mp(t,e){t.uniform1iv(this.addr,e)}function Sp(t,e){t.uniform2iv(this.addr,e)}function Ep(t,e){t.uniform3iv(this.addr,e)}function Tp(t,e){t.uniform4iv(this.addr,e)}function Ap(t,e){const n=Ci(e,this.size,2);t.uniform2fv(this.addr,n)}function Pp(t,e){const n=Ci(e,this.size,3);t.uniform3fv(this.addr,n)}function Lp(t,e){const n=Ci(e,this.size,4);t.uniform4fv(this.addr,n)}function Cp(t,e){const n=Ci(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function Rp(t,e){const n=Ci(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function kp(t,e){const n=Ci(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function Ip(t,e,n){const i=e.length,s=ql(n,i);t.uniform1iv(this.addr,s);for(let r=0;r!==i;++r)n.safeSetTexture2D(e[r]||Wl,s[r])}function Op(t,e,n){const i=e.length,s=ql(n,i);t.uniform1iv(this.addr,s);for(let r=0;r!==i;++r)n.safeSetTextureCube(e[r]||jl,s[r])}function Dp(t){switch(t){case 5126:return wp;case 35664:return Ap;case 35665:return Pp;case 35666:return Lp;case 35674:return Cp;case 35675:return Rp;case 35676:return kp;case 5124:case 35670:return Mp;case 35667:case 35671:return Sp;case 35668:case 35672:return Ep;case 35669:case 35673:return Tp;case 35678:case 36198:case 36298:case 36306:case 35682:return Ip;case 35680:case 36300:case 36308:case 36293:return Op}}function Fp(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=xp(e.type)}function Xl(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=Dp(e.type)}Xl.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),bt(e,t)};function Yl(t){this.id=t,this.seq=[],this.map={}}Yl.prototype.setValue=function(t,e,n){const i=this.seq;for(let s=0,r=i.length;s!==r;++s){const a=i[s];a.setValue(t,e[a.id],n)}};const Yr=/([\w\d_]+)(\])?(\[|\.)?/g;function Fo(t,e){t.seq.push(e),t.map[e.id]=e}function Np(t,e,n){const i=t.name,s=i.length;for(Yr.lastIndex=0;;){const r=Yr.exec(i),a=Yr.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===s){Fo(n,c===void 0?new Fp(o,t,e):new Xl(o,t,e));break}else{let h=n.map[o];h===void 0&&(h=new Yl(o),Fo(n,h)),n=h}}}function vn(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),r=t.getUniformLocation(e,s.name);Np(s,r,this)}}vn.prototype.setValue=function(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)};vn.prototype.setOptional=function(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)};vn.upload=function(t,e,n,i){for(let s=0,r=e.length;s!==r;++s){const a=e[s],o=n[a.id];o.needsUpdate!==!1&&a.setValue(t,o.value,i)}};vn.seqWithValue=function(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const r=t[i];r.id in e&&n.push(r)}return n};function No(t,e,n){const i=t.createShader(e);return t.shaderSource(i,n),t.compileShader(i),i}let zp=0;function Bp(t){const e=t.split(`
`);for(let n=0;n<e.length;n++)e[n]=n+1+": "+e[n];return e.join(`
`)}function Zl(t){switch(t){case ms:return["Linear","( value )"];case zl:return["sRGB","( value )"];case Xh:return["RGBE","( value )"];case Zh:return["RGBM","( value, 7.0 )"];case Jh:return["RGBM","( value, 16.0 )"];case Kh:return["RGBD","( value, 256.0 )"];case qh:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Yh:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function zo(t,e,n){const i=t.getShaderParameter(e,35713),s=t.getShaderInfoLog(e).trim();if(i&&s==="")return"";const r=t.getShaderSource(e);return"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+s+Bp(r)}function Bi(t,e){const n=Zl(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function Up(t,e){const n=Zl(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function Hp(t,e){let n;switch(e){case jc:n="Linear";break;case qc:n="Reinhard";break;case Xc:n="OptimizedCineon";break;case Yc:n="ACESFilmic";break;case Zc:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function Gp(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||t.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ji).join(`
`)}function Vp(t){const e=[];for(const n in t){const i=t[n];i!==!1&&e.push("#define "+n+" "+i)}return e.join(`
`)}function Wp(t,e){const n={},i=t.getProgramParameter(e,35721);for(let s=0;s<i;s++){const a=t.getActiveAttrib(e,s).name;n[a]=t.getAttribLocation(e,a)}return n}function ji(t){return t!==""}function Bo(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Uo(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const jp=/^[ \t]*#include +<([\w\d./]+)>/gm;function ha(t){return t.replace(jp,qp)}function qp(t,e){const n=Ce[e];if(n===void 0)throw new Error("Can not resolve #include <"+e+">");return ha(n)}const Xp=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Yp=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Ho(t){return t.replace(Yp,Jl).replace(Xp,Zp)}function Zp(t,e,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Jl(t,e,n,i)}function Jl(t,e,n,i){let s="";for(let r=parseInt(e);r<parseInt(n);r++)s+=i.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Go(t){let e="precision "+t.precision+` float;
precision `+t.precision+" int;";return t.precision==="highp"?e+=`
#define HIGH_PRECISION`:t.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:t.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Jp(t){let e="SHADOWMAP_TYPE_BASIC";return t.shadowMapType===kl?e="SHADOWMAP_TYPE_PCF":t.shadowMapType===Mc?e="SHADOWMAP_TYPE_PCF_SOFT":t.shadowMapType===Wi&&(e="SHADOWMAP_TYPE_VSM"),e}function Kp(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case Da:case Fa:e="ENVMAP_TYPE_CUBE";break;case Na:case za:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Qp(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case Fa:case za:e="ENVMAP_MODE_REFRACTION";break}return e}function $p(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case br:e="ENVMAP_BLENDING_MULTIPLY";break;case Vc:e="ENVMAP_BLENDING_MIX";break;case Wc:e="ENVMAP_BLENDING_ADD";break}return e}function em(t,e,n,i){const s=t.getContext(),r=n.defines;let a=n.vertexShader,o=n.fragmentShader;const l=Jp(n),c=Kp(n),d=Qp(n),h=$p(n),f=t.gammaFactor>0?t.gammaFactor:1,u=n.isWebGL2?"":Gp(n),p=Vp(r),_=s.createProgram();let y,g,m=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(y=[p].filter(ji).join(`
`),y.length>0&&(y+=`
`),g=[u,p].filter(ji).join(`
`),g.length>0&&(g+=`
`)):(y=[Go(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+f,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+d:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ji).join(`
`),g=[u,Go(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+f,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+d:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==Yi?"#define TONE_MAPPING":"",n.toneMapping!==Yi?Ce.tonemapping_pars_fragment:"",n.toneMapping!==Yi?Hp("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Ce.encodings_pars_fragment,n.map?Bi("mapTexelToLinear",n.mapEncoding):"",n.matcap?Bi("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?Bi("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?Bi("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?Bi("lightMapTexelToLinear",n.lightMapEncoding):"",Up("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(ji).join(`
`)),a=ha(a),a=Bo(a,n),a=Uo(a,n),o=ha(o),o=Bo(o,n),o=Uo(o,n),a=Ho(a),o=Ho(o),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(m=`#version 300 es
`,y=["#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",n.glslVersion===bo?"":"out highp vec4 pc_fragColor;",n.glslVersion===bo?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const E=m+y+a,A=m+g+o,T=No(s,35633,E),v=No(s,35632,A);if(s.attachShader(_,T),s.attachShader(_,v),n.index0AttributeName!==void 0?s.bindAttribLocation(_,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(_,0,"position"),s.linkProgram(_),t.debug.checkShaderErrors){const K=s.getProgramInfoLog(_).trim(),le=s.getShaderInfoLog(T).trim(),C=s.getShaderInfoLog(v).trim();let B=!0,D=!0;if(s.getProgramParameter(_,35714)===!1){B=!1;const z=zo(s,T,"vertex"),k=zo(s,v,"fragment");console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(_,35715),"gl.getProgramInfoLog",K,z,k)}else K!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",K):(le===""||C==="")&&(D=!1);D&&(this.diagnostics={runnable:B,programLog:K,vertexShader:{log:le,prefix:y},fragmentShader:{log:C,prefix:g}})}s.deleteShader(T),s.deleteShader(v);let P;this.getUniforms=function(){return P===void 0&&(P=new vn(s,_)),P};let U;return this.getAttributes=function(){return U===void 0&&(U=Wp(s,_)),U},this.destroy=function(){i.releaseStatesOfProgram(this),s.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=zp++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=T,this.fragmentShader=v,this}function tm(t,e,n,i,s,r){const a=[],o=i.isWebGL2,l=i.logarithmicDepthBuffer,c=i.floatVertexTextures,d=i.maxVertexUniforms,h=i.vertexTextures;let f=i.precision;const u={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},p=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function _(v){const U=v.skeleton.bones;if(c)return 1024;{const le=Math.floor((d-20)/4),C=Math.min(le,U.length);return C<U.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+U.length+" bones. This GPU supports "+C+"."),0):C}}function y(v){let P;return v?v.isTexture?P=v.encoding:v.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),P=v.texture.encoding):P=ms,P}function g(v,P,U,K,le){const C=K.fog,B=v.isMeshStandardMaterial?K.environment:null,D=e.get(v.envMap||B),z=u[v.type],k=le.isSkinnedMesh?_(le):0;v.precision!==null&&(f=i.getMaxPrecision(v.precision),f!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",f,"instead."));let I,G;if(z){const ce=Ot[z];I=ce.vertexShader,G=ce.fragmentShader}else I=v.vertexShader,G=v.fragmentShader;const j=t.getRenderTarget();return{isWebGL2:o,shaderID:z,shaderName:v.type,vertexShader:I,fragmentShader:G,defines:v.defines,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:f,instancing:le.isInstancedMesh===!0,instancingColor:le.isInstancedMesh===!0&&le.instanceColor!==null,supportsVertexTextures:h,outputEncoding:j!==null?y(j.texture):t.outputEncoding,map:!!v.map,mapEncoding:y(v.map),matcap:!!v.matcap,matcapEncoding:y(v.matcap),envMap:!!D,envMapMode:D&&D.mapping,envMapEncoding:y(D),envMapCubeUV:!!D&&(D.mapping===Na||D.mapping===za),lightMap:!!v.lightMap,lightMapEncoding:y(v.lightMap),aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,emissiveMapEncoding:y(v.emissiveMap),bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===eu,tangentSpaceNormalMap:v.normalMapType===Ai,clearcoatMap:!!v.clearcoatMap,clearcoatRoughnessMap:!!v.clearcoatRoughnessMap,clearcoatNormalMap:!!v.clearcoatNormalMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,alphaMap:!!v.alphaMap,gradientMap:!!v.gradientMap,sheen:!!v.sheen,transmissionMap:!!v.transmissionMap,combine:v.combine,vertexTangents:v.normalMap&&v.vertexTangents,vertexColors:v.vertexColors,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.displacementMap||!!v.transmissionMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||!!v.transmissionMap)&&!!v.displacementMap,fog:!!C,useFog:v.fog,fogExp2:C&&C.isFogExp2,flatShading:v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:l,skinning:v.skinning&&k>0,maxBones:k,useVertexTexture:c,morphTargets:v.morphTargets,morphNormals:v.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:P.directional.length,numPointLights:P.point.length,numSpotLights:P.spot.length,numRectAreaLights:P.rectArea.length,numHemiLights:P.hemi.length,numDirLightShadows:P.directionalShadowMap.length,numPointLightShadows:P.pointShadowMap.length,numSpotLightShadows:P.spotShadowMap.length,numClippingPlanes:r.numPlanes,numClipIntersection:r.numIntersection,dithering:v.dithering,shadowMapEnabled:t.shadowMap.enabled&&U.length>0,shadowMapType:t.shadowMap.type,toneMapping:v.toneMapped?t.toneMapping:Yi,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,alphaTest:v.alphaTest,doubleSided:v.side===Ti,flipSided:v.side===nt,depthPacking:v.depthPacking!==void 0?v.depthPacking:!1,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:o||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:o||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:o||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function m(v){const P=[];if(v.shaderID?P.push(v.shaderID):(P.push(v.fragmentShader),P.push(v.vertexShader)),v.defines!==void 0)for(const U in v.defines)P.push(U),P.push(v.defines[U]);if(v.isRawShaderMaterial===!1){for(let U=0;U<p.length;U++)P.push(v[p[U]]);P.push(t.outputEncoding),P.push(t.gammaFactor)}return P.push(v.customProgramCacheKey),P.join()}function E(v){const P=u[v.type];let U;if(P){const K=Ot[P];U=gu.clone(K.uniforms)}else U=v.uniforms;return U}function A(v,P){let U;for(let K=0,le=a.length;K<le;K++){const C=a[K];if(C.cacheKey===P){U=C,++U.usedTimes;break}}return U===void 0&&(U=new em(t,P,v,s),a.push(U)),U}function T(v){if(--v.usedTimes===0){const P=a.indexOf(v);a[P]=a[a.length-1],a.pop(),v.destroy()}}return{getParameters:g,getProgramCacheKey:m,getUniforms:E,acquireProgram:A,releaseProgram:T,programs:a}}function nm(){let t=new WeakMap;function e(r){let a=t.get(r);return a===void 0&&(a={},t.set(r,a)),a}function n(r){t.delete(r)}function i(r,a,o){t.get(r)[a]=o}function s(){t=new WeakMap}return{get:e,remove:n,update:i,dispose:s}}function im(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function sm(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Vo(t){const e=[];let n=0;const i=[],s=[],r={id:-1};function a(){n=0,i.length=0,s.length=0}function o(f,u,p,_,y,g){let m=e[n];const E=t.get(p);return m===void 0?(m={id:f.id,object:f,geometry:u,material:p,program:E.program||r,groupOrder:_,renderOrder:f.renderOrder,z:y,group:g},e[n]=m):(m.id=f.id,m.object=f,m.geometry=u,m.material=p,m.program=E.program||r,m.groupOrder=_,m.renderOrder=f.renderOrder,m.z=y,m.group=g),n++,m}function l(f,u,p,_,y,g){const m=o(f,u,p,_,y,g);(p.transparent===!0?s:i).push(m)}function c(f,u,p,_,y,g){const m=o(f,u,p,_,y,g);(p.transparent===!0?s:i).unshift(m)}function d(f,u){i.length>1&&i.sort(f||im),s.length>1&&s.sort(u||sm)}function h(){for(let f=n,u=e.length;f<u;f++){const p=e[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.program=null,p.group=null}}return{opaque:i,transparent:s,init:a,push:l,unshift:c,finish:h,sort:d}}function rm(t){let e=new WeakMap;function n(s,r){const a=e.get(s);let o;return a===void 0?(o=new Vo(t),e.set(s,new WeakMap),e.get(s).set(r,o)):(o=a.get(r),o===void 0&&(o=new Vo(t),a.set(r,o))),o}function i(){e=new WeakMap}return{get:n,dispose:i}}function am(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new b,color:new de};break;case"SpotLight":n={position:new b,direction:new b,color:new de,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new b,color:new de,distance:0,decay:0};break;case"HemisphereLight":n={direction:new b,skyColor:new de,groundColor:new de};break;case"RectAreaLight":n={color:new de,position:new b,halfWidth:new b,halfHeight:new b};break}return t[e.id]=n,n}}}function om(){const t={};return{get:function(e){if(t[e.id]!==void 0)return t[e.id];let n;switch(e.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new H,shadowCameraNear:1,shadowCameraFar:1e3};break}return t[e.id]=n,n}}}let lm=0;function cm(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function hm(t,e){const n=new am,i=om(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let c=0;c<9;c++)s.probe.push(new b);const r=new b,a=new Te,o=new Te;function l(c,d,h){let f=0,u=0,p=0;for(let K=0;K<9;K++)s.probe[K].set(0,0,0);let _=0,y=0,g=0,m=0,E=0,A=0,T=0,v=0;const P=h.matrixWorldInverse;c.sort(cm);for(let K=0,le=c.length;K<le;K++){const C=c[K],B=C.color,D=C.intensity,z=C.distance,k=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)f+=B.r*D,u+=B.g*D,p+=B.b*D;else if(C.isLightProbe)for(let I=0;I<9;I++)s.probe[I].addScaledVector(C.sh.coefficients[I],D);else if(C.isDirectionalLight){const I=n.get(C);if(I.color.copy(C.color).multiplyScalar(C.intensity),I.direction.setFromMatrixPosition(C.matrixWorld),r.setFromMatrixPosition(C.target.matrixWorld),I.direction.sub(r),I.direction.transformDirection(P),C.castShadow){const G=C.shadow,j=i.get(C);j.shadowBias=G.bias,j.shadowNormalBias=G.normalBias,j.shadowRadius=G.radius,j.shadowMapSize=G.mapSize,s.directionalShadow[_]=j,s.directionalShadowMap[_]=k,s.directionalShadowMatrix[_]=C.shadow.matrix,A++}s.directional[_]=I,_++}else if(C.isSpotLight){const I=n.get(C);if(I.position.setFromMatrixPosition(C.matrixWorld),I.position.applyMatrix4(P),I.color.copy(B).multiplyScalar(D),I.distance=z,I.direction.setFromMatrixPosition(C.matrixWorld),r.setFromMatrixPosition(C.target.matrixWorld),I.direction.sub(r),I.direction.transformDirection(P),I.coneCos=Math.cos(C.angle),I.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),I.decay=C.decay,C.castShadow){const G=C.shadow,j=i.get(C);j.shadowBias=G.bias,j.shadowNormalBias=G.normalBias,j.shadowRadius=G.radius,j.shadowMapSize=G.mapSize,s.spotShadow[g]=j,s.spotShadowMap[g]=k,s.spotShadowMatrix[g]=C.shadow.matrix,v++}s.spot[g]=I,g++}else if(C.isRectAreaLight){const I=n.get(C);I.color.copy(B).multiplyScalar(D),I.position.setFromMatrixPosition(C.matrixWorld),I.position.applyMatrix4(P),o.identity(),a.copy(C.matrixWorld),a.premultiply(P),o.extractRotation(a),I.halfWidth.set(C.width*.5,0,0),I.halfHeight.set(0,C.height*.5,0),I.halfWidth.applyMatrix4(o),I.halfHeight.applyMatrix4(o),s.rectArea[m]=I,m++}else if(C.isPointLight){const I=n.get(C);if(I.position.setFromMatrixPosition(C.matrixWorld),I.position.applyMatrix4(P),I.color.copy(C.color).multiplyScalar(C.intensity),I.distance=C.distance,I.decay=C.decay,C.castShadow){const G=C.shadow,j=i.get(C);j.shadowBias=G.bias,j.shadowNormalBias=G.normalBias,j.shadowRadius=G.radius,j.shadowMapSize=G.mapSize,j.shadowCameraNear=G.camera.near,j.shadowCameraFar=G.camera.far,s.pointShadow[y]=j,s.pointShadowMap[y]=k,s.pointShadowMatrix[y]=C.shadow.matrix,T++}s.point[y]=I,y++}else if(C.isHemisphereLight){const I=n.get(C);I.direction.setFromMatrixPosition(C.matrixWorld),I.direction.transformDirection(P),I.direction.normalize(),I.skyColor.copy(C.color).multiplyScalar(D),I.groundColor.copy(C.groundColor).multiplyScalar(D),s.hemi[E]=I,E++}}m>0&&(e.isWebGL2||t.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=ne.LTC_FLOAT_1,s.rectAreaLTC2=ne.LTC_FLOAT_2):t.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=ne.LTC_HALF_1,s.rectAreaLTC2=ne.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=u,s.ambient[2]=p;const U=s.hash;(U.directionalLength!==_||U.pointLength!==y||U.spotLength!==g||U.rectAreaLength!==m||U.hemiLength!==E||U.numDirectionalShadows!==A||U.numPointShadows!==T||U.numSpotShadows!==v)&&(s.directional.length=_,s.spot.length=g,s.rectArea.length=m,s.point.length=y,s.hemi.length=E,s.directionalShadow.length=A,s.directionalShadowMap.length=A,s.pointShadow.length=T,s.pointShadowMap.length=T,s.spotShadow.length=v,s.spotShadowMap.length=v,s.directionalShadowMatrix.length=A,s.pointShadowMatrix.length=T,s.spotShadowMatrix.length=v,U.directionalLength=_,U.pointLength=y,U.spotLength=g,U.rectAreaLength=m,U.hemiLength=E,U.numDirectionalShadows=A,U.numPointShadows=T,U.numSpotShadows=v,s.version=lm++)}return{setup:l,state:s}}function Wo(t,e){const n=new hm(t,e),i=[],s=[];function r(){i.length=0,s.length=0}function a(d){i.push(d)}function o(d){s.push(d)}function l(d){n.setup(i,s,d)}return{init:r,state:{lightsArray:i,shadowsArray:s,lights:n},setupLights:l,pushLight:a,pushShadow:o}}function um(t,e){let n=new WeakMap;function i(r,a){let o;return n.has(r)===!1?(o=new Wo(t,e),n.set(r,new WeakMap),n.get(r).set(a,o)):n.get(r).has(a)===!1?(o=new Wo(t,e),n.get(r).set(a,o)):o=n.get(r).get(a),o}function s(){n=new WeakMap}return{get:i,dispose:s}}function Fn(t){ye.call(this),this.type="MeshDepthMaterial",this.depthPacking=Qh,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}Fn.prototype=Object.create(ye.prototype);Fn.prototype.constructor=Fn;Fn.prototype.isMeshDepthMaterial=!0;Fn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this};function Nn(t){ye.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new b,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}Nn.prototype=Object.create(ye.prototype);Nn.prototype.constructor=Nn;Nn.prototype.isMeshDistanceMaterial=!0;Nn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this};var dm=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	float mean = 0.0;
	float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );
	for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
		#ifdef HORIZONAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean * HALF_SAMPLE_RATE;
	squared_mean = squared_mean * HALF_SAMPLE_RATE;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,fm=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function Kl(t,e,n){let i=new wr;const s=new H,r=new H,a=new ze,o=[],l=[],c={},d={0:nt,1:yr,2:Ti},h=new dt({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new H},radius:{value:4}},vertexShader:fm,fragmentShader:dm}),f=h.clone();f.defines.HORIZONAL_PASS=1;const u=new Be;u.setAttribute("position",new xe(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new $e(u,h),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=kl,this.render=function(T,v,P){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||T.length===0)return;const U=t.getRenderTarget(),K=t.getActiveCubeFace(),le=t.getActiveMipmapLevel(),C=t.state;C.setBlending(qi),C.buffers.color.setClear(1,1,1,1),C.buffers.depth.setTest(!0),C.setScissorTest(!1);for(let B=0,D=T.length;B<D;B++){const z=T[B],k=z.shadow;if(k===void 0){console.warn("THREE.WebGLShadowMap:",z,"has no shadow.");continue}if(k.autoUpdate===!1&&k.needsUpdate===!1)continue;s.copy(k.mapSize);const I=k.getFrameExtents();if(s.multiply(I),r.copy(k.mapSize),(s.x>n||s.y>n)&&(s.x>n&&(r.x=Math.floor(n/I.x),s.x=r.x*I.x,k.mapSize.x=r.x),s.y>n&&(r.y=Math.floor(n/I.y),s.y=r.y*I.y,k.mapSize.y=r.y)),k.map===null&&!k.isPointLightShadow&&this.type===Wi){const j={minFilter:lt,magFilter:lt,format:Ft};k.map=new Nt(s.x,s.y,j),k.map.texture.name=z.name+".shadowMap",k.mapPass=new Nt(s.x,s.y,j),k.camera.updateProjectionMatrix()}if(k.map===null){const j={minFilter:rt,magFilter:rt,format:Ft};k.map=new Nt(s.x,s.y,j),k.map.texture.name=z.name+".shadowMap",k.camera.updateProjectionMatrix()}t.setRenderTarget(k.map),t.clear();const G=k.getViewportCount();for(let j=0;j<G;j++){const se=k.getViewport(j);a.set(r.x*se.x,r.y*se.y,r.x*se.z,r.y*se.w),C.viewport(a),k.updateMatrices(z,j),i=k.getFrustum(),A(v,P,k.camera,z,this.type)}!k.isPointLightShadow&&this.type===Wi&&y(k,P),k.needsUpdate=!1}_.needsUpdate=!1,t.setRenderTarget(U,K,le)};function y(T,v){const P=e.update(p);h.uniforms.shadow_pass.value=T.map.texture,h.uniforms.resolution.value=T.mapSize,h.uniforms.radius.value=T.radius,t.setRenderTarget(T.mapPass),t.clear(),t.renderBufferDirect(v,null,P,h,p,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,t.setRenderTarget(T.map),t.clear(),t.renderBufferDirect(v,null,P,f,p,null)}function g(T,v,P){const U=T<<0|v<<1|P<<2;let K=o[U];return K===void 0&&(K=new Fn({depthPacking:$h,morphTargets:T,skinning:v}),o[U]=K),K}function m(T,v,P){const U=T<<0|v<<1|P<<2;let K=l[U];return K===void 0&&(K=new Nn({morphTargets:T,skinning:v}),l[U]=K),K}function E(T,v,P,U,K,le,C){let B=null,D=g,z=T.customDepthMaterial;if(U.isPointLight===!0&&(D=m,z=T.customDistanceMaterial),z===void 0){let k=!1;P.morphTargets===!0&&(k=v.morphAttributes&&v.morphAttributes.position&&v.morphAttributes.position.length>0);let I=!1;T.isSkinnedMesh===!0&&(P.skinning===!0?I=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",T));const G=T.isInstancedMesh===!0;B=D(k,I,G)}else B=z;if(t.localClippingEnabled&&P.clipShadows===!0&&P.clippingPlanes.length!==0){const k=B.uuid,I=P.uuid;let G=c[k];G===void 0&&(G={},c[k]=G);let j=G[I];j===void 0&&(j=B.clone(),G[I]=j),B=j}return B.visible=P.visible,B.wireframe=P.wireframe,C===Wi?B.side=P.shadowSide!==null?P.shadowSide:P.side:B.side=P.shadowSide!==null?P.shadowSide:d[P.side],B.clipShadows=P.clipShadows,B.clippingPlanes=P.clippingPlanes,B.clipIntersection=P.clipIntersection,B.wireframeLinewidth=P.wireframeLinewidth,B.linewidth=P.linewidth,U.isPointLight===!0&&B.isMeshDistanceMaterial===!0&&(B.referencePosition.setFromMatrixPosition(U.matrixWorld),B.nearDistance=K,B.farDistance=le),B}function A(T,v,P,U,K){if(T.visible===!1)return;if(T.layers.test(v.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&K===Wi)&&(!T.frustumCulled||i.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,T.matrixWorld);const B=e.update(T),D=T.material;if(Array.isArray(D)){const z=B.groups;for(let k=0,I=z.length;k<I;k++){const G=z[k],j=D[G.materialIndex];if(j&&j.visible){const se=E(T,B,j,U,P.near,P.far,K);t.renderBufferDirect(P,null,B,se,T,G)}}}else if(D.visible){const z=E(T,B,D,U,P.near,P.far,K);t.renderBufferDirect(P,null,B,z,T,null)}}const C=T.children;for(let B=0,D=C.length;B<D;B++)A(C[B],v,P,U,K)}}function pm(t,e,n){const i=n.isWebGL2;function s(){let L=!1;const Z=new ze;let ie=null;const ue=new ze(0,0,0,0);return{setMask:function($){ie!==$&&!L&&(t.colorMask($,$,$,$),ie=$)},setLocked:function($){L=$},setClear:function($,S,J,he,te){te===!0&&($*=he,S*=he,J*=he),Z.set($,S,J,he),ue.equals(Z)===!1&&(t.clearColor($,S,J,he),ue.copy(Z))},reset:function(){L=!1,ie=null,ue.set(-1,0,0,0)}}}function r(){let L=!1,Z=null,ie=null,ue=null;return{setTest:function($){$?ce(2929):oe(2929)},setMask:function($){Z!==$&&!L&&(t.depthMask($),Z=$)},setFunc:function($){if(ie!==$){if($)switch($){case Fc:t.depthFunc(512);break;case Nc:t.depthFunc(519);break;case zc:t.depthFunc(513);break;case na:t.depthFunc(515);break;case Bc:t.depthFunc(514);break;case Uc:t.depthFunc(518);break;case Hc:t.depthFunc(516);break;case Gc:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);ie=$}},setLocked:function($){L=$},setClear:function($){ue!==$&&(t.clearDepth($),ue=$)},reset:function(){L=!1,Z=null,ie=null,ue=null}}}function a(){let L=!1,Z=null,ie=null,ue=null,$=null,S=null,J=null,he=null,te=null;return{setTest:function(pe){L||(pe?ce(2960):oe(2960))},setMask:function(pe){Z!==pe&&!L&&(t.stencilMask(pe),Z=pe)},setFunc:function(pe,Fe,Qe){(ie!==pe||ue!==Fe||$!==Qe)&&(t.stencilFunc(pe,Fe,Qe),ie=pe,ue=Fe,$=Qe)},setOp:function(pe,Fe,Qe){(S!==pe||J!==Fe||he!==Qe)&&(t.stencilOp(pe,Fe,Qe),S=pe,J=Fe,he=Qe)},setLocked:function(pe){L=pe},setClear:function(pe){te!==pe&&(t.clearStencil(pe),te=pe)},reset:function(){L=!1,Z=null,ie=null,ue=null,$=null,S=null,J=null,he=null,te=null}}}const o=new s,l=new r,c=new a;let d={},h=null,f=null,u=null,p=null,_=null,y=null,g=null,m=null,E=null,A=!1,T=null,v=null,P=null,U=null,K=null;const le=t.getParameter(35661);let C=!1,B=0;const D=t.getParameter(7938);D.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL\ ([0-9])/.exec(D)[1]),C=B>=1):D.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(D)[1]),C=B>=2);let z=null,k={};const I=new ze,G=new ze;function j(L,Z,ie){const ue=new Uint8Array(4),$=t.createTexture();t.bindTexture(L,$),t.texParameteri(L,10241,9728),t.texParameteri(L,10240,9728);for(let S=0;S<ie;S++)t.texImage2D(Z+S,0,6408,1,1,0,6408,5121,ue);return $}const se={};se[3553]=j(3553,3553,1),se[34067]=j(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ce(2929),l.setFunc(na),ge(!1),Re(Ka),ce(2884),W(qi);function ce(L){d[L]!==!0&&(t.enable(L),d[L]=!0)}function oe(L){d[L]!==!1&&(t.disable(L),d[L]=!1)}function be(L){return h!==L?(t.useProgram(L),h=L,!0):!1}const we={[ai]:32774,[Ec]:32778,[Tc]:32779};if(i)we[to]=32775,we[no]=32776;else{const L=e.get("EXT_blend_minmax");L!==null&&(we[to]=L.MIN_EXT,we[no]=L.MAX_EXT)}const He={[Ac]:0,[Pc]:1,[Lc]:768,[Ol]:770,[Dc]:776,[Ic]:774,[Rc]:772,[Cc]:769,[Dl]:771,[Oc]:775,[kc]:773};function W(L,Z,ie,ue,$,S,J,he){if(L===qi){f&&(oe(3042),f=!1);return}if(f||(ce(3042),f=!0),L!==Sc){if(L!==u||he!==A){if((p!==ai||g!==ai)&&(t.blendEquation(32774),p=ai,g=ai),he)switch(L){case Xi:t.blendFuncSeparate(1,771,1,771);break;case Qa:t.blendFunc(1,1);break;case $a:t.blendFuncSeparate(0,0,769,771);break;case eo:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case Xi:t.blendFuncSeparate(770,771,1,771);break;case Qa:t.blendFunc(770,1);break;case $a:t.blendFunc(0,769);break;case eo:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}_=null,y=null,m=null,E=null,u=L,A=he}return}$=$||Z,S=S||ie,J=J||ue,(Z!==p||$!==g)&&(t.blendEquationSeparate(we[Z],we[$]),p=Z,g=$),(ie!==_||ue!==y||S!==m||J!==E)&&(t.blendFuncSeparate(He[ie],He[ue],He[S],He[J]),_=ie,y=ue,m=S,E=J),u=L,A=null}function Ke(L,Z){L.side===Ti?oe(2884):ce(2884);let ie=L.side===nt;Z&&(ie=!ie),ge(ie),L.blending===Xi&&L.transparent===!1?W(qi):W(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),l.setFunc(L.depthFunc),l.setTest(L.depthTest),l.setMask(L.depthWrite),o.setMask(L.colorWrite);const ue=L.stencilWrite;c.setTest(ue),ue&&(c.setMask(L.stencilWriteMask),c.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),c.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),De(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits)}function ge(L){T!==L&&(L?t.frontFace(2304):t.frontFace(2305),T=L)}function Re(L){L!==xc?(ce(2884),L!==v&&(L===Ka?t.cullFace(1029):L===wc?t.cullFace(1028):t.cullFace(1032))):oe(2884),v=L}function ve(L){L!==P&&(C&&t.lineWidth(L),P=L)}function De(L,Z,ie){L?(ce(32823),(U!==Z||K!==ie)&&(t.polygonOffset(Z,ie),U=Z,K=ie)):oe(32823)}function Se(L){L?ce(3089):oe(3089)}function X(L){L===void 0&&(L=33984+le-1),z!==L&&(t.activeTexture(L),z=L)}function Q(L,Z){z===null&&X();let ie=k[z];ie===void 0&&(ie={type:void 0,texture:void 0},k[z]=ie),(ie.type!==L||ie.texture!==Z)&&(t.bindTexture(L,Z||se[L]),ie.type=L,ie.texture=Z)}function ee(){const L=k[z];L!==void 0&&L.type!==void 0&&(t.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function fe(){try{t.compressedTexImage2D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function re(){try{t.texImage2D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function M(){try{t.texImage3D.apply(t,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function x(L){I.equals(L)===!1&&(t.scissor(L.x,L.y,L.z,L.w),I.copy(L))}function Y(L){G.equals(L)===!1&&(t.viewport(L.x,L.y,L.z,L.w),G.copy(L))}function q(){d={},z=null,k={},h=null,f=null,u=null,p=null,_=null,y=null,g=null,m=null,E=null,A=!1,T=null,v=null,P=null,U=null,K=null,o.reset(),l.reset(),c.reset()}return{buffers:{color:o,depth:l,stencil:c},enable:ce,disable:oe,useProgram:be,setBlending:W,setMaterial:Ke,setFlipSided:ge,setCullFace:Re,setLineWidth:ve,setPolygonOffset:De,setScissorTest:Se,activeTexture:X,bindTexture:Q,unbindTexture:ee,compressedTexImage2D:fe,texImage2D:re,texImage3D:M,scissor:x,viewport:Y,reset:q}}function mm(t,e,n,i,s,r,a){const o=s.isWebGL2,l=s.maxTextures,c=s.maxCubemapSize,d=s.maxTextureSize,h=s.maxSamples,f=new WeakMap;let u,p=!1;try{p=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(M,x){return p?new OffscreenCanvas(M,x):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function y(M,x,Y,q){let L=1;if((M.width>q||M.height>q)&&(L=q/Math.max(M.width,M.height)),L<1||x===!0)if(typeof HTMLImageElement!="undefined"&&M instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&M instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&M instanceof ImageBitmap){const Z=x?Me.floorPowerOfTwo:Math.floor,ie=Z(L*M.width),ue=Z(L*M.height);u===void 0&&(u=_(ie,ue));const $=Y?_(ie,ue):u;return $.width=ie,$.height=ue,$.getContext("2d").drawImage(M,0,0,ie,ue),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+M.width+"x"+M.height+") to ("+ie+"x"+ue+")."),$}else return"data"in M&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+M.width+"x"+M.height+")."),M;return M}function g(M){return Me.isPowerOfTwo(M.width)&&Me.isPowerOfTwo(M.height)}function m(M){return o?!1:M.wrapS!==yt||M.wrapT!==yt||M.minFilter!==rt&&M.minFilter!==lt}function E(M,x){return M.generateMipmaps&&x&&M.minFilter!==rt&&M.minFilter!==lt}function A(M,x,Y,q){t.generateMipmap(M);const L=i.get(x);L.__maxMipLevel=Math.log(Math.max(Y,q))*Math.LOG2E}function T(M,x,Y){if(o===!1)return x;if(M!==null){if(t[M]!==void 0)return t[M];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+M+"'")}let q=x;return x===6403&&(Y===5126&&(q=33326),Y===5131&&(q=33325),Y===5121&&(q=33321)),x===6407&&(Y===5126&&(q=34837),Y===5131&&(q=34843),Y===5121&&(q=32849)),x===6408&&(Y===5126&&(q=34836),Y===5131&&(q=34842),Y===5121&&(q=32856)),(q===33325||q===33326||q===34842||q===34836)&&e.get("EXT_color_buffer_float"),q}function v(M){return M===rt||M===ro||M===oo?9728:9729}function P(M){const x=M.target;x.removeEventListener("dispose",P),K(x),x.isVideoTexture&&f.delete(x),a.memory.textures--}function U(M){const x=M.target;x.removeEventListener("dispose",U),le(x),a.memory.textures--}function K(M){const x=i.get(M);x.__webglInit!==void 0&&(t.deleteTexture(x.__webglTexture),i.remove(M))}function le(M){const x=i.get(M),Y=i.get(M.texture);if(!!M){if(Y.__webglTexture!==void 0&&t.deleteTexture(Y.__webglTexture),M.depthTexture&&M.depthTexture.dispose(),M.isWebGLCubeRenderTarget)for(let q=0;q<6;q++)t.deleteFramebuffer(x.__webglFramebuffer[q]),x.__webglDepthbuffer&&t.deleteRenderbuffer(x.__webglDepthbuffer[q]);else t.deleteFramebuffer(x.__webglFramebuffer),x.__webglDepthbuffer&&t.deleteRenderbuffer(x.__webglDepthbuffer),x.__webglMultisampledFramebuffer&&t.deleteFramebuffer(x.__webglMultisampledFramebuffer),x.__webglColorRenderbuffer&&t.deleteRenderbuffer(x.__webglColorRenderbuffer),x.__webglDepthRenderbuffer&&t.deleteRenderbuffer(x.__webglDepthRenderbuffer);i.remove(M.texture),i.remove(M)}}let C=0;function B(){C=0}function D(){const M=C;return M>=l&&console.warn("THREE.WebGLTextures: Trying to use "+M+" texture units while this GPU supports only "+l),C+=1,M}function z(M,x){const Y=i.get(M);if(M.isVideoTexture&&X(M),M.version>0&&Y.__version!==M.version){const q=M.image;if(q===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(q.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{be(Y,M,x);return}}n.activeTexture(33984+x),n.bindTexture(3553,Y.__webglTexture)}function k(M,x){const Y=i.get(M);if(M.version>0&&Y.__version!==M.version){be(Y,M,x);return}n.activeTexture(33984+x),n.bindTexture(35866,Y.__webglTexture)}function I(M,x){const Y=i.get(M);if(M.version>0&&Y.__version!==M.version){be(Y,M,x);return}n.activeTexture(33984+x),n.bindTexture(32879,Y.__webglTexture)}function G(M,x){const Y=i.get(M);if(M.version>0&&Y.__version!==M.version){we(Y,M,x);return}n.activeTexture(33984+x),n.bindTexture(34067,Y.__webglTexture)}const j={[$s]:10497,[yt]:33071,[ia]:33648},se={[rt]:9728,[ro]:9984,[oo]:9986,[lt]:9729,[Jc]:9985,[vr]:9987};function ce(M,x,Y){Y?(t.texParameteri(M,10242,j[x.wrapS]),t.texParameteri(M,10243,j[x.wrapT]),(M===32879||M===35866)&&t.texParameteri(M,32882,j[x.wrapR]),t.texParameteri(M,10240,se[x.magFilter]),t.texParameteri(M,10241,se[x.minFilter])):(t.texParameteri(M,10242,33071),t.texParameteri(M,10243,33071),(M===32879||M===35866)&&t.texParameteri(M,32882,33071),(x.wrapS!==yt||x.wrapT!==yt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(M,10240,v(x.magFilter)),t.texParameteri(M,10241,v(x.minFilter)),x.minFilter!==rt&&x.minFilter!==lt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const q=e.get("EXT_texture_filter_anisotropic");if(q){if(x.type===yn&&e.get("OES_texture_float_linear")===null||x.type===tr&&(o||e.get("OES_texture_half_float_linear"))===null)return;(x.anisotropy>1||i.get(x).__currentAnisotropy)&&(t.texParameterf(M,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(x.anisotropy,s.getMaxAnisotropy())),i.get(x).__currentAnisotropy=x.anisotropy)}}function oe(M,x){M.__webglInit===void 0&&(M.__webglInit=!0,x.addEventListener("dispose",P),M.__webglTexture=t.createTexture(),a.memory.textures++)}function be(M,x,Y){let q=3553;x.isDataTexture2DArray&&(q=35866),x.isDataTexture3D&&(q=32879),oe(M,x),n.activeTexture(33984+Y),n.bindTexture(q,M.__webglTexture),t.pixelStorei(37440,x.flipY),t.pixelStorei(37441,x.premultiplyAlpha),t.pixelStorei(3317,x.unpackAlignment);const L=m(x)&&g(x.image)===!1,Z=y(x.image,L,!1,d),ie=g(Z)||o,ue=r.convert(x.format);let $=r.convert(x.type),S=T(x.internalFormat,ue,$);ce(q,x,ie);let J;const he=x.mipmaps;if(x.isDepthTexture)S=6402,o?x.type===yn?S=36012:x.type===Ks?S=33190:x.type===Zi?S=35056:S=33189:x.type===yn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),x.format===pi&&S===6402&&x.type!==er&&x.type!==Ks&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),x.type=er,$=r.convert(x.type)),x.format===es&&S===6402&&(S=34041,x.type!==Zi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),x.type=Zi,$=r.convert(x.type))),n.texImage2D(3553,0,S,Z.width,Z.height,0,ue,$,null);else if(x.isDataTexture)if(he.length>0&&ie){for(let te=0,pe=he.length;te<pe;te++)J=he[te],n.texImage2D(3553,te,S,J.width,J.height,0,ue,$,J.data);x.generateMipmaps=!1,M.__maxMipLevel=he.length-1}else n.texImage2D(3553,0,S,Z.width,Z.height,0,ue,$,Z.data),M.__maxMipLevel=0;else if(x.isCompressedTexture){for(let te=0,pe=he.length;te<pe;te++)J=he[te],x.format!==Ft&&x.format!==On?ue!==null?n.compressedTexImage2D(3553,te,S,J.width,J.height,0,J.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,te,S,J.width,J.height,0,ue,$,J.data);M.__maxMipLevel=he.length-1}else if(x.isDataTexture2DArray)n.texImage3D(35866,0,S,Z.width,Z.height,Z.depth,0,ue,$,Z.data),M.__maxMipLevel=0;else if(x.isDataTexture3D)n.texImage3D(32879,0,S,Z.width,Z.height,Z.depth,0,ue,$,Z.data),M.__maxMipLevel=0;else if(he.length>0&&ie){for(let te=0,pe=he.length;te<pe;te++)J=he[te],n.texImage2D(3553,te,S,ue,$,J);x.generateMipmaps=!1,M.__maxMipLevel=he.length-1}else n.texImage2D(3553,0,S,ue,$,Z),M.__maxMipLevel=0;E(x,ie)&&A(q,x,Z.width,Z.height),M.__version=x.version,x.onUpdate&&x.onUpdate(x)}function we(M,x,Y){if(x.image.length!==6)return;oe(M,x),n.activeTexture(33984+Y),n.bindTexture(34067,M.__webglTexture),t.pixelStorei(37440,x.flipY);const q=x&&(x.isCompressedTexture||x.image[0].isCompressedTexture),L=x.image[0]&&x.image[0].isDataTexture,Z=[];for(let te=0;te<6;te++)!q&&!L?Z[te]=y(x.image[te],!1,!0,c):Z[te]=L?x.image[te].image:x.image[te];const ie=Z[0],ue=g(ie)||o,$=r.convert(x.format),S=r.convert(x.type),J=T(x.internalFormat,$,S);ce(34067,x,ue);let he;if(q){for(let te=0;te<6;te++){he=Z[te].mipmaps;for(let pe=0;pe<he.length;pe++){const Fe=he[pe];x.format!==Ft&&x.format!==On?$!==null?n.compressedTexImage2D(34069+te,pe,J,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+te,pe,J,Fe.width,Fe.height,0,$,S,Fe.data)}}M.__maxMipLevel=he.length-1}else{he=x.mipmaps;for(let te=0;te<6;te++)if(L){n.texImage2D(34069+te,0,J,Z[te].width,Z[te].height,0,$,S,Z[te].data);for(let pe=0;pe<he.length;pe++){const Qe=he[pe].image[te].image;n.texImage2D(34069+te,pe+1,J,Qe.width,Qe.height,0,$,S,Qe.data)}}else{n.texImage2D(34069+te,0,J,$,S,Z[te]);for(let pe=0;pe<he.length;pe++){const Fe=he[pe];n.texImage2D(34069+te,pe+1,J,$,S,Fe.image[te])}}M.__maxMipLevel=he.length}E(x,ue)&&A(34067,x,ie.width,ie.height),M.__version=x.version,x.onUpdate&&x.onUpdate(x)}function He(M,x,Y,q){const L=r.convert(x.texture.format),Z=r.convert(x.texture.type),ie=T(x.texture.internalFormat,L,Z);n.texImage2D(q,0,ie,x.width,x.height,0,L,Z,null),t.bindFramebuffer(36160,M),t.framebufferTexture2D(36160,Y,q,i.get(x.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function W(M,x,Y){if(t.bindRenderbuffer(36161,M),x.depthBuffer&&!x.stencilBuffer){let q=33189;if(Y){const L=x.depthTexture;L&&L.isDepthTexture&&(L.type===yn?q=36012:L.type===Ks&&(q=33190));const Z=Se(x);t.renderbufferStorageMultisample(36161,Z,q,x.width,x.height)}else t.renderbufferStorage(36161,q,x.width,x.height);t.framebufferRenderbuffer(36160,36096,36161,M)}else if(x.depthBuffer&&x.stencilBuffer){if(Y){const q=Se(x);t.renderbufferStorageMultisample(36161,q,35056,x.width,x.height)}else t.renderbufferStorage(36161,34041,x.width,x.height);t.framebufferRenderbuffer(36160,33306,36161,M)}else{const q=r.convert(x.texture.format),L=r.convert(x.texture.type),Z=T(x.texture.internalFormat,q,L);if(Y){const ie=Se(x);t.renderbufferStorageMultisample(36161,ie,Z,x.width,x.height)}else t.renderbufferStorage(36161,Z,x.width,x.height)}t.bindRenderbuffer(36161,null)}function Ke(M,x){if(x&&x.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,M),!(x.depthTexture&&x.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(x.depthTexture).__webglTexture||x.depthTexture.image.width!==x.width||x.depthTexture.image.height!==x.height)&&(x.depthTexture.image.width=x.width,x.depthTexture.image.height=x.height,x.depthTexture.needsUpdate=!0),z(x.depthTexture,0);const q=i.get(x.depthTexture).__webglTexture;if(x.depthTexture.format===pi)t.framebufferTexture2D(36160,36096,3553,q,0);else if(x.depthTexture.format===es)t.framebufferTexture2D(36160,33306,3553,q,0);else throw new Error("Unknown depthTexture format")}function ge(M){const x=i.get(M),Y=M.isWebGLCubeRenderTarget===!0;if(M.depthTexture){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");Ke(x.__webglFramebuffer,M)}else if(Y){x.__webglDepthbuffer=[];for(let q=0;q<6;q++)t.bindFramebuffer(36160,x.__webglFramebuffer[q]),x.__webglDepthbuffer[q]=t.createRenderbuffer(),W(x.__webglDepthbuffer[q],M,!1)}else t.bindFramebuffer(36160,x.__webglFramebuffer),x.__webglDepthbuffer=t.createRenderbuffer(),W(x.__webglDepthbuffer,M,!1);t.bindFramebuffer(36160,null)}function Re(M){const x=i.get(M),Y=i.get(M.texture);M.addEventListener("dispose",U),Y.__webglTexture=t.createTexture(),a.memory.textures++;const q=M.isWebGLCubeRenderTarget===!0,L=M.isWebGLMultisampleRenderTarget===!0,Z=g(M)||o;if(o&&M.texture.format===On&&(M.texture.type===yn||M.texture.type===tr)&&(M.texture.format=Ft,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),q){x.__webglFramebuffer=[];for(let ie=0;ie<6;ie++)x.__webglFramebuffer[ie]=t.createFramebuffer()}else if(x.__webglFramebuffer=t.createFramebuffer(),L)if(o){x.__webglMultisampledFramebuffer=t.createFramebuffer(),x.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,x.__webglColorRenderbuffer);const ie=r.convert(M.texture.format),ue=r.convert(M.texture.type),$=T(M.texture.internalFormat,ie,ue),S=Se(M);t.renderbufferStorageMultisample(36161,S,$,M.width,M.height),t.bindFramebuffer(36160,x.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,x.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),M.depthBuffer&&(x.__webglDepthRenderbuffer=t.createRenderbuffer(),W(x.__webglDepthRenderbuffer,M,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(q){n.bindTexture(34067,Y.__webglTexture),ce(34067,M.texture,Z);for(let ie=0;ie<6;ie++)He(x.__webglFramebuffer[ie],M,36064,34069+ie);E(M.texture,Z)&&A(34067,M.texture,M.width,M.height),n.bindTexture(34067,null)}else n.bindTexture(3553,Y.__webglTexture),ce(3553,M.texture,Z),He(x.__webglFramebuffer,M,36064,3553),E(M.texture,Z)&&A(3553,M.texture,M.width,M.height),n.bindTexture(3553,null);M.depthBuffer&&ge(M)}function ve(M){const x=M.texture,Y=g(M)||o;if(E(x,Y)){const q=M.isWebGLCubeRenderTarget?34067:3553,L=i.get(x).__webglTexture;n.bindTexture(q,L),A(q,x,M.width,M.height),n.bindTexture(q,null)}}function De(M){if(M.isWebGLMultisampleRenderTarget)if(o){const x=i.get(M);t.bindFramebuffer(36008,x.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,x.__webglFramebuffer);const Y=M.width,q=M.height;let L=16384;M.depthBuffer&&(L|=256),M.stencilBuffer&&(L|=1024),t.blitFramebuffer(0,0,Y,q,0,0,Y,q,L,9728),t.bindFramebuffer(36160,x.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function Se(M){return o&&M.isWebGLMultisampleRenderTarget?Math.min(h,M.samples):0}function X(M){const x=a.render.frame;f.get(M)!==x&&(f.set(M,x),M.update())}let Q=!1,ee=!1;function fe(M,x){M&&M.isWebGLRenderTarget&&(Q===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),Q=!0),M=M.texture),z(M,x)}function re(M,x){M&&M.isWebGLCubeRenderTarget&&(ee===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ee=!0),M=M.texture),G(M,x)}this.allocateTextureUnit=D,this.resetTextureUnits=B,this.setTexture2D=z,this.setTexture2DArray=k,this.setTexture3D=I,this.setTextureCube=G,this.setupRenderTarget=Re,this.updateRenderTargetMipmap=ve,this.updateMultisampleRenderTarget=De,this.safeSetTexture2D=fe,this.safeSetTextureCube=re}function gm(t,e,n){const i=n.isWebGL2;function s(r){let a;if(r===Ba)return 5121;if(r===eh)return 32819;if(r===th)return 32820;if(r===nh)return 33635;if(r===Kc)return 5120;if(r===Qc)return 5122;if(r===er)return 5123;if(r===$c)return 5124;if(r===Ks)return 5125;if(r===yn)return 5126;if(r===tr)return i?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(r===ih)return 6406;if(r===On)return 6407;if(r===Ft)return 6408;if(r===sh)return 6409;if(r===rh)return 6410;if(r===pi)return 6402;if(r===es)return 34041;if(r===ah)return 6403;if(r===oh)return 36244;if(r===lh)return 33319;if(r===ch)return 33320;if(r===hh)return 36248;if(r===uh)return 36249;if(r===lo||r===co||r===ho||r===uo)if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(r===lo)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===co)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===ho)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===uo)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===fo||r===po||r===mo||r===go)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(r===fo)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===po)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===mo)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===go)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===dh)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if((r===_o||r===yo)&&(a=e.get("WEBGL_compressed_texture_etc"),a!==null)){if(r===_o)return a.COMPRESSED_RGB8_ETC2;if(r===yo)return a.COMPRESSED_RGBA8_ETC2_EAC}if(r===fh||r===ph||r===mh||r===gh||r===_h||r===yh||r===bh||r===vh||r===xh||r===wh||r===Mh||r===Sh||r===Eh||r===Th||r===Ph||r===Lh||r===Ch||r===Rh||r===kh||r===Ih||r===Oh||r===Dh||r===Fh||r===Nh||r===zh||r===Bh||r===Uh||r===Hh)return a=e.get("WEBGL_compressed_texture_astc"),a!==null?r:null;if(r===Ah)return a=e.get("EXT_texture_compression_bptc"),a!==null?r:null;if(r===Zi)return i?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:s}}function ua(t=[]){it.call(this),this.cameras=t}ua.prototype=Object.assign(Object.create(it.prototype),{constructor:ua,isArrayCamera:!0});function di(){_e.call(this),this.type="Group"}di.prototype=Object.assign(Object.create(_e.prototype),{constructor:di,isGroup:!0});function Ki(){this._targetRay=null,this._grip=null,this._hand=null}Object.assign(Ki.prototype,{constructor:Ki,getHandSpace:function(){if(this._hand===null&&(this._hand=new di,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const e=new di;e.matrixAutoUpdate=!1,e.visible=!1,this._hand.joints.push(e),this._hand.add(e)}return this._hand},getTargetRaySpace:function(){return this._targetRay===null&&(this._targetRay=new di,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return this._grip===null&&(this._grip=new di,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this},update:function(t,e,n){let i=null,s=null,r=null;const a=this._targetRay,o=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred")if(l&&t.hand){r=!0;for(let c=0;c<=window.XRHand.LITTLE_PHALANX_TIP;c++)if(t.hand[c]){const d=e.getJointPose(t.hand[c],n),h=l.joints[c];d!==null&&(h.matrix.fromArray(d.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.jointRadius=d.radius),h.visible=d!==null;const f=l.joints[window.XRHand.INDEX_PHALANX_TIP],u=l.joints[window.XRHand.THUMB_PHALANX_TIP],p=f.position.distanceTo(u.position),_=.02,y=.005;l.inputState.pinching&&p>_+y?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&p<=_-y&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else a!==null&&(i=e.getPose(t.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale))),o!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale)));return a!==null&&(a.visible=i!==null),o!==null&&(o.visible=s!==null),l!==null&&(l.visible=r!==null),this}});function Ql(t,e){const n=this;let i=null,s=1,r=null,a="local-floor",o=null;const l=[],c=new Map,d=new it;d.layers.enable(1),d.viewport=new ze;const h=new it;h.layers.enable(2),h.viewport=new ze;const f=[d,h],u=new ua;u.layers.enable(1),u.layers.enable(2);let p=null,_=null;this.enabled=!1,this.isPresenting=!1,this.getController=function(C){let B=l[C];return B===void 0&&(B=new Ki,l[C]=B),B.getTargetRaySpace()},this.getControllerGrip=function(C){let B=l[C];return B===void 0&&(B=new Ki,l[C]=B),B.getGripSpace()},this.getHand=function(C){let B=l[C];return B===void 0&&(B=new Ki,l[C]=B),B.getHandSpace()};function y(C){const B=c.get(C.inputSource);B&&B.dispatchEvent({type:C.type,data:C.inputSource})}function g(){c.forEach(function(C,B){C.disconnect(B)}),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),le.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function m(C){r=C,le.setContext(i),le.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(C){s=C,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(C){a=C,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return r},this.getSession=function(){return i},this.setSession=function(C){if(i=C,i!==null){i.addEventListener("select",y),i.addEventListener("selectstart",y),i.addEventListener("selectend",y),i.addEventListener("squeeze",y),i.addEventListener("squeezestart",y),i.addEventListener("squeezeend",y),i.addEventListener("end",g);const B=e.getContextAttributes();B.xrCompatible!==!0&&e.makeXRCompatible();const D={antialias:B.antialias,alpha:B.alpha,depth:B.depth,stencil:B.stencil,framebufferScaleFactor:s},z=new XRWebGLLayer(i,e,D);i.updateRenderState({baseLayer:z}),i.requestReferenceSpace(a).then(m),i.addEventListener("inputsourceschange",E)}};function E(C){const B=i.inputSources;for(let D=0;D<l.length;D++)c.set(B[D],l[D]);for(let D=0;D<C.removed.length;D++){const z=C.removed[D],k=c.get(z);k&&(k.dispatchEvent({type:"disconnected",data:z}),c.delete(z))}for(let D=0;D<C.added.length;D++){const z=C.added[D],k=c.get(z);k&&k.dispatchEvent({type:"connected",data:z})}}const A=new b,T=new b;function v(C,B,D){A.setFromMatrixPosition(B.matrixWorld),T.setFromMatrixPosition(D.matrixWorld);const z=A.distanceTo(T),k=B.projectionMatrix.elements,I=D.projectionMatrix.elements,G=k[14]/(k[10]-1),j=k[14]/(k[10]+1),se=(k[9]+1)/k[5],ce=(k[9]-1)/k[5],oe=(k[8]-1)/k[0],be=(I[8]+1)/I[0],we=G*oe,He=G*be,W=z/(-oe+be),Ke=W*-oe;B.matrixWorld.decompose(C.position,C.quaternion,C.scale),C.translateX(Ke),C.translateZ(W),C.matrixWorld.compose(C.position,C.quaternion,C.scale),C.matrixWorldInverse.copy(C.matrixWorld).invert();const ge=G+W,Re=j+W,ve=we-Ke,De=He+(z-Ke),Se=se*j/Re*ge,X=ce*j/Re*ge;C.projectionMatrix.makePerspective(ve,De,Se,X,ge,Re)}function P(C,B){B===null?C.matrixWorld.copy(C.matrix):C.matrixWorld.multiplyMatrices(B.matrixWorld,C.matrix),C.matrixWorldInverse.copy(C.matrixWorld).invert()}this.getCamera=function(C){u.near=h.near=d.near=C.near,u.far=h.far=d.far=C.far,(p!==u.near||_!==u.far)&&(i.updateRenderState({depthNear:u.near,depthFar:u.far}),p=u.near,_=u.far);const B=C.parent,D=u.cameras;P(u,B);for(let k=0;k<D.length;k++)P(D[k],B);C.matrixWorld.copy(u.matrixWorld);const z=C.children;for(let k=0,I=z.length;k<I;k++)z[k].updateMatrixWorld(!0);return D.length===2?v(u,d,h):u.projectionMatrix.copy(d.projectionMatrix),u};let U=null;function K(C,B){if(o=B.getViewerPose(r),o!==null){const z=o.views,k=i.renderState.baseLayer;t.setFramebuffer(k.framebuffer);let I=!1;z.length!==u.cameras.length&&(u.cameras.length=0,I=!0);for(let G=0;G<z.length;G++){const j=z[G],se=k.getViewport(j),ce=f[G];ce.matrix.fromArray(j.transform.matrix),ce.projectionMatrix.fromArray(j.projectionMatrix),ce.viewport.set(se.x,se.y,se.width,se.height),G===0&&u.matrix.copy(ce.matrix),I===!0&&u.cameras.push(ce)}}const D=i.inputSources;for(let z=0;z<l.length;z++){const k=l[z],I=D[z];k.update(I,B,r)}U&&U(C,B)}const le=new Vl;le.setAnimationLoop(K),this.setAnimationLoop=function(C){U=C},this.dispose=function(){}}Object.assign(Ql.prototype,Pt.prototype);function _m(t){function e(g,m){g.fogColor.value.copy(m.color),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,E,A){m.isMeshBasicMaterial?i(g,m):m.isMeshLambertMaterial?(i(g,m),l(g,m)):m.isMeshToonMaterial?(i(g,m),d(g,m)):m.isMeshPhongMaterial?(i(g,m),c(g,m)):m.isMeshStandardMaterial?(i(g,m),m.isMeshPhysicalMaterial?f(g,m):h(g,m)):m.isMeshMatcapMaterial?(i(g,m),u(g,m)):m.isMeshDepthMaterial?(i(g,m),p(g,m)):m.isMeshDistanceMaterial?(i(g,m),_(g,m)):m.isMeshNormalMaterial?(i(g,m),y(g,m)):m.isLineBasicMaterial?(s(g,m),m.isLineDashedMaterial&&r(g,m)):m.isPointsMaterial?a(g,m,E,A):m.isSpriteMaterial?o(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function i(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap),m.specularMap&&(g.specularMap.value=m.specularMap);const E=t.get(m).envMap;if(E){g.envMap.value=E,g.flipEnvMap.value=E.isCubeTexture&&E._needsFlipEnvMap?-1:1,g.reflectivity.value=m.reflectivity,g.refractionRatio.value=m.refractionRatio;const v=t.get(E).__maxMipLevel;v!==void 0&&(g.maxMipLevel.value=v)}m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity);let A;m.map?A=m.map:m.specularMap?A=m.specularMap:m.displacementMap?A=m.displacementMap:m.normalMap?A=m.normalMap:m.bumpMap?A=m.bumpMap:m.roughnessMap?A=m.roughnessMap:m.metalnessMap?A=m.metalnessMap:m.alphaMap?A=m.alphaMap:m.emissiveMap?A=m.emissiveMap:m.clearcoatMap?A=m.clearcoatMap:m.clearcoatNormalMap?A=m.clearcoatNormalMap:m.clearcoatRoughnessMap&&(A=m.clearcoatRoughnessMap),A!==void 0&&(A.isWebGLRenderTarget&&(A=A.texture),A.matrixAutoUpdate===!0&&A.updateMatrix(),g.uvTransform.value.copy(A.matrix));let T;m.aoMap?T=m.aoMap:m.lightMap&&(T=m.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),g.uv2Transform.value.copy(T.matrix))}function s(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity}function r(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function a(g,m,E,A){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*E,g.scale.value=A*.5,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let T;m.map?T=m.map:m.alphaMap&&(T=m.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),g.uvTransform.value.copy(T.matrix))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map),m.alphaMap&&(g.alphaMap.value=m.alphaMap);let E;m.map?E=m.map:m.alphaMap&&(E=m.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),g.uvTransform.value.copy(E.matrix))}function l(g,m){m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap)}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===nt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===nt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function d(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===nt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===nt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function h(g,m){g.roughness.value=m.roughness,g.metalness.value=m.metalness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===nt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===nt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),t.get(m).envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m){h(g,m),g.reflectivity.value=m.reflectivity,g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.sheen&&g.sheen.value.copy(m.sheen),m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),g.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===nt&&g.clearcoatNormalScale.value.negate()),g.transmission.value=m.transmission,m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap)}function u(g,m){m.matcap&&(g.matcap.value=m.matcap),m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===nt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===nt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function p(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}function _(g,m){m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),g.referencePosition.value.copy(m.referencePosition),g.nearDistance.value=m.nearDistance,g.farDistance.value=m.farDistance}function y(g,m){m.bumpMap&&(g.bumpMap.value=m.bumpMap,g.bumpScale.value=m.bumpScale,m.side===nt&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,g.normalScale.value.copy(m.normalScale),m.side===nt&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias)}return{refreshFogUniforms:e,refreshMaterialUniforms:n}}function ym(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}function _s(t){t=t||{};const e=t.canvas!==void 0?t.canvas:ym(),n=t.context!==void 0?t.context:null,i=t.alpha!==void 0?t.alpha:!1,s=t.depth!==void 0?t.depth:!0,r=t.stencil!==void 0?t.stencil:!0,a=t.antialias!==void 0?t.antialias:!1,o=t.premultipliedAlpha!==void 0?t.premultipliedAlpha:!0,l=t.preserveDrawingBuffer!==void 0?t.preserveDrawingBuffer:!1,c=t.powerPreference!==void 0?t.powerPreference:"default",d=t.failIfMajorPerformanceCaveat!==void 0?t.failIfMajorPerformanceCaveat:!1;let h=null,f=null;this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=ms,this.physicallyCorrectLights=!1,this.toneMapping=Yi,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const u=this;let p=!1,_=null,y=0,g=0,m=null,E=null,A=-1,T=null,v=null;const P=new ze,U=new ze;let K=null,le=e.width,C=e.height,B=1,D=null,z=null;const k=new ze(0,0,le,C),I=new ze(0,0,le,C);let G=!1;const j=new wr;let se=!1,ce=!1;const oe=new Te,be=new b,we={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function He(){return m===null?B:1}let W=n;function Ke(w,N){for(let F=0;F<w.length;F++){const V=w[F],ae=e.getContext(V,N);if(ae!==null)return ae}return null}try{const w={alpha:i,depth:s,stencil:r,antialias:a,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:d};if(e.addEventListener("webglcontextlost",Fe,!1),e.addEventListener("webglcontextrestored",Qe,!1),W===null){const N=["webgl2","webgl","experimental-webgl"];if(u.isWebGL1Renderer===!0&&N.shift(),W=Ke(N,w),W===null)throw Ke(N)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}W.getShaderPrecisionFormat===void 0&&(W.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let ge,Re,ve,De,Se,X,Q,ee,fe,re,M,x,Y,q,L,Z,ie,ue,$,S,J;function he(){ge=new Zf(W),Re=new qf(W,ge,t),Re.isWebGL2===!1&&(ge.get("WEBGL_depth_texture"),ge.get("OES_texture_float"),ge.get("OES_texture_half_float"),ge.get("OES_texture_half_float_linear"),ge.get("OES_standard_derivatives"),ge.get("OES_element_index_uint"),ge.get("OES_vertex_array_object"),ge.get("ANGLE_instanced_arrays")),ge.get("OES_texture_float_linear"),S=new gm(W,ge,Re),ve=new pm(W,ge,Re),ve.scissor(U.copy(I).multiplyScalar(B).floor()),ve.viewport(P.copy(k).multiplyScalar(B).floor()),De=new Qf,Se=new nm,X=new mm(W,ge,ve,Se,Re,S,De),Q=new Yf(u),ee=new bu(W,Re),J=new Wf(W,ge,ee,Re),fe=new Jf(W,ee,De,J),re=new np(W,fe,ee,De),ie=new tp(W),L=new Xf(Se),M=new tm(u,Q,ge,Re,J,L),x=new _m(Se),Y=new rm(Se),q=new um(ge,Re),Z=new Vf(u,Q,ve,re,o),ue=new jf(W,ge,De,Re),$=new Kf(W,ge,De,Re),De.programs=M.programs,u.capabilities=Re,u.extensions=ge,u.properties=Se,u.renderLists=Y,u.state=ve,u.info=De}he();const te=new Ql(u,W);this.xr=te;const pe=new Kl(u,re,Re.maxTextureSize);this.shadowMap=pe,this.getContext=function(){return W},this.getContextAttributes=function(){return W.getContextAttributes()},this.forceContextLoss=function(){const w=ge.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=ge.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(w){w!==void 0&&(B=w,this.setSize(le,C,!1))},this.getSize=function(w){return w===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),w=new H),w.set(le,C)},this.setSize=function(w,N,F){if(te.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}le=w,C=N,e.width=Math.floor(w*B),e.height=Math.floor(N*B),F!==!1&&(e.style.width=w+"px",e.style.height=N+"px"),this.setViewport(0,0,w,N)},this.getDrawingBufferSize=function(w){return w===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),w=new H),w.set(le*B,C*B).floor()},this.setDrawingBufferSize=function(w,N,F){le=w,C=N,B=F,e.width=Math.floor(w*F),e.height=Math.floor(N*F),this.setViewport(0,0,w,N)},this.getCurrentViewport=function(w){return w===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),w=new ze),w.copy(P)},this.getViewport=function(w){return w.copy(k)},this.setViewport=function(w,N,F,V){w.isVector4?k.set(w.x,w.y,w.z,w.w):k.set(w,N,F,V),ve.viewport(P.copy(k).multiplyScalar(B).floor())},this.getScissor=function(w){return w.copy(I)},this.setScissor=function(w,N,F,V){w.isVector4?I.set(w.x,w.y,w.z,w.w):I.set(w,N,F,V),ve.scissor(U.copy(I).multiplyScalar(B).floor())},this.getScissorTest=function(){return G},this.setScissorTest=function(w){ve.setScissorTest(G=w)},this.setOpaqueSort=function(w){D=w},this.setTransparentSort=function(w){z=w},this.getClearColor=function(){return Z.getClearColor()},this.setClearColor=function(){Z.setClearColor.apply(Z,arguments)},this.getClearAlpha=function(){return Z.getClearAlpha()},this.setClearAlpha=function(){Z.setClearAlpha.apply(Z,arguments)},this.clear=function(w,N,F){let V=0;(w===void 0||w)&&(V|=16384),(N===void 0||N)&&(V|=256),(F===void 0||F)&&(V|=1024),W.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Fe,!1),e.removeEventListener("webglcontextrestored",Qe,!1),Y.dispose(),q.dispose(),Se.dispose(),Q.dispose(),re.dispose(),J.dispose(),te.dispose(),ki.stop()};function Fe(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Qe(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1,he()}function Ri(w){const N=w.target;N.removeEventListener("dispose",Ri),Lt(N)}function Lt(w){wt(w),Se.remove(w)}function wt(w){const N=Se.get(w).program;N!==void 0&&M.releaseProgram(N)}function gc(w,N){w.render(function(F){u.renderBufferImmediate(F,N)})}this.renderBufferImmediate=function(w,N){J.initAttributes();const F=Se.get(w);w.hasPositions&&!F.position&&(F.position=W.createBuffer()),w.hasNormals&&!F.normal&&(F.normal=W.createBuffer()),w.hasUvs&&!F.uv&&(F.uv=W.createBuffer()),w.hasColors&&!F.color&&(F.color=W.createBuffer());const V=N.getAttributes();w.hasPositions&&(W.bindBuffer(34962,F.position),W.bufferData(34962,w.positionArray,35048),J.enableAttribute(V.position),W.vertexAttribPointer(V.position,3,5126,!1,0,0)),w.hasNormals&&(W.bindBuffer(34962,F.normal),W.bufferData(34962,w.normalArray,35048),J.enableAttribute(V.normal),W.vertexAttribPointer(V.normal,3,5126,!1,0,0)),w.hasUvs&&(W.bindBuffer(34962,F.uv),W.bufferData(34962,w.uvArray,35048),J.enableAttribute(V.uv),W.vertexAttribPointer(V.uv,2,5126,!1,0,0)),w.hasColors&&(W.bindBuffer(34962,F.color),W.bufferData(34962,w.colorArray,35048),J.enableAttribute(V.color),W.vertexAttribPointer(V.color,3,5126,!1,0,0)),J.disableUnusedAttributes(),W.drawArrays(4,0,w.count),w.count=0},this.renderBufferDirect=function(w,N,F,V,ae,ke){N===null&&(N=we);const Ae=ae.isMesh&&ae.matrixWorld.determinant()<0,Ie=Ja(w,N,V,ae);ve.setMaterial(V,Ae);let Pe=F.index;const Je=F.attributes.position;if(Pe===null){if(Je===void 0||Je.count===0)return}else if(Pe.count===0)return;let Ze=1;V.wireframe===!0&&(Pe=fe.getWireframeAttribute(F),Ze=2),(V.morphTargets||V.morphNormals)&&ie.update(ae,F,V,Ie),J.setup(ae,V,Ie,F,Pe);let Ee,Ge=ue;Pe!==null&&(Ee=ee.get(Pe),Ge=$,Ge.setIndex(Ee));const Zt=Pe!==null?Pe.count:Je.count,Ve=F.drawRange.start*Ze,Ln=F.drawRange.count*Ze,et=ke!==null?ke.start*Ze:0,Er=ke!==null?ke.count*Ze:1/0,ft=Math.max(Ve,et),Ii=Math.min(Zt,Ve+Ln,et+Er)-1,Vn=Math.max(0,Ii-ft+1);if(Vn!==0){if(ae.isMesh)V.wireframe===!0?(ve.setLineWidth(V.wireframeLinewidth*He()),Ge.setMode(1)):Ge.setMode(4);else if(ae.isLine){let Oi=V.linewidth;Oi===void 0&&(Oi=1),ve.setLineWidth(Oi*He()),ae.isLineSegments?Ge.setMode(1):ae.isLineLoop?Ge.setMode(2):Ge.setMode(3)}else ae.isPoints?Ge.setMode(0):ae.isSprite&&Ge.setMode(4);if(ae.isInstancedMesh)Ge.renderInstances(ft,Vn,ae.count);else if(F.isInstancedBufferGeometry){const Oi=Math.min(F.instanceCount,F._maxInstanceCount);Ge.renderInstances(ft,Vn,Oi)}else Ge.render(ft,Vn)}},this.compile=function(w,N){f=q.get(w,N),f.init(),w.traverseVisible(function(V){V.isLight&&V.layers.test(N.layers)&&(f.pushLight(V),V.castShadow&&f.pushShadow(V))}),f.setupLights(N);const F=new WeakMap;w.traverse(function(V){const ae=V.material;if(ae)if(Array.isArray(ae))for(let ke=0;ke<ae.length;ke++){const Ae=ae[ke];F.has(Ae)===!1&&(Yt(Ae,w,V),F.set(Ae))}else F.has(ae)===!1&&(Yt(ae,w,V),F.set(ae))})};let Sr=null;function _c(w){te.isPresenting||Sr&&Sr(w)}const ki=new Vl;ki.setAnimationLoop(_c),typeof window!="undefined"&&ki.setContext(window),this.setAnimationLoop=function(w){Sr=w,te.setAnimationLoop(w),w===null?ki.stop():ki.start()},this.render=function(w,N){let F,V;if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),F=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),V=arguments[3]),N!==void 0&&N.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;J.resetDefaultState(),A=-1,T=null,w.autoUpdate===!0&&w.updateMatrixWorld(),N.parent===null&&N.updateMatrixWorld(),te.enabled===!0&&te.isPresenting===!0&&(N=te.getCamera(N)),w.isScene===!0&&w.onBeforeRender(u,w,N,F||m),f=q.get(w,N),f.init(),oe.multiplyMatrices(N.projectionMatrix,N.matrixWorldInverse),j.setFromProjectionMatrix(oe),ce=this.localClippingEnabled,se=L.init(this.clippingPlanes,ce,N),h=Y.get(w,N),h.init(),Xa(w,N,0,u.sortObjects),h.finish(),u.sortObjects===!0&&h.sort(D,z),se===!0&&L.beginShadows();const ae=f.state.shadowsArray;pe.render(ae,w,N),f.setupLights(N),se===!0&&L.endShadows(),this.info.autoReset===!0&&this.info.reset(),F!==void 0&&this.setRenderTarget(F),Z.render(h,w,N,V);const ke=h.opaque,Ae=h.transparent;ke.length>0&&Ya(ke,w,N),Ae.length>0&&Ya(Ae,w,N),w.isScene===!0&&w.onAfterRender(u,w,N),m!==null&&(X.updateRenderTargetMipmap(m),X.updateMultisampleRenderTarget(m)),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1),h=null,f=null};function Xa(w,N,F,V){if(w.visible===!1)return;if(w.layers.test(N.layers)){if(w.isGroup)F=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(N);else if(w.isLight)f.pushLight(w),w.castShadow&&f.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||j.intersectsSprite(w)){V&&be.setFromMatrixPosition(w.matrixWorld).applyMatrix4(oe);const Ae=re.update(w),Ie=w.material;Ie.visible&&h.push(w,Ae,Ie,F,be.z,null)}}else if(w.isImmediateRenderObject)V&&be.setFromMatrixPosition(w.matrixWorld).applyMatrix4(oe),h.push(w,null,w.material,F,be.z,null);else if((w.isMesh||w.isLine||w.isPoints)&&(w.isSkinnedMesh&&w.skeleton.frame!==De.render.frame&&(w.skeleton.update(),w.skeleton.frame=De.render.frame),!w.frustumCulled||j.intersectsObject(w))){V&&be.setFromMatrixPosition(w.matrixWorld).applyMatrix4(oe);const Ae=re.update(w),Ie=w.material;if(Array.isArray(Ie)){const Pe=Ae.groups;for(let Je=0,Ze=Pe.length;Je<Ze;Je++){const Ee=Pe[Je],Ge=Ie[Ee.materialIndex];Ge&&Ge.visible&&h.push(w,Ae,Ge,F,be.z,Ee)}}else Ie.visible&&h.push(w,Ae,Ie,F,be.z,null)}}const ke=w.children;for(let Ae=0,Ie=ke.length;Ae<Ie;Ae++)Xa(ke[Ae],N,F,V)}function Ya(w,N,F){const V=N.isScene===!0?N.overrideMaterial:null;for(let ae=0,ke=w.length;ae<ke;ae++){const Ae=w[ae],Ie=Ae.object,Pe=Ae.geometry,Je=V===null?Ae.material:V,Ze=Ae.group;if(F.isArrayCamera){v=F;const Ee=F.cameras;for(let Ge=0,Zt=Ee.length;Ge<Zt;Ge++){const Ve=Ee[Ge];Ie.layers.test(Ve.layers)&&(ve.viewport(P.copy(Ve.viewport)),f.setupLights(Ve),Za(Ie,N,Ve,Pe,Je,Ze))}}else v=null,Za(Ie,N,F,Pe,Je,Ze)}}function Za(w,N,F,V,ae,ke){if(w.onBeforeRender(u,N,F,V,ae,ke),f=q.get(N,v||F),w.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),w.isImmediateRenderObject){const Ae=Ja(F,N,ae,w);ve.setMaterial(ae),J.reset(),gc(w,Ae)}else u.renderBufferDirect(F,N,V,ae,w,ke);w.onAfterRender(u,N,F,V,ae,ke),f=q.get(N,v||F)}function Yt(w,N,F){N.isScene!==!0&&(N=we);const V=Se.get(w),ae=f.state.lights,ke=f.state.shadowsArray,Ae=ae.state.version,Ie=M.getParameters(w,ae.state,ke,N,F),Pe=M.getProgramCacheKey(Ie);let Je=V.program,Ze=!0;if(Je===void 0)w.addEventListener("dispose",Ri);else if(Je.cacheKey!==Pe)wt(w);else if(V.lightsStateVersion!==Ae)Ze=!1;else if(Ie.shaderID!==void 0){const Ve=w.isMeshStandardMaterial?N.environment:null;V.envMap=Q.get(w.envMap||Ve);return}else Ze=!1;Ze&&(Ie.uniforms=M.getUniforms(w),w.onBeforeCompile(Ie,u),Je=M.acquireProgram(Ie,Pe),V.program=Je,V.uniforms=Ie.uniforms,V.outputEncoding=Ie.outputEncoding);const Ee=V.uniforms;(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(V.numClippingPlanes=L.numPlanes,V.numIntersection=L.numIntersection,Ee.clippingPlanes=L.uniform),V.environment=w.isMeshStandardMaterial?N.environment:null,V.fog=N.fog,V.envMap=Q.get(w.envMap||V.environment),V.needsLights=bc(w),V.lightsStateVersion=Ae,V.needsLights&&(Ee.ambientLightColor.value=ae.state.ambient,Ee.lightProbe.value=ae.state.probe,Ee.directionalLights.value=ae.state.directional,Ee.directionalLightShadows.value=ae.state.directionalShadow,Ee.spotLights.value=ae.state.spot,Ee.spotLightShadows.value=ae.state.spotShadow,Ee.rectAreaLights.value=ae.state.rectArea,Ee.ltc_1.value=ae.state.rectAreaLTC1,Ee.ltc_2.value=ae.state.rectAreaLTC2,Ee.pointLights.value=ae.state.point,Ee.pointLightShadows.value=ae.state.pointShadow,Ee.hemisphereLights.value=ae.state.hemi,Ee.directionalShadowMap.value=ae.state.directionalShadowMap,Ee.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,Ee.spotShadowMap.value=ae.state.spotShadowMap,Ee.spotShadowMatrix.value=ae.state.spotShadowMatrix,Ee.pointShadowMap.value=ae.state.pointShadowMap,Ee.pointShadowMatrix.value=ae.state.pointShadowMatrix);const Ge=V.program.getUniforms(),Zt=vn.seqWithValue(Ge.seq,Ee);V.uniformsList=Zt}function Ja(w,N,F,V){N.isScene!==!0&&(N=we),X.resetTextureUnits();const ae=N.fog,ke=F.isMeshStandardMaterial?N.environment:null,Ae=m===null?u.outputEncoding:m.texture.encoding,Ie=Q.get(F.envMap||ke),Pe=Se.get(F),Je=f.state.lights;if(se===!0&&(ce===!0||w!==T)){const et=w===T&&F.id===A;L.setState(F,w,et)}F.version===Pe.__version?(F.fog&&Pe.fog!==ae||Pe.environment!==ke||Pe.needsLights&&Pe.lightsStateVersion!==Je.state.version||Pe.numClippingPlanes!==void 0&&(Pe.numClippingPlanes!==L.numPlanes||Pe.numIntersection!==L.numIntersection)||Pe.outputEncoding!==Ae||Pe.envMap!==Ie)&&Yt(F,N,V):(Yt(F,N,V),Pe.__version=F.version);let Ze=!1,Ee=!1,Ge=!1;const Zt=Pe.program,Ve=Zt.getUniforms(),Ln=Pe.uniforms;if(ve.useProgram(Zt.program)&&(Ze=!0,Ee=!0,Ge=!0),F.id!==A&&(A=F.id,Ee=!0),Ze||T!==w){if(Ve.setValue(W,"projectionMatrix",w.projectionMatrix),Re.logarithmicDepthBuffer&&Ve.setValue(W,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),T!==w&&(T=w,Ee=!0,Ge=!0),F.isShaderMaterial||F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshStandardMaterial||F.envMap){const et=Ve.map.cameraPosition;et!==void 0&&et.setValue(W,be.setFromMatrixPosition(w.matrixWorld))}(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial)&&Ve.setValue(W,"isOrthographic",w.isOrthographicCamera===!0),(F.isMeshPhongMaterial||F.isMeshToonMaterial||F.isMeshLambertMaterial||F.isMeshBasicMaterial||F.isMeshStandardMaterial||F.isShaderMaterial||F.isShadowMaterial||F.skinning)&&Ve.setValue(W,"viewMatrix",w.matrixWorldInverse)}if(F.skinning){Ve.setOptional(W,V,"bindMatrix"),Ve.setOptional(W,V,"bindMatrixInverse");const et=V.skeleton;if(et){const Er=et.bones;if(Re.floatVertexTextures){if(et.boneTexture===null){let ft=Math.sqrt(Er.length*4);ft=Me.ceilPowerOfTwo(ft),ft=Math.max(ft,4);const Ii=new Float32Array(ft*ft*4);Ii.set(et.boneMatrices);const Vn=new yi(Ii,ft,ft,Ft,yn);et.boneMatrices=Ii,et.boneTexture=Vn,et.boneTextureSize=ft}Ve.setValue(W,"boneTexture",et.boneTexture,X),Ve.setValue(W,"boneTextureSize",et.boneTextureSize)}else Ve.setOptional(W,et,"boneMatrices")}}return(Ee||Pe.receiveShadow!==V.receiveShadow)&&(Pe.receiveShadow=V.receiveShadow,Ve.setValue(W,"receiveShadow",V.receiveShadow)),Ee&&(Ve.setValue(W,"toneMappingExposure",u.toneMappingExposure),Pe.needsLights&&yc(Ln,Ge),ae&&F.fog&&x.refreshFogUniforms(Ln,ae),x.refreshMaterialUniforms(Ln,F,B,C),vn.upload(W,Pe.uniformsList,Ln,X)),F.isShaderMaterial&&F.uniformsNeedUpdate===!0&&(vn.upload(W,Pe.uniformsList,Ln,X),F.uniformsNeedUpdate=!1),F.isSpriteMaterial&&Ve.setValue(W,"center",V.center),Ve.setValue(W,"modelViewMatrix",V.modelViewMatrix),Ve.setValue(W,"normalMatrix",V.normalMatrix),Ve.setValue(W,"modelMatrix",V.matrixWorld),Zt}function yc(w,N){w.ambientLightColor.needsUpdate=N,w.lightProbe.needsUpdate=N,w.directionalLights.needsUpdate=N,w.directionalLightShadows.needsUpdate=N,w.pointLights.needsUpdate=N,w.pointLightShadows.needsUpdate=N,w.spotLights.needsUpdate=N,w.spotLightShadows.needsUpdate=N,w.rectAreaLights.needsUpdate=N,w.hemisphereLights.needsUpdate=N}function bc(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.setFramebuffer=function(w){_!==w&&m===null&&W.bindFramebuffer(36160,w),_=w},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return g},this.getRenderList=function(){return h},this.setRenderList=function(w){h=w},this.getRenderState=function(){return f},this.setRenderState=function(w){f=w},this.getRenderTarget=function(){return m},this.setRenderTarget=function(w,N=0,F=0){m=w,y=N,g=F,w&&Se.get(w).__webglFramebuffer===void 0&&X.setupRenderTarget(w);let V=_,ae=!1;if(w){const ke=Se.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(V=ke[N],ae=!0):w.isWebGLMultisampleRenderTarget?V=Se.get(w).__webglMultisampledFramebuffer:V=ke,P.copy(w.viewport),U.copy(w.scissor),K=w.scissorTest}else P.copy(k).multiplyScalar(B).floor(),U.copy(I).multiplyScalar(B).floor(),K=G;if(E!==V&&(W.bindFramebuffer(36160,V),E=V),ve.viewport(P),ve.scissor(U),ve.setScissorTest(K),ae){const ke=Se.get(w.texture);W.framebufferTexture2D(36160,36064,34069+N,ke.__webglTexture,F)}},this.readRenderTargetPixels=function(w,N,F,V,ae,ke,Ae){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ie=Se.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&Ae!==void 0&&(Ie=Ie[Ae]),Ie){let Pe=!1;Ie!==E&&(W.bindFramebuffer(36160,Ie),Pe=!0);try{const Je=w.texture,Ze=Je.format,Ee=Je.type;if(Ze!==Ft&&S.convert(Ze)!==W.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(Ee!==Ba&&S.convert(Ee)!==W.getParameter(35738)&&!(Ee===yn&&(Re.isWebGL2||ge.get("OES_texture_float")||ge.get("WEBGL_color_buffer_float")))&&!(Ee===tr&&(Re.isWebGL2?ge.get("EXT_color_buffer_float"):ge.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}W.checkFramebufferStatus(36160)===36053?N>=0&&N<=w.width-V&&F>=0&&F<=w.height-ae&&W.readPixels(N,F,V,ae,S.convert(Ze),S.convert(Ee),ke):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{Pe&&W.bindFramebuffer(36160,E)}}},this.copyFramebufferToTexture=function(w,N,F=0){const V=Math.pow(2,-F),ae=Math.floor(N.image.width*V),ke=Math.floor(N.image.height*V),Ae=S.convert(N.format);X.setTexture2D(N,0),W.copyTexImage2D(3553,F,Ae,w.x,w.y,ae,ke,0),ve.unbindTexture()},this.copyTextureToTexture=function(w,N,F,V=0){const ae=N.image.width,ke=N.image.height,Ae=S.convert(F.format),Ie=S.convert(F.type);X.setTexture2D(F,0),W.pixelStorei(37440,F.flipY),W.pixelStorei(37441,F.premultiplyAlpha),W.pixelStorei(3317,F.unpackAlignment),N.isDataTexture?W.texSubImage2D(3553,V,w.x,w.y,ae,ke,Ae,Ie,N.image.data):N.isCompressedTexture?W.compressedTexSubImage2D(3553,V,w.x,w.y,N.mipmaps[0].width,N.mipmaps[0].height,Ae,N.mipmaps[0].data):W.texSubImage2D(3553,V,w.x,w.y,Ae,Ie,N.image),V===0&&F.generateMipmaps&&W.generateMipmap(3553),ve.unbindTexture()},this.initTexture=function(w){X.setTexture2D(w,0),ve.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function jo(t){_s.call(this,t)}jo.prototype=Object.assign(Object.create(_s.prototype),{constructor:jo,isWebGL1Renderer:!0});class Ga{constructor(e,n){Object.defineProperty(this,"isFogExp2",{value:!0}),this.name="",this.color=new de(e),this.density=n!==void 0?n:25e-5}clone(){return new Ga(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class $l extends _e{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,n){return super.copy(e,n),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const n=super.toJSON(e);return this.background!==null&&(n.object.background=this.background.toJSON(e)),this.environment!==null&&(n.object.environment=this.environment.toJSON(e)),this.fog!==null&&(n.object.fog=this.fog.toJSON()),n}}function Mt(t,e){this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=xr,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Me.generateUUID()}Object.defineProperty(Mt.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(Mt.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Me.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new Mt(e,this.stride);return n.setUsage(this.usage),n},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Me.generateUUID()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const In=new b;function zn(t,e,n,i){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i===!0}Object.defineProperties(zn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}});Object.assign(zn.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)In.x=this.getX(e),In.y=this.getY(e),In.z=this.getZ(e),In.applyMatrix4(t),this.setXYZ(e,In.x,In.y,In.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this},setXYZW:function(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this},clone:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new xe(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new zn(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}});function Bn(t){ye.call(this),this.type="SpriteMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}Bn.prototype=Object.create(ye.prototype);Bn.prototype.constructor=Bn;Bn.prototype.isSpriteMaterial=!0;Bn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};let ni;const Ui=new b,ii=new b,si=new b,ri=new H,Hi=new H,ec=new Te,Os=new b,Gi=new b,Ds=new b,qo=new H,Zr=new H,Xo=new H;function Yo(t){if(_e.call(this),this.type="Sprite",ni===void 0){ni=new Be;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Mt(e,5);ni.setIndex([0,1,2,0,2,3]),ni.setAttribute("position",new zn(n,3,0,!1)),ni.setAttribute("uv",new zn(n,2,3,!1))}this.geometry=ni,this.material=t!==void 0?t:new Bn,this.center=new H(.5,.5)}Yo.prototype=Object.assign(Object.create(_e.prototype),{constructor:Yo,isSprite:!0,raycast:function(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ii.setFromMatrixScale(this.matrixWorld),ec.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),si.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&ii.multiplyScalar(-si.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const r=this.center;Fs(Os.set(-.5,-.5,0),si,r,ii,i,s),Fs(Gi.set(.5,-.5,0),si,r,ii,i,s),Fs(Ds.set(.5,.5,0),si,r,ii,i,s),qo.set(0,0),Zr.set(1,0),Xo.set(1,1);let a=t.ray.intersectTriangle(Os,Gi,Ds,!1,Ui);if(a===null&&(Fs(Gi.set(-.5,.5,0),si,r,ii,i,s),Zr.set(0,1),a=t.ray.intersectTriangle(Os,Ds,Gi,!1,Ui),a===null))return;const o=t.ray.origin.distanceTo(Ui);o<t.near||o>t.far||e.push({distance:o,point:Ui.clone(),uv:ot.getUV(Ui,Os,Gi,Ds,qo,Zr,Xo,new H),face:null,object:this})},copy:function(t){return _e.prototype.copy.call(this,t),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}});function Fs(t,e,n,i,s,r){ri.subVectors(t,n).addScalar(.5).multiply(i),s!==void 0?(Hi.x=r*ri.x-s*ri.y,Hi.y=s*ri.x+r*ri.y):Hi.copy(ri),t.copy(e),t.x+=Hi.x,t.y+=Hi.y,t.applyMatrix4(ec)}const Ns=new b,Zo=new b;function da(){_e.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}da.prototype=Object.assign(Object.create(_e.prototype),{constructor:da,isLOD:!0,copy:function(t){_e.prototype.copy.call(this,t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const s=e[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const n=this.levels;let i;for(i=0;i<n.length&&!(e<n[i].distance);i++);return n.splice(i,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){Ns.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(Ns);this.getObjectForDistance(i).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){Ns.setFromMatrixPosition(t.matrixWorld),Zo.setFromMatrixPosition(this.matrixWorld);const n=Ns.distanceTo(Zo)/t.zoom;e[0].object.visible=!0;let i,s;for(i=1,s=e.length;i<s&&n>=e[i].distance;i++)e[i-1].object.visible=!1,e[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}},toJSON:function(t){const e=_e.prototype.toJSON.call(this,t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const r=n[i];e.object.levels.push({object:r.object.uuid,distance:r.distance})}return e}});function fa(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),$e.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Te,this.bindMatrixInverse=new Te}fa.prototype=Object.assign(Object.create($e.prototype),{constructor:fa,isSkinnedMesh:!0,copy:function(t){return $e.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new ze,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){$e.prototype.updateMatrixWorld.call(this,t),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(){const t=new b,e=new ze,n=new ze,i=new b,s=new Te;return function(r,a){const o=this.skeleton,l=this.geometry;e.fromBufferAttribute(l.attributes.skinIndex,r),n.fromBufferAttribute(l.attributes.skinWeight,r),t.fromBufferAttribute(l.attributes.position,r).applyMatrix4(this.bindMatrix),a.set(0,0,0);for(let c=0;c<4;c++){const d=n.getComponent(c);if(d!==0){const h=e.getComponent(c);s.multiplyMatrices(o.bones[h].matrixWorld,o.boneInverses[h]),a.addScaledVector(i.copy(t).applyMatrix4(s),d)}}return a.applyMatrix4(this.bindMatrixInverse)}}()});function pa(){_e.call(this),this.type="Bone"}pa.prototype=Object.assign(Object.create(_e.prototype),{constructor:pa,isBone:!0});const Jo=new Te,bm=new Te;function ma(t=[],e=[]){this.uuid=Me.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(ma.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Te)}},calculateInverses:function(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Te;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,r=t.length;s<r;s++){const a=t[s]?t[s].matrixWorld:bm;Jo.multiplyMatrices(a,e[s]),Jo.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)},clone:function(){return new ma(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}},dispose:function(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const s=t.bones[n];let r=e[s];r===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),r=new pa),this.bones.push(r),this.boneInverses.push(new Te().fromArray(t.boneInverses[n]))}return this.init(),this},toJSON:function(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const r=e[i];t.bones.push(r.uuid);const a=n[i];t.boneInverses.push(a.toArray())}return t}});const Ko=new Te,Qo=new Te,zs=[],Vi=new $e;function $o(t,e,n){$e.call(this,t,e),this.instanceMatrix=new xe(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}$o.prototype=Object.assign(Object.create($e.prototype),{constructor:$o,isInstancedMesh:!0,copy:function(t){return $e.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,t*3)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,t*16)},raycast:function(t,e){const n=this.matrixWorld,i=this.count;if(Vi.geometry=this.geometry,Vi.material=this.material,Vi.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Ko),Qo.multiplyMatrices(n,Ko),Vi.matrixWorld=Qo,Vi.raycast(t,zs);for(let r=0,a=zs.length;r<a;r++){const o=zs[r];o.instanceId=s,o.object=this,e.push(o)}zs.length=0}},setColorAt:function(t,e){this.instanceColor===null&&(this.instanceColor=new xe(new Float32Array(this.count*3),3)),e.toArray(this.instanceColor.array,t*3)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,t*16)},updateMorphTargets:function(){}});function Tt(t){ye.call(this),this.type="LineBasicMaterial",this.color=new de(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}Tt.prototype=Object.create(ye.prototype);Tt.prototype.constructor=Tt;Tt.prototype.isLineBasicMaterial=!0;Tt.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const el=new b,tl=new b,nl=new Te,Bs=new gs,Us=new Pn;function bi(t,e,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),_e.call(this),this.type="Line",this.geometry=t!==void 0?t:new Be,this.material=e!==void 0?e:new Tt,this.updateMorphTargets()}bi.prototype=Object.assign(Object.create(_e.prototype),{constructor:bi,isLine:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)el.fromBufferAttribute(e,i-1),tl.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=el.distanceTo(tl);t.setAttribute("lineDistance",new Ne(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let i=1,s=e.length;i<s;i++)n[i]=n[i-1],n[i]+=e[i-1].distanceTo(e[i])}return this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Us.copy(n.boundingSphere),Us.applyMatrix4(i),Us.radius+=s,t.ray.intersectsSphere(Us)===!1)return;nl.copy(i).invert(),Bs.copy(t.ray).applyMatrix4(nl);const r=s/((this.scale.x+this.scale.y+this.scale.z)/3),a=r*r,o=new b,l=new b,c=new b,d=new b,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const f=n.index,p=n.attributes.position;if(f!==null){const _=f.array;for(let y=0,g=_.length-1;y<g;y+=h){const m=_[y],E=_[y+1];if(o.fromBufferAttribute(p,m),l.fromBufferAttribute(p,E),Bs.distanceSqToSegment(o,l,d,c)>a)continue;d.applyMatrix4(this.matrixWorld);const T=t.ray.origin.distanceTo(d);T<t.near||T>t.far||e.push({distance:T,point:c.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(let _=0,y=p.count-1;_<y;_+=h){if(o.fromBufferAttribute(p,_),l.fromBufferAttribute(p,_+1),Bs.distanceSqToSegment(o,l,d,c)>a)continue;d.applyMatrix4(this.matrixWorld);const m=t.ray.origin.distanceTo(d);m<t.near||m>t.far||e.push({distance:m,point:c.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const f=n.vertices,u=f.length;for(let p=0;p<u-1;p+=h){if(Bs.distanceSqToSegment(f[p],f[p+1],d,c)>a)continue;d.applyMatrix4(this.matrixWorld);const y=t.ray.origin.distanceTo(d);y<t.near||y>t.far||e.push({distance:y,point:c.clone().applyMatrix4(this.matrixWorld),index:p,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Hs=new b,Gs=new b;function rr(t,e){bi.call(this,t,e),this.type="LineSegments"}rr.prototype=Object.assign(Object.create(bi.prototype),{constructor:rr,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)Hs.fromBufferAttribute(e,i),Gs.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hs.distanceTo(Gs);t.setAttribute("lineDistance",new Ne(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let i=0,s=e.length;i<s;i+=2)Hs.copy(e[i]),Gs.copy(e[i+1]),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Hs.distanceTo(Gs)}return this}});function il(t,e){bi.call(this,t,e),this.type="LineLoop"}il.prototype=Object.assign(Object.create(bi.prototype),{constructor:il,isLineLoop:!0});function Un(t){ye.call(this),this.type="PointsMaterial",this.color=new de(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}Un.prototype=Object.create(ye.prototype);Un.prototype.constructor=Un;Un.prototype.isPointsMaterial=!0;Un.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const sl=new Te,ga=new gs,Vs=new Pn,Ws=new b;function rl(t,e){_e.call(this),this.type="Points",this.geometry=t!==void 0?t:new Be,this.material=e!==void 0?e:new Un,this.updateMorphTargets()}rl.prototype=Object.assign(Object.create(_e.prototype),{constructor:rl,isPoints:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold;if(n.boundingSphere===null&&n.computeBoundingSphere(),Vs.copy(n.boundingSphere),Vs.applyMatrix4(i),Vs.radius+=s,t.ray.intersectsSphere(Vs)===!1)return;sl.copy(i).invert(),ga.copy(t.ray).applyMatrix4(sl);const r=s/((this.scale.x+this.scale.y+this.scale.z)/3),a=r*r;if(n.isBufferGeometry){const o=n.index,c=n.attributes.position;if(o!==null){const d=o.array;for(let h=0,f=d.length;h<f;h++){const u=d[h];Ws.fromBufferAttribute(c,u),Jr(Ws,u,a,i,t,e,this)}}else for(let d=0,h=c.count;d<h;d++)Ws.fromBufferAttribute(c,d),Jr(Ws,d,a,i,t,e,this)}else{const o=n.vertices;for(let l=0,c=o.length;l<c;l++)Jr(o[l],l,a,i,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,r=i.length;s<r;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const e=t.morphTargets;e!==void 0&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});function Jr(t,e,n,i,s,r,a){const o=ga.distanceSqToPoint(t);if(o<n){const l=new b;ga.closestPointToPoint(t,l),l.applyMatrix4(i);const c=s.ray.origin.distanceTo(l);if(c<s.near||c>s.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}function al(t,e,n,i,s,r,a,o,l){je.call(this,t,e,n,i,s,r,a,o,l),this.format=a!==void 0?a:On,this.minFilter=r!==void 0?r:lt,this.magFilter=s!==void 0?s:lt,this.generateMipmaps=!1;const c=this;function d(){c.needsUpdate=!0,t.requestVideoFrameCallback(d)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(d)}al.prototype=Object.assign(Object.create(je.prototype),{constructor:al,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function as(t,e,n,i,s,r,a,o,l,c,d,h){je.call(this,null,r,a,o,l,c,i,s,d,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}as.prototype=Object.create(je.prototype);as.prototype.constructor=as;as.prototype.isCompressedTexture=!0;function ar(t,e,n,i,s,r,a,o,l){je.call(this,t,e,n,i,s,r,a,o,l),this.needsUpdate=!0}ar.prototype=Object.create(je.prototype);ar.prototype.constructor=ar;ar.prototype.isCanvasTexture=!0;function or(t,e,n,i,s,r,a,o,l,c){if(c=c!==void 0?c:pi,c!==pi&&c!==es)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&c===pi&&(n=er),n===void 0&&c===es&&(n=Zi),je.call(this,null,i,s,r,a,o,c,n,l),this.image={width:t,height:e},this.magFilter=a!==void 0?a:rt,this.minFilter=o!==void 0?o:rt,this.flipY=!1,this.generateMipmaps=!1}or.prototype=Object.create(je.prototype);or.prototype.constructor=or;or.prototype.isDepthTexture=!0;let vm=0;const Bt=new Te,Kr=new _e,js=new b;function mt(){Object.defineProperty(this,"id",{value:vm+=2}),this.uuid=Me.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}mt.prototype=Object.assign(Object.create(Pt.prototype),{constructor:mt,isGeometry:!0,applyMatrix4:function(t){const e=new pt().getNormalMatrix(t);for(let n=0,i=this.vertices.length;n<i;n++)this.vertices[n].applyMatrix4(t);for(let n=0,i=this.faces.length;n<i;n++){const s=this.faces[n];s.normal.applyMatrix3(e).normalize();for(let r=0,a=s.vertexNormals.length;r<a;r++)s.vertexNormals[r].applyMatrix3(e).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return Bt.makeRotationX(t),this.applyMatrix4(Bt),this},rotateY:function(t){return Bt.makeRotationY(t),this.applyMatrix4(Bt),this},rotateZ:function(t){return Bt.makeRotationZ(t),this.applyMatrix4(Bt),this},translate:function(t,e,n){return Bt.makeTranslation(t,e,n),this.applyMatrix4(Bt),this},scale:function(t,e,n){return Bt.makeScale(t,e,n),this.applyMatrix4(Bt),this},lookAt:function(t){return Kr.lookAt(t),Kr.updateMatrix(),this.applyMatrix4(Kr.matrix),this},fromBufferGeometry:function(t){const e=this,n=t.index!==null?t.index:void 0,i=t.attributes;if(i.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const s=i.position,r=i.normal,a=i.color,o=i.uv,l=i.uv2;l!==void 0&&(this.faceVertexUvs[1]=[]);for(let h=0;h<s.count;h++)e.vertices.push(new b().fromBufferAttribute(s,h)),a!==void 0&&e.colors.push(new de().fromBufferAttribute(a,h));function c(h,f,u,p){const _=a===void 0?[]:[e.colors[h].clone(),e.colors[f].clone(),e.colors[u].clone()],y=r===void 0?[]:[new b().fromBufferAttribute(r,h),new b().fromBufferAttribute(r,f),new b().fromBufferAttribute(r,u)],g=new Le(h,f,u,y,_,p);e.faces.push(g),o!==void 0&&e.faceVertexUvs[0].push([new H().fromBufferAttribute(o,h),new H().fromBufferAttribute(o,f),new H().fromBufferAttribute(o,u)]),l!==void 0&&e.faceVertexUvs[1].push([new H().fromBufferAttribute(l,h),new H().fromBufferAttribute(l,f),new H().fromBufferAttribute(l,u)])}const d=t.groups;if(d.length>0)for(let h=0;h<d.length;h++){const f=d[h],u=f.start,p=f.count;for(let _=u,y=u+p;_<y;_+=3)n!==void 0?c(n.getX(_),n.getX(_+1),n.getX(_+2),f.materialIndex):c(_,_+1,_+2,f.materialIndex)}else if(n!==void 0)for(let h=0;h<n.count;h+=3)c(n.getX(h),n.getX(h+1),n.getX(h+2));else for(let h=0;h<s.count;h+=3)c(h,h+1,h+2);return this.computeFaceNormals(),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(js).negate(),this.translate(js.x,js.y,js.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=e===0?1:1/e,i=new Te;return i.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(i),this},computeFaceNormals:function(){const t=new b,e=new b;for(let n=0,i=this.faces.length;n<i;n++){const s=this.faces[n],r=this.vertices[s.a],a=this.vertices[s.b],o=this.vertices[s.c];t.subVectors(o,a),e.subVectors(r,a),t.cross(e),t.normalize(),s.normal.copy(t)}},computeVertexNormals:function(t=!0){const e=new Array(this.vertices.length);for(let n=0,i=this.vertices.length;n<i;n++)e[n]=new b;if(t){const n=new b,i=new b;for(let s=0,r=this.faces.length;s<r;s++){const a=this.faces[s],o=this.vertices[a.a],l=this.vertices[a.b],c=this.vertices[a.c];n.subVectors(c,l),i.subVectors(o,l),n.cross(i),e[a.a].add(n),e[a.b].add(n),e[a.c].add(n)}}else{this.computeFaceNormals();for(let n=0,i=this.faces.length;n<i;n++){const s=this.faces[n];e[s.a].add(s.normal),e[s.b].add(s.normal),e[s.c].add(s.normal)}}for(let n=0,i=this.vertices.length;n<i;n++)e[n].normalize();for(let n=0,i=this.faces.length;n<i;n++){const s=this.faces[n],r=s.vertexNormals;r.length===3?(r[0].copy(e[s.a]),r[1].copy(e[s.b]),r[2].copy(e[s.c])):(r[0]=e[s.a].clone(),r[1]=e[s.b].clone(),r[2]=e[s.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const n=this.faces[t],i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(let s=0,r=i.vertexNormals.length;s<r;s++)i.__originalVertexNormals[s]?i.__originalVertexNormals[s].copy(i.vertexNormals[s]):i.__originalVertexNormals[s]=i.vertexNormals[s].clone()}const t=new mt;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const s=this.morphNormals[e].faceNormals,r=this.morphNormals[e].vertexNormals;for(let a=0,o=this.faces.length;a<o;a++){const l=new b,c={a:new b,b:new b,c:new b};s.push(l),r.push(c)}}const i=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let s=0,r=this.faces.length;s<r;s++){const a=this.faces[s],o=i.faceNormals[s],l=i.vertexNormals[s];o.copy(a.normal),l.a.copy(a.vertexNormals[0]),l.b.copy(a.vertexNormals[1]),l.c.copy(a.vertexNormals[2])}}for(let e=0,n=this.faces.length;e<n;e++){const i=this.faces[e];i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals}},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new An),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Pn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n=0){if(!(t&&t.isGeometry)){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);return}let i;const s=this.vertices.length,r=this.vertices,a=t.vertices,o=this.faces,l=t.faces,c=this.colors,d=t.colors;e!==void 0&&(i=new pt().getNormalMatrix(e));for(let h=0,f=a.length;h<f;h++){const p=a[h].clone();e!==void 0&&p.applyMatrix4(e),r.push(p)}for(let h=0,f=d.length;h<f;h++)c.push(d[h].clone());for(let h=0,f=l.length;h<f;h++){const u=l[h];let p,_;const y=u.vertexNormals,g=u.vertexColors,m=new Le(u.a+s,u.b+s,u.c+s);m.normal.copy(u.normal),i!==void 0&&m.normal.applyMatrix3(i).normalize();for(let E=0,A=y.length;E<A;E++)p=y[E].clone(),i!==void 0&&p.applyMatrix3(i).normalize(),m.vertexNormals.push(p);m.color.copy(u.color);for(let E=0,A=g.length;E<A;E++)_=g[E],m.vertexColors.push(_.clone());m.materialIndex=u.materialIndex+n,o.push(m)}for(let h=0,f=t.faceVertexUvs.length;h<f;h++){const u=t.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(let p=0,_=u.length;p<_;p++){const y=u[p],g=[];for(let m=0,E=y.length;m<E;m++)g.push(y[m].clone());this.faceVertexUvs[h].push(g)}}},mergeMesh:function(t){if(!(t&&t.isMesh)){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t);return}t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)},mergeVertices:function(t=4){const e={},n=[],i=[],s=Math.pow(10,t);for(let o=0,l=this.vertices.length;o<l;o++){const c=this.vertices[o],d=Math.round(c.x*s)+"_"+Math.round(c.y*s)+"_"+Math.round(c.z*s);e[d]===void 0?(e[d]=o,n.push(this.vertices[o]),i[o]=n.length-1):i[o]=i[e[d]]}const r=[];for(let o=0,l=this.faces.length;o<l;o++){const c=this.faces[o];c.a=i[c.a],c.b=i[c.b],c.c=i[c.c];const d=[c.a,c.b,c.c];for(let h=0;h<3;h++)if(d[h]===d[(h+1)%3]){r.push(o);break}}for(let o=r.length-1;o>=0;o--){const l=r[o];this.faces.splice(l,1);for(let c=0,d=this.faceVertexUvs.length;c<d;c++)this.faceVertexUvs[c].splice(l,1)}const a=this.vertices.length-n.length;return this.vertices=n,a},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const i=t[e];this.vertices.push(new b(i.x,i.y,i.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let o=0;o<e;o++)t[o]._id=o;function n(o,l){return o.materialIndex-l.materialIndex}t.sort(n);const i=this.faceVertexUvs[0],s=this.faceVertexUvs[1];let r,a;i&&i.length===e&&(r=[]),s&&s.length===e&&(a=[]);for(let o=0;o<e;o++){const l=t[o]._id;r&&r.push(i[l]),a&&a.push(s[l])}r&&(this.faceVertexUvs[0]=r),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.parameters!==void 0){const u=this.parameters;for(const p in u)u[p]!==void 0&&(t[p]=u[p]);return t}const e=[];for(let u=0;u<this.vertices.length;u++){const p=this.vertices[u];e.push(p.x,p.y,p.z)}const n=[],i=[],s={},r=[],a={},o=[],l={};for(let u=0;u<this.faces.length;u++){const p=this.faces[u],_=!0,y=!1,g=this.faceVertexUvs[0][u]!==void 0,m=p.normal.length()>0,E=p.vertexNormals.length>0,A=p.color.r!==1||p.color.g!==1||p.color.b!==1,T=p.vertexColors.length>0;let v=0;if(v=c(v,0,0),v=c(v,1,_),v=c(v,2,y),v=c(v,3,g),v=c(v,4,m),v=c(v,5,E),v=c(v,6,A),v=c(v,7,T),n.push(v),n.push(p.a,p.b,p.c),n.push(p.materialIndex),g){const P=this.faceVertexUvs[0][u];n.push(f(P[0]),f(P[1]),f(P[2]))}if(m&&n.push(d(p.normal)),E){const P=p.vertexNormals;n.push(d(P[0]),d(P[1]),d(P[2]))}if(A&&n.push(h(p.color)),T){const P=p.vertexColors;n.push(h(P[0]),h(P[1]),h(P[2]))}}function c(u,p,_){return _?u|1<<p:u&~(1<<p)}function d(u){const p=u.x.toString()+u.y.toString()+u.z.toString();return s[p]!==void 0||(s[p]=i.length/3,i.push(u.x,u.y,u.z)),s[p]}function h(u){const p=u.r.toString()+u.g.toString()+u.b.toString();return a[p]!==void 0||(a[p]=r.length,r.push(u.getHex())),a[p]}function f(u){const p=u.x.toString()+u.y.toString();return l[p]!==void 0||(l[p]=o.length/2,o.push(u.x,u.y)),l[p]}return t.data={},t.data.vertices=e,t.data.normals=i,r.length>0&&(t.data.colors=r),o.length>0&&(t.data.uvs=[o]),t.data.faces=n,t},clone:function(){return new mt().copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let h=0,f=e.length;h<f;h++)this.vertices.push(e[h].clone());const n=t.colors;for(let h=0,f=n.length;h<f;h++)this.colors.push(n[h].clone());const i=t.faces;for(let h=0,f=i.length;h<f;h++)this.faces.push(i[h].clone());for(let h=0,f=t.faceVertexUvs.length;h<f;h++){const u=t.faceVertexUvs[h];this.faceVertexUvs[h]===void 0&&(this.faceVertexUvs[h]=[]);for(let p=0,_=u.length;p<_;p++){const y=u[p],g=[];for(let m=0,E=y.length;m<E;m++){const A=y[m];g.push(A.clone())}this.faceVertexUvs[h].push(g)}}const s=t.morphTargets;for(let h=0,f=s.length;h<f;h++){const u={};if(u.name=s[h].name,s[h].vertices!==void 0){u.vertices=[];for(let p=0,_=s[h].vertices.length;p<_;p++)u.vertices.push(s[h].vertices[p].clone())}if(s[h].normals!==void 0){u.normals=[];for(let p=0,_=s[h].normals.length;p<_;p++)u.normals.push(s[h].normals[p].clone())}this.morphTargets.push(u)}const r=t.morphNormals;for(let h=0,f=r.length;h<f;h++){const u={};if(r[h].vertexNormals!==void 0){u.vertexNormals=[];for(let p=0,_=r[h].vertexNormals.length;p<_;p++){const y=r[h].vertexNormals[p],g={};g.a=y.a.clone(),g.b=y.b.clone(),g.c=y.c.clone(),u.vertexNormals.push(g)}}if(r[h].faceNormals!==void 0){u.faceNormals=[];for(let p=0,_=r[h].faceNormals.length;p<_;p++)u.faceNormals.push(r[h].faceNormals[p].clone())}this.morphNormals.push(u)}const a=t.skinWeights;for(let h=0,f=a.length;h<f;h++)this.skinWeights.push(a[h].clone());const o=t.skinIndices;for(let h=0,f=o.length;h<f;h++)this.skinIndices.push(o[h].clone());const l=t.lineDistances;for(let h=0,f=l.length;h<f;h++)this.lineDistances.push(l[h]);const c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());const d=t.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class lr extends mt{constructor(e,n,i,s,r,a){super(),this.type="BoxGeometry",this.parameters={width:e,height:n,depth:i,widthSegments:s,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new Ha(e,n,i,s,r,a)),this.mergeVertices()}}new b;new b;new b;new ot;const xm={triangulate:function(t,e,n){n=n||2;const i=e&&e.length,s=i?e[0]*n:t.length;let r=tc(t,0,s,n,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,d,h,f,u;if(i&&(r=Tm(t,e,r,n)),t.length>80*n){o=c=t[0],l=d=t[1];for(let p=n;p<s;p+=n)h=t[p],f=t[p+1],h<o&&(o=h),f<l&&(l=f),h>c&&(c=h),f>d&&(d=f);u=Math.max(c-o,d-l),u=u!==0?1/u:0}return os(r,a,n,o,l,u),a}};function tc(t,e,n,i,s){let r,a;if(s===Nm(t,e,n,i)>0)for(r=e;r<n;r+=i)a=ol(r,t[r],t[r+1],a);else for(r=n-i;r>=e;r-=i)a=ol(r,t[r],t[r+1],a);return a&&Mr(a,a.next)&&(cs(a),a=a.next),a}function En(t,e){if(!t)return t;e||(e=t);let n=t,i;do if(i=!1,!n.steiner&&(Mr(n,n.next)||Ye(n.prev,n,n.next)===0)){if(cs(n),n=e=n.prev,n===n.next)break;i=!0}else n=n.next;while(i||n!==e);return e}function os(t,e,n,i,s,r,a){if(!t)return;!a&&r&&Rm(t,i,s,r);let o=t,l,c;for(;t.prev!==t.next;){if(l=t.prev,c=t.next,r?Mm(t,i,s,r):wm(t)){e.push(l.i/n),e.push(t.i/n),e.push(c.i/n),cs(t),t=c.next,o=c.next;continue}if(t=c,t===o){a?a===1?(t=Sm(En(t),e,n),os(t,e,n,i,s,r,2)):a===2&&Em(t,e,n,i,s,r):os(En(t),e,n,i,s,r,1);break}}}function wm(t){const e=t.prev,n=t,i=t.next;if(Ye(e,n,i)>=0)return!1;let s=t.next.next;for(;s!==t.prev;){if(fi(e.x,e.y,n.x,n.y,i.x,i.y,s.x,s.y)&&Ye(s.prev,s,s.next)>=0)return!1;s=s.next}return!0}function Mm(t,e,n,i){const s=t.prev,r=t,a=t.next;if(Ye(s,r,a)>=0)return!1;const o=s.x<r.x?s.x<a.x?s.x:a.x:r.x<a.x?r.x:a.x,l=s.y<r.y?s.y<a.y?s.y:a.y:r.y<a.y?r.y:a.y,c=s.x>r.x?s.x>a.x?s.x:a.x:r.x>a.x?r.x:a.x,d=s.y>r.y?s.y>a.y?s.y:a.y:r.y>a.y?r.y:a.y,h=_a(o,l,e,n,i),f=_a(c,d,e,n,i);let u=t.prevZ,p=t.nextZ;for(;u&&u.z>=h&&p&&p.z<=f;){if(u!==t.prev&&u!==t.next&&fi(s.x,s.y,r.x,r.y,a.x,a.y,u.x,u.y)&&Ye(u.prev,u,u.next)>=0||(u=u.prevZ,p!==t.prev&&p!==t.next&&fi(s.x,s.y,r.x,r.y,a.x,a.y,p.x,p.y)&&Ye(p.prev,p,p.next)>=0))return!1;p=p.nextZ}for(;u&&u.z>=h;){if(u!==t.prev&&u!==t.next&&fi(s.x,s.y,r.x,r.y,a.x,a.y,u.x,u.y)&&Ye(u.prev,u,u.next)>=0)return!1;u=u.prevZ}for(;p&&p.z<=f;){if(p!==t.prev&&p!==t.next&&fi(s.x,s.y,r.x,r.y,a.x,a.y,p.x,p.y)&&Ye(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function Sm(t,e,n){let i=t;do{const s=i.prev,r=i.next.next;!Mr(s,r)&&nc(s,i,i.next,r)&&ls(s,r)&&ls(r,s)&&(e.push(s.i/n),e.push(i.i/n),e.push(r.i/n),cs(i),cs(i.next),i=t=r),i=i.next}while(i!==t);return En(i)}function Em(t,e,n,i,s,r){let a=t;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&Om(a,o)){let l=ic(a,o);a=En(a,a.next),l=En(l,l.next),os(a,e,n,i,s,r),os(l,e,n,i,s,r);return}o=o.next}a=a.next}while(a!==t)}function Tm(t,e,n,i){const s=[];let r,a,o,l,c;for(r=0,a=e.length;r<a;r++)o=e[r]*i,l=r<a-1?e[r+1]*i:t.length,c=tc(t,o,l,i,!1),c===c.next&&(c.steiner=!0),s.push(Im(c));for(s.sort(Am),r=0;r<s.length;r++)Pm(s[r],n),n=En(n,n.next);return n}function Am(t,e){return t.x-e.x}function Pm(t,e){if(e=Lm(t,e),e){const n=ic(e,t);En(e,e.next),En(n,n.next)}}function Lm(t,e){let n=e;const i=t.x,s=t.y;let r=-1/0,a;do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y){const f=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(f<=i&&f>r){if(r=f,f===i){if(s===n.y)return n;if(s===n.next.y)return n.next}a=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!a)return null;if(i===r)return a;const o=a,l=a.x,c=a.y;let d=1/0,h;n=a;do i>=n.x&&n.x>=l&&i!==n.x&&fi(s<c?i:r,s,l,c,s<c?r:i,s,n.x,n.y)&&(h=Math.abs(s-n.y)/(i-n.x),ls(n,t)&&(h<d||h===d&&(n.x>a.x||n.x===a.x&&Cm(a,n)))&&(a=n,d=h)),n=n.next;while(n!==o);return a}function Cm(t,e){return Ye(t.prev,t,e.prev)<0&&Ye(e.next,t,t.next)<0}function Rm(t,e,n,i){let s=t;do s.z===null&&(s.z=_a(s.x,s.y,e,n,i)),s.prevZ=s.prev,s.nextZ=s.next,s=s.next;while(s!==t);s.prevZ.nextZ=null,s.prevZ=null,km(s)}function km(t){let e,n,i,s,r,a,o,l,c=1;do{for(n=t,t=null,r=null,a=0;n;){for(a++,i=n,o=0,e=0;e<c&&(o++,i=i.nextZ,!!i);e++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(s=n,n=n.nextZ,o--):(s=i,i=i.nextZ,l--),r?r.nextZ=s:t=s,s.prevZ=r,r=s;n=i}r.nextZ=null,c*=2}while(a>1);return t}function _a(t,e,n,i,s){return t=32767*(t-n)*s,e=32767*(e-i)*s,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t|e<<1}function Im(t){let e=t,n=t;do(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next;while(e!==t);return n}function fi(t,e,n,i,s,r,a,o){return(s-a)*(e-o)-(t-a)*(r-o)>=0&&(t-a)*(i-o)-(n-a)*(e-o)>=0&&(n-a)*(r-o)-(s-a)*(i-o)>=0}function Om(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!Dm(t,e)&&(ls(t,e)&&ls(e,t)&&Fm(t,e)&&(Ye(t.prev,t,e.prev)||Ye(t,e.prev,e))||Mr(t,e)&&Ye(t.prev,t,t.next)>0&&Ye(e.prev,e,e.next)>0)}function Ye(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function Mr(t,e){return t.x===e.x&&t.y===e.y}function nc(t,e,n,i){const s=Xs(Ye(t,e,n)),r=Xs(Ye(t,e,i)),a=Xs(Ye(n,i,t)),o=Xs(Ye(n,i,e));return!!(s!==r&&a!==o||s===0&&qs(t,n,e)||r===0&&qs(t,i,e)||a===0&&qs(n,t,i)||o===0&&qs(n,e,i))}function qs(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Xs(t){return t>0?1:t<0?-1:0}function Dm(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&nc(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}function ls(t,e){return Ye(t.prev,t,t.next)<0?Ye(t,e,t.next)>=0&&Ye(t,t.prev,e)>=0:Ye(t,e,t.prev)<0||Ye(t,t.next,e)<0}function Fm(t,e){let n=t,i=!1;const s=(t.x+e.x)/2,r=(t.y+e.y)/2;do n.y>r!=n.next.y>r&&n.next.y!==n.y&&s<(n.next.x-n.x)*(r-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==t);return i}function ic(t,e){const n=new ya(t.i,t.x,t.y),i=new ya(e.i,e.x,e.y),s=t.next,r=e.prev;return t.next=e,e.prev=t,n.next=s,s.prev=n,i.next=n,n.prev=i,r.next=i,i.prev=r,i}function ol(t,e,n,i){const s=new ya(t,e,n);return i?(s.next=i.next,s.prev=i,i.next.prev=s,i.next=s):(s.prev=s,s.next=s),s}function cs(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ya(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function Nm(t,e,n,i){let s=0;for(let r=e,a=n-i;r<n;r+=i)s+=(t[a]-t[r])*(t[r+1]+t[a+1]),a=r;return s}const xn={area:function(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5},isClockWise:function(t){return xn.area(t)<0},triangulateShape:function(t,e){const n=[],i=[],s=[];ll(t),cl(n,t);let r=t.length;e.forEach(ll);for(let o=0;o<e.length;o++)i.push(r),r+=e[o].length,cl(n,e[o]);const a=xm.triangulate(n,i);for(let o=0;o<a.length;o+=3)s.push(a.slice(o,o+3));return s}};function ll(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function cl(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class sc extends Be{constructor(e,n){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:n},e=Array.isArray(e)?e:[e];const i=this,s=[],r=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new Ne(s,3)),this.setAttribute("uv",new Ne(r,2)),this.computeVertexNormals();function a(o){const l=[],c=n.curveSegments!==void 0?n.curveSegments:12,d=n.steps!==void 0?n.steps:1;let h=n.depth!==void 0?n.depth:100,f=n.bevelEnabled!==void 0?n.bevelEnabled:!0,u=n.bevelThickness!==void 0?n.bevelThickness:6,p=n.bevelSize!==void 0?n.bevelSize:u-2,_=n.bevelOffset!==void 0?n.bevelOffset:0,y=n.bevelSegments!==void 0?n.bevelSegments:3;const g=n.extrudePath,m=n.UVGenerator!==void 0?n.UVGenerator:zm;n.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=n.amount);let E,A=!1,T,v,P,U;g&&(E=g.getSpacedPoints(d),A=!0,f=!1,T=g.computeFrenetFrames(d,!1),v=new b,P=new b,U=new b),f||(y=0,u=0,p=0,_=0);const K=o.extractPoints(c);let le=K.shape;const C=K.holes;if(!xn.isClockWise(le)){le=le.reverse();for(let X=0,Q=C.length;X<Q;X++){const ee=C[X];xn.isClockWise(ee)&&(C[X]=ee.reverse())}}const D=xn.triangulateShape(le,C),z=le;for(let X=0,Q=C.length;X<Q;X++){const ee=C[X];le=le.concat(ee)}function k(X,Q,ee){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),Q.clone().multiplyScalar(ee).add(X)}const I=le.length,G=D.length;function j(X,Q,ee){let fe,re,M;const x=X.x-Q.x,Y=X.y-Q.y,q=ee.x-X.x,L=ee.y-X.y,Z=x*x+Y*Y,ie=x*L-Y*q;if(Math.abs(ie)>Number.EPSILON){const ue=Math.sqrt(Z),$=Math.sqrt(q*q+L*L),S=Q.x-Y/ue,J=Q.y+x/ue,he=ee.x-L/$,te=ee.y+q/$,pe=((he-S)*L-(te-J)*q)/(x*L-Y*q);fe=S+x*pe-X.x,re=J+Y*pe-X.y;const Fe=fe*fe+re*re;if(Fe<=2)return new H(fe,re);M=Math.sqrt(Fe/2)}else{let ue=!1;x>Number.EPSILON?q>Number.EPSILON&&(ue=!0):x<-Number.EPSILON?q<-Number.EPSILON&&(ue=!0):Math.sign(Y)===Math.sign(L)&&(ue=!0),ue?(fe=-Y,re=x,M=Math.sqrt(Z)):(fe=x,re=Y,M=Math.sqrt(Z/2))}return new H(fe/M,re/M)}const se=[];for(let X=0,Q=z.length,ee=Q-1,fe=X+1;X<Q;X++,ee++,fe++)ee===Q&&(ee=0),fe===Q&&(fe=0),se[X]=j(z[X],z[ee],z[fe]);const ce=[];let oe,be=se.concat();for(let X=0,Q=C.length;X<Q;X++){const ee=C[X];oe=[];for(let fe=0,re=ee.length,M=re-1,x=fe+1;fe<re;fe++,M++,x++)M===re&&(M=0),x===re&&(x=0),oe[fe]=j(ee[fe],ee[M],ee[x]);ce.push(oe),be=be.concat(oe)}for(let X=0;X<y;X++){const Q=X/y,ee=u*Math.cos(Q*Math.PI/2),fe=p*Math.sin(Q*Math.PI/2)+_;for(let re=0,M=z.length;re<M;re++){const x=k(z[re],se[re],fe);ge(x.x,x.y,-ee)}for(let re=0,M=C.length;re<M;re++){const x=C[re];oe=ce[re];for(let Y=0,q=x.length;Y<q;Y++){const L=k(x[Y],oe[Y],fe);ge(L.x,L.y,-ee)}}}const we=p+_;for(let X=0;X<I;X++){const Q=f?k(le[X],be[X],we):le[X];A?(P.copy(T.normals[0]).multiplyScalar(Q.x),v.copy(T.binormals[0]).multiplyScalar(Q.y),U.copy(E[0]).add(P).add(v),ge(U.x,U.y,U.z)):ge(Q.x,Q.y,0)}for(let X=1;X<=d;X++)for(let Q=0;Q<I;Q++){const ee=f?k(le[Q],be[Q],we):le[Q];A?(P.copy(T.normals[X]).multiplyScalar(ee.x),v.copy(T.binormals[X]).multiplyScalar(ee.y),U.copy(E[X]).add(P).add(v),ge(U.x,U.y,U.z)):ge(ee.x,ee.y,h/d*X)}for(let X=y-1;X>=0;X--){const Q=X/y,ee=u*Math.cos(Q*Math.PI/2),fe=p*Math.sin(Q*Math.PI/2)+_;for(let re=0,M=z.length;re<M;re++){const x=k(z[re],se[re],fe);ge(x.x,x.y,h+ee)}for(let re=0,M=C.length;re<M;re++){const x=C[re];oe=ce[re];for(let Y=0,q=x.length;Y<q;Y++){const L=k(x[Y],oe[Y],fe);A?ge(L.x,L.y+E[d-1].y,E[d-1].x+ee):ge(L.x,L.y,h+ee)}}}He(),W();function He(){const X=s.length/3;if(f){let Q=0,ee=I*Q;for(let fe=0;fe<G;fe++){const re=D[fe];Re(re[2]+ee,re[1]+ee,re[0]+ee)}Q=d+y*2,ee=I*Q;for(let fe=0;fe<G;fe++){const re=D[fe];Re(re[0]+ee,re[1]+ee,re[2]+ee)}}else{for(let Q=0;Q<G;Q++){const ee=D[Q];Re(ee[2],ee[1],ee[0])}for(let Q=0;Q<G;Q++){const ee=D[Q];Re(ee[0]+I*d,ee[1]+I*d,ee[2]+I*d)}}i.addGroup(X,s.length/3-X,0)}function W(){const X=s.length/3;let Q=0;Ke(z,Q),Q+=z.length;for(let ee=0,fe=C.length;ee<fe;ee++){const re=C[ee];Ke(re,Q),Q+=re.length}i.addGroup(X,s.length/3-X,1)}function Ke(X,Q){let ee=X.length;for(;--ee>=0;){const fe=ee;let re=ee-1;re<0&&(re=X.length-1);for(let M=0,x=d+y*2;M<x;M++){const Y=I*M,q=I*(M+1),L=Q+fe+Y,Z=Q+re+Y,ie=Q+re+q,ue=Q+fe+q;ve(L,Z,ie,ue)}}}function ge(X,Q,ee){l.push(X),l.push(Q),l.push(ee)}function Re(X,Q,ee){De(X),De(Q),De(ee);const fe=s.length/3,re=m.generateTopUV(i,s,fe-3,fe-2,fe-1);Se(re[0]),Se(re[1]),Se(re[2])}function ve(X,Q,ee,fe){De(X),De(Q),De(fe),De(Q),De(ee),De(fe);const re=s.length/3,M=m.generateSideWallUV(i,s,re-6,re-3,re-2,re-1);Se(M[0]),Se(M[1]),Se(M[3]),Se(M[1]),Se(M[2]),Se(M[3])}function De(X){s.push(l[X*3+0]),s.push(l[X*3+1]),s.push(l[X*3+2])}function Se(X){r.push(X.x),r.push(X.y)}}}toJSON(){const e=Be.prototype.toJSON.call(this),n=this.parameters.shapes,i=this.parameters.options;return Bm(n,i,e)}}const zm={generateTopUV:function(t,e,n,i,s){const r=e[n*3],a=e[n*3+1],o=e[i*3],l=e[i*3+1],c=e[s*3],d=e[s*3+1];return[new H(r,a),new H(o,l),new H(c,d)]},generateSideWallUV:function(t,e,n,i,s,r){const a=e[n*3],o=e[n*3+1],l=e[n*3+2],c=e[i*3],d=e[i*3+1],h=e[i*3+2],f=e[s*3],u=e[s*3+1],p=e[s*3+2],_=e[r*3],y=e[r*3+1],g=e[r*3+2];return Math.abs(o-d)<.01?[new H(a,1-l),new H(c,1-h),new H(f,1-p),new H(_,1-g)]:[new H(o,1-l),new H(d,1-h),new H(u,1-p),new H(y,1-g)]}};function Bm(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,s=t.length;i<s;i++){const r=t[i];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}class Um extends mt{constructor(e,n){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:n},this.fromBufferGeometry(new sc(e,n)),this.mergeVertices()}toJSON(){const e=super.toJSON(),n=this.parameters.shapes,i=this.parameters.options;return Hm(n,i,e)}}function Hm(t,e,n){if(n.shapes=[],Array.isArray(t))for(let i=0,s=t.length;i<s;i++){const r=t[i];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return e.extrudePath!==void 0&&(n.options.extrudePath=e.extrudePath.toJSON()),n}function cr(t,e,n){Be.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const i=[],s=[],r=[],a=[],o=1e-5,l=new b,c=new b,d=new b,h=new b,f=new b;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const u=e+1;for(let p=0;p<=n;p++){const _=p/n;for(let y=0;y<=e;y++){const g=y/e;t(g,_,c),s.push(c.x,c.y,c.z),g-o>=0?(t(g-o,_,d),h.subVectors(c,d)):(t(g+o,_,d),h.subVectors(d,c)),_-o>=0?(t(g,_-o,d),f.subVectors(c,d)):(t(g,_+o,d),f.subVectors(d,c)),l.crossVectors(h,f).normalize(),r.push(l.x,l.y,l.z),a.push(g,_)}}for(let p=0;p<n;p++)for(let _=0;_<e;_++){const y=p*u+_,g=p*u+_+1,m=(p+1)*u+_+1,E=(p+1)*u+_;i.push(y,g,E),i.push(g,m,E)}this.setIndex(i),this.setAttribute("position",new Ne(s,3)),this.setAttribute("normal",new Ne(r,3)),this.setAttribute("uv",new Ne(a,2))}cr.prototype=Object.create(Be.prototype);cr.prototype.constructor=cr;function ba(t,e,n){mt.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new cr(t,e,n)),this.mergeVertices()}ba.prototype=Object.create(mt.prototype);ba.prototype.constructor=ba;class Gm extends Be{constructor(e,n=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:n};const i=[],s=[],r=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let d=0;d<e.length;d++)c(e[d]),this.addGroup(o,l,d),o+=l,l=0;this.setIndex(i),this.setAttribute("position",new Ne(s,3)),this.setAttribute("normal",new Ne(r,3)),this.setAttribute("uv",new Ne(a,2));function c(d){const h=s.length/3,f=d.extractPoints(n);let u=f.shape;const p=f.holes;xn.isClockWise(u)===!1&&(u=u.reverse());for(let y=0,g=p.length;y<g;y++){const m=p[y];xn.isClockWise(m)===!0&&(p[y]=m.reverse())}const _=xn.triangulateShape(u,p);for(let y=0,g=p.length;y<g;y++){const m=p[y];u=u.concat(m)}for(let y=0,g=u.length;y<g;y++){const m=u[y];s.push(m.x,m.y,0),r.push(0,0,1),a.push(m.x,m.y)}for(let y=0,g=_.length;y<g;y++){const m=_[y],E=m[0]+h,A=m[1]+h,T=m[2]+h;i.push(E,A,T),l+=3}}}toJSON(){const e=Be.prototype.toJSON.call(this),n=this.parameters.shapes;return Vm(n,e)}}function Vm(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const s=t[n];e.shapes.push(s.uuid)}else e.shapes.push(t.uuid);return e}class Wm extends mt{constructor(e,n){super(),this.type="ShapeGeometry",typeof n=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),n=n.curveSegments),this.parameters={shapes:e,curveSegments:n},this.fromBufferGeometry(new Gm(e,n)),this.mergeVertices()}toJSON(){const e=mt.prototype.toJSON.call(this),n=this.parameters.shapes;return jm(n,e)}}function jm(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,i=t.length;n<i;n++){const s=t[n];e.shapes.push(s.uuid)}else e.shapes.push(t.uuid);return e}function vi(t){ye.call(this),this.type="ShadowMaterial",this.color=new de(0),this.transparent=!0,this.setValues(t)}vi.prototype=Object.create(ye.prototype);vi.prototype.constructor=vi;vi.prototype.isShadowMaterial=!0;vi.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this};function hs(t){dt.call(this,t),this.type="RawShaderMaterial"}hs.prototype=Object.create(dt.prototype);hs.prototype.constructor=hs;hs.prototype.isRawShaderMaterial=!0;function nn(t){ye.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new de(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ai,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}nn.prototype=Object.create(ye.prototype);nn.prototype.constructor=nn;nn.prototype.isMeshStandardMaterial=!0;nn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this};function Hn(t){nn.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new H(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Me.clamp(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}Hn.prototype=Object.create(nn.prototype);Hn.prototype.constructor=Hn;Hn.prototype.isMeshPhysicalMaterial=!0;Hn.prototype.copy=function(t){return nn.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new de).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this};function Gn(t){ye.call(this),this.type="MeshPhongMaterial",this.color=new de(16777215),this.specular=new de(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ai,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Gn.prototype=Object.create(ye.prototype);Gn.prototype.constructor=Gn;Gn.prototype.isMeshPhongMaterial=!0;Gn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function xi(t){ye.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new de(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ai,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}xi.prototype=Object.create(ye.prototype);xi.prototype.constructor=xi;xi.prototype.isMeshToonMaterial=!0;xi.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function wi(t){ye.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ai,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}wi.prototype=Object.create(ye.prototype);wi.prototype.constructor=wi;wi.prototype.isMeshNormalMaterial=!0;wi.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Tn(t){ye.call(this),this.type="MeshLambertMaterial",this.color=new de(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new de(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=br,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Tn.prototype=Object.create(ye.prototype);Tn.prototype.constructor=Tn;Tn.prototype.isMeshLambertMaterial=!0;Tn.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Mi(t){ye.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new de(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ai,this.normalScale=new H(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}Mi.prototype=Object.create(ye.prototype);Mi.prototype.constructor=Mi;Mi.prototype.isMeshMatcapMaterial=!0;Mi.prototype.copy=function(t){return ye.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this};function Si(t){Tt.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Si.prototype=Object.create(Tt.prototype);Si.prototype.constructor=Si;Si.prototype.isLineDashedMaterial=!0;Si.prototype.copy=function(t){return Tt.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var qm=Object.freeze({__proto__:null,ShadowMaterial:vi,SpriteMaterial:Bn,RawShaderMaterial:hs,ShaderMaterial:dt,PointsMaterial:Un,MeshPhysicalMaterial:Hn,MeshStandardMaterial:nn,MeshPhongMaterial:Gn,MeshToonMaterial:xi,MeshNormalMaterial:wi,MeshLambertMaterial:Tn,MeshDepthMaterial:Fn,MeshDistanceMaterial:Nn,MeshBasicMaterial:wn,MeshMatcapMaterial:Mi,LineDashedMaterial:Si,LineBasicMaterial:Tt,Material:ye});const Xe={arraySlice:function(t,e,n){return Xe.isTypedArray(t)?new t.constructor(t.subarray(e,n!==void 0?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:typeof e.BYTES_PER_ELEMENT=="number"?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){function e(s,r){return t[s]-t[r]}const n=t.length,i=new Array(n);for(let s=0;s!==n;++s)i[s]=s;return i.sort(e),i},sortedArray:function(t,e,n){const i=t.length,s=new t.constructor(i);for(let r=0,a=0;a!==i;++r){const o=n[r]*e;for(let l=0;l!==e;++l)s[a++]=t[o+l]}return s},flattenJSON:function(t,e,n,i){let s=1,r=t[0];for(;r!==void 0&&r[i]===void 0;)r=t[s++];if(r===void 0)return;let a=r[i];if(a!==void 0)if(Array.isArray(a))do a=r[i],a!==void 0&&(e.push(r.time),n.push.apply(n,a)),r=t[s++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[i],a!==void 0&&(e.push(r.time),a.toArray(n,n.length)),r=t[s++];while(r!==void 0);else do a=r[i],a!==void 0&&(e.push(r.time),n.push(a)),r=t[s++];while(r!==void 0)},subclip:function(t,e,n,i,s=30){const r=t.clone();r.name=e;const a=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],d=c.getValueSize(),h=[],f=[];for(let u=0;u<c.times.length;++u){const p=c.times[u]*s;if(!(p<n||p>=i)){h.push(c.times[u]);for(let _=0;_<d;++_)f.push(c.values[u*d+_])}}h.length!==0&&(c.times=Xe.convertArray(h,c.times.constructor),c.values=Xe.convertArray(f,c.values.constructor),a.push(c))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r},makeClipAdditive:function(t,e=0,n=t,i=30){i<=0&&(i=30);const s=n.tracks.length,r=e/i;for(let a=0;a<s;++a){const o=n.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=t.tracks.find(function(g){return g.name===o.name&&g.ValueTypeName===l});if(c===void 0)continue;let d=0;const h=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=h/3);let f=0;const u=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(f=u/3);const p=o.times.length-1;let _;if(r<=o.times[0]){const g=d,m=h-d;_=Xe.arraySlice(o.values,g,m)}else if(r>=o.times[p]){const g=p*h+d,m=g+h-d;_=Xe.arraySlice(o.values,g,m)}else{const g=o.createInterpolant(),m=d,E=h-d;g.evaluate(r),_=Xe.arraySlice(g.resultBuffer,m,E)}l==="quaternion"&&new ht().fromArray(_).normalize().conjugate().toArray(_);const y=c.times.length;for(let g=0;g<y;++g){const m=g*u+f;if(l==="quaternion")ht.multiplyQuaternionsFlat(c.values,m,_,0,c.values,m);else{const E=u-f*2;for(let A=0;A<E;++A)c.values[m+A]-=_[A]}}}return t.blendMode=Nl,t}};function St(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n}Object.assign(St.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];e:{t:{let r;n:{i:if(!(t<i)){for(let a=n+2;;){if(i===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,s)}if(n===a)break;if(s=i,i=e[++n],t<i)break t}r=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let o=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===o)break;if(i=s,s=e[--n-1],t>=s)break t}r=n,n=0;break n}break e}for(;n<r;){const a=n+r>>>1;t<e[a]?r=a:n=a+1}if(i=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(i===void 0)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,s,t)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let r=0;r!==i;++r)e[r]=n[s+r];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}});Object.assign(St.prototype,{beforeStart_:St.prototype.copySampleValue_,afterEnd_:St.prototype.copySampleValue_});function va(t,e,n,i){St.call(this,t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}va.prototype=Object.assign(Object.create(St.prototype),{constructor:va,DefaultSettings_:{endingStart:oi,endingEnd:oi},intervalChanged_:function(t,e,n){const i=this.parameterPositions;let s=t-2,r=t+1,a=i[s],o=i[r];if(a===void 0)switch(this.getSettings_().endingStart){case li:s=t,a=2*e-n;break;case ir:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(o===void 0)switch(this.getSettings_().endingEnd){case li:r=t,o=2*n-e;break;case ir:r=1,o=n+i[1]-i[0];break;default:r=t-1,o=e}const l=(n-e)*.5,c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(o-n),this._offsetPrev=s*c,this._offsetNext=r*c},interpolate_:function(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=this._offsetPrev,d=this._offsetNext,h=this._weightPrev,f=this._weightNext,u=(n-e)/(i-e),p=u*u,_=p*u,y=-h*_+2*h*p-h*u,g=(1+h)*_+(-1.5-2*h)*p+(-.5+h)*u+1,m=(-1-f)*_+(1.5+f)*p+.5*u,E=f*_-f*p;for(let A=0;A!==a;++A)s[A]=y*r[c+A]+g*r[l+A]+m*r[o+A]+E*r[d+A];return s}});function hr(t,e,n,i){St.call(this,t,e,n,i)}hr.prototype=Object.assign(Object.create(St.prototype),{constructor:hr,interpolate_:function(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=t*a,l=o-a,c=(n-e)/(i-e),d=1-c;for(let h=0;h!==a;++h)s[h]=r[l+h]*d+r[o+h]*c;return s}});function xa(t,e,n,i){St.call(this,t,e,n,i)}xa.prototype=Object.assign(Object.create(St.prototype),{constructor:xa,interpolate_:function(t){return this.copySampleValue_(t-1)}});function ct(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Xe.convertArray(e,this.TimeBufferType),this.values=Xe.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}Object.assign(ct,{toJSON:function(t){const e=t.constructor;let n;if(e.toJSON!==void 0)n=e.toJSON(t);else{n={name:t.name,times:Xe.convertArray(t.times,Array),values:Xe.convertArray(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}});Object.assign(ct.prototype,{constructor:ct,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Qs,InterpolantFactoryMethodDiscrete:function(t){return new xa(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new hr(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new va(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case nr:e=this.InterpolantFactoryMethodDiscrete;break;case Qs:e=this.InterpolantFactoryMethodLinear;break;case Tr:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return nr;case this.InterpolantFactoryMethodLinear:return Qs;case this.InterpolantFactoryMethodSmooth:return Tr}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this},scale:function(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,i=n.length;let s=0,r=i-1;for(;s!==i&&n[s]<t;)++s;for(;r!==-1&&n[r]>e;)--r;if(++r,s!==0||r!==i){s>=r&&(r=Math.max(r,1),s=r-1);const a=this.getValueSize();this.times=Xe.arraySlice(n,s,r),this.values=Xe.arraySlice(this.values,s*a,r*a)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let r=null;for(let a=0;a!==s;a++){const o=n[a];if(typeof o=="number"&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,o),t=!1;break}if(r!==null&&r>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,o,r),t=!1;break}r=o}if(i!==void 0&&Xe.isTypedArray(i))for(let a=0,o=i.length;a!==o;++a){const l=i[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),t=!1;break}}return t},optimize:function(){const t=Xe.arraySlice(this.times),e=Xe.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Tr,s=t.length-1;let r=1;for(let a=1;a<s;++a){let o=!1;const l=t[a],c=t[a+1];if(l!==c&&(a!==1||l!==l[0]))if(i)o=!0;else{const d=a*n,h=d-n,f=d+n;for(let u=0;u!==n;++u){const p=e[d+u];if(p!==e[h+u]||p!==e[f+u]){o=!0;break}}}if(o){if(a!==r){t[r]=t[a];const d=a*n,h=r*n;for(let f=0;f!==n;++f)e[h+f]=e[d+f]}++r}}if(s>0){t[r]=t[s];for(let a=s*n,o=r*n,l=0;l!==n;++l)e[o+l]=e[a+l];++r}return r!==t.length?(this.times=Xe.arraySlice(t,0,r),this.values=Xe.arraySlice(e,0,r*n)):(this.times=t,this.values=e),this},clone:function(){const t=Xe.arraySlice(this.times,0),e=Xe.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}});function wa(t,e,n){ct.call(this,t,e,n)}wa.prototype=Object.assign(Object.create(ct.prototype),{constructor:wa,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:nr,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Ma(t,e,n,i){ct.call(this,t,e,n,i)}Ma.prototype=Object.assign(Object.create(ct.prototype),{constructor:Ma,ValueTypeName:"color"});function us(t,e,n,i){ct.call(this,t,e,n,i)}us.prototype=Object.assign(Object.create(ct.prototype),{constructor:us,ValueTypeName:"number"});function Sa(t,e,n,i){St.call(this,t,e,n,i)}Sa.prototype=Object.assign(Object.create(St.prototype),{constructor:Sa,interpolate_:function(t,e,n,i){const s=this.resultBuffer,r=this.sampleValues,a=this.valueSize,o=(n-e)/(i-e);let l=t*a;for(let c=l+a;l!==c;l+=4)ht.slerpFlat(s,0,r,l-a,r,l,o);return s}});function ur(t,e,n,i){ct.call(this,t,e,n,i)}ur.prototype=Object.assign(Object.create(ct.prototype),{constructor:ur,ValueTypeName:"quaternion",DefaultInterpolation:Qs,InterpolantFactoryMethodLinear:function(t){return new Sa(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0});function Ea(t,e,n,i){ct.call(this,t,e,n,i)}Ea.prototype=Object.assign(Object.create(ct.prototype),{constructor:Ea,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:nr,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ds(t,e,n,i){ct.call(this,t,e,n,i)}ds.prototype=Object.assign(Object.create(ct.prototype),{constructor:ds,ValueTypeName:"vector"});function Dt(t,e,n,i){this.name=t,this.tracks=n,this.duration=e!==void 0?e:-1,this.blendMode=i!==void 0?i:Ua,this.uuid=Me.generateUUID(),this.duration<0&&this.resetDuration()}function Xm(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return us;case"vector":case"vector2":case"vector3":case"vector4":return ds;case"color":return Ma;case"quaternion":return ur;case"bool":case"boolean":return wa;case"string":return Ea}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}function Ym(t){if(t.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Xm(t.type);if(t.times===void 0){const n=[],i=[];Xe.flattenJSON(t.keys,n,i,"value"),t.times=n,t.values=i}return e.parse!==void 0?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Dt,{parse:function(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let r=0,a=n.length;r!==a;++r)e.push(Ym(n[r]).scale(i));const s=new Dt(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s},toJSON:function(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,r=n.length;s!==r;++s)e.push(ct.toJSON(n[s]));return i},CreateFromMorphTargetSequence:function(t,e,n,i){const s=e.length,r=[];for(let a=0;a<s;a++){let o=[],l=[];o.push((a+s-1)%s,a,(a+1)%s),l.push(0,1,0);const c=Xe.getKeyframeOrder(o);o=Xe.sortedArray(o,1,c),l=Xe.sortedArray(l,1,c),!i&&o[0]===0&&(o.push(s),l.push(l[0])),r.push(new us(".morphTargetInfluences["+e[a].name+"]",o,l).scale(1/n))}return new Dt(t,-1,r)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,o=t.length;a<o;a++){const l=t[a],c=l.name.match(s);if(c&&c.length>1){const d=c[1];let h=i[d];h||(i[d]=h=[]),h.push(l)}}const r=[];for(const a in i)r.push(Dt.CreateFromMorphTargetSequence(a,i[a],e,n));return r},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(d,h,f,u,p){if(f.length!==0){const _=[],y=[];Xe.flattenJSON(f,_,y,u),_.length!==0&&p.push(new d(h,_,y))}},i=[],s=t.name||"default",r=t.fps||30,a=t.blendMode;let o=t.length||-1;const l=t.hierarchy||[];for(let d=0;d<l.length;d++){const h=l[d].keys;if(!(!h||h.length===0))if(h[0].morphTargets){const f={};let u;for(u=0;u<h.length;u++)if(h[u].morphTargets)for(let p=0;p<h[u].morphTargets.length;p++)f[h[u].morphTargets[p]]=-1;for(const p in f){const _=[],y=[];for(let g=0;g!==h[u].morphTargets.length;++g){const m=h[u];_.push(m.time),y.push(m.morphTarget===p?1:0)}i.push(new us(".morphTargetInfluence["+p+"]",_,y))}o=f.length*(r||1)}else{const f=".bones["+e[d].name+"]";n(ds,f+".position",h,"pos",i),n(ur,f+".quaternion",h,"rot",i),n(ds,f+".scale",h,"scl",i)}}return i.length===0?null:new Dt(s,o,i,a)}});Object.assign(Dt.prototype,{resetDuration:function(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new Dt(this.name,this.duration,t,this.blendMode)},toJSON:function(){return Dt.toJSON(this)}});const Ei={enabled:!1,files:{},add:function(t,e){this.enabled!==!1&&(this.files[t]=e)},get:function(t){if(this.enabled!==!1)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};function Zm(t,e,n){const i=this;let s=!1,r=0,a=0,o;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(c){a++,s===!1&&i.onStart!==void 0&&i.onStart(c,r,a),s=!0},this.itemEnd=function(c){r++,i.onProgress!==void 0&&i.onProgress(c,r,a),r===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(c){i.onError!==void 0&&i.onError(c)},this.resolveURL=function(c){return o?o(c):c},this.setURLModifier=function(c){return o=c,this},this.addHandler=function(c,d){return l.push(c,d),this},this.removeHandler=function(c){const d=l.indexOf(c);return d!==-1&&l.splice(d,2),this},this.getHandler=function(c){for(let d=0,h=l.length;d<h;d+=2){const f=l[d],u=l[d+1];if(f.global&&(f.lastIndex=0),f.test(c))return u}return null}}const Jm=new Zm;function Ue(t){this.manager=t!==void 0?t:Jm,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(Ue.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const It={};function sn(t){Ue.call(this,t)}sn.prototype=Object.assign(Object.create(Ue.prototype),{constructor:sn,load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=Ei.get(t);if(r!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(r),s.manager.itemEnd(t)},0),r;if(It[t]!==void 0){It[t].push({onLoad:e,onProgress:n,onError:i});return}const a=/^data:(.*?)(;base64)?,(.*)$/,o=t.match(a);let l;if(o){const c=o[1],d=!!o[2];let h=o[3];h=decodeURIComponent(h),d&&(h=atob(h));try{let f;const u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":const p=new Uint8Array(h.length);for(let y=0;y<h.length;y++)p[y]=h.charCodeAt(y);u==="blob"?f=new Blob([p.buffer],{type:c}):f=p.buffer;break;case"document":f=new DOMParser().parseFromString(h,c);break;case"json":f=JSON.parse(h);break;default:f=h;break}setTimeout(function(){e&&e(f),s.manager.itemEnd(t)},0)}catch(f){setTimeout(function(){i&&i(f),s.manager.itemError(t),s.manager.itemEnd(t)},0)}}else{It[t]=[],It[t].push({onLoad:e,onProgress:n,onError:i}),l=new XMLHttpRequest,l.open("GET",t,!0),l.addEventListener("load",function(c){const d=this.response,h=It[t];if(delete It[t],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Ei.add(t,d);for(let f=0,u=h.length;f<u;f++){const p=h[f];p.onLoad&&p.onLoad(d)}s.manager.itemEnd(t)}else{for(let f=0,u=h.length;f<u;f++){const p=h[f];p.onError&&p.onError(c)}s.manager.itemError(t),s.manager.itemEnd(t)}},!1),l.addEventListener("progress",function(c){const d=It[t];for(let h=0,f=d.length;h<f;h++){const u=d[h];u.onProgress&&u.onProgress(c)}},!1),l.addEventListener("error",function(c){const d=It[t];delete It[t];for(let h=0,f=d.length;h<f;h++){const u=d[h];u.onError&&u.onError(c)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),l.addEventListener("abort",function(c){const d=It[t];delete It[t];for(let h=0,f=d.length;h<f;h++){const u=d[h];u.onError&&u.onError(c)}s.manager.itemError(t),s.manager.itemEnd(t)},!1),this.responseType!==void 0&&(l.responseType=this.responseType),this.withCredentials!==void 0&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(const c in this.requestHeader)l.setRequestHeader(c,this.requestHeader[c]);l.send(null)}return s.manager.itemStart(t),l},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}});function hl(t){Ue.call(this,t)}hl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:hl,load:function(t,e,n,i){const s=this,r=new sn(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),s.manager.itemError(t)}},n,i)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const i=Dt.parse(t[n]);e.push(i)}return e}});function ul(t){Ue.call(this,t)}ul.prototype=Object.assign(Object.create(Ue.prototype),{constructor:ul,load:function(t,e,n,i){const s=this,r=[],a=new as;a.image=r;const o=new sn(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(s.withCredentials);let l=0;function c(d){o.load(t[d],function(h){const f=s.parse(h,!0);r[d]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(a.minFilter=lt),a.format=f.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let d=0,h=t.length;d<h;++d)c(d);else o.load(t,function(d){const h=s.parse(d,!0);if(h.isCubemap){const f=h.mipmaps.length/h.mipmapCount;for(let u=0;u<f;u++){r[u]={mipmaps:[]};for(let p=0;p<h.mipmapCount;p++)r[u].mipmaps.push(h.mipmaps[u*h.mipmapCount+p]),r[u].format=h.format,r[u].width=h.width,r[u].height=h.height}}else a.image.width=h.width,a.image.height=h.height,a.mipmaps=h.mipmaps;h.mipmapCount===1&&(a.minFilter=lt),a.format=h.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}});function dr(t){Ue.call(this,t)}dr.prototype=Object.assign(Object.create(Ue.prototype),{constructor:dr,load:function(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=Ei.get(t);if(r!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(r),s.manager.itemEnd(t)},0),r;const a=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),Ei.add(t,this),e&&e(this),s.manager.itemEnd(t)}function l(c){a.removeEventListener("load",o,!1),a.removeEventListener("error",l,!1),i&&i(c),s.manager.itemError(t),s.manager.itemEnd(t)}return a.addEventListener("load",o,!1),a.addEventListener("error",l,!1),t.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}});function fr(t){Ue.call(this,t)}fr.prototype=Object.assign(Object.create(Ue.prototype),{constructor:fr,load:function(t,e,n,i){const s=new Sn,r=new dr(this.manager);r.setCrossOrigin(this.crossOrigin),r.setPath(this.path);let a=0;function o(l){r.load(t[l],function(c){s.images[l]=c,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let l=0;l<t.length;++l)o(l);return s}});function dl(t){Ue.call(this,t)}dl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:dl,load:function(t,e,n,i){const s=this,r=new yi,a=new sn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(o){const l=s.parse(o);!l||(l.image!==void 0?r.image=l.image:l.data!==void 0&&(r.image.width=l.width,r.image.height=l.height,r.image.data=l.data),r.wrapS=l.wrapS!==void 0?l.wrapS:yt,r.wrapT=l.wrapT!==void 0?l.wrapT:yt,r.magFilter=l.magFilter!==void 0?l.magFilter:lt,r.minFilter=l.minFilter!==void 0?l.minFilter:lt,r.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.format!==void 0&&(r.format=l.format),l.type!==void 0&&(r.type=l.type),l.mipmaps!==void 0&&(r.mipmaps=l.mipmaps,r.minFilter=vr),l.mipmapCount===1&&(r.minFilter=lt),r.needsUpdate=!0,e&&e(r,l))},n,i),r}});function pr(t){Ue.call(this,t)}pr.prototype=Object.assign(Object.create(Ue.prototype),{constructor:pr,load:function(t,e,n,i){const s=new je,r=new dr(this.manager);return r.setCrossOrigin(this.crossOrigin),r.setPath(this.path),r.load(t,function(a){s.image=a;const o=t.search(/\.jpe?g($|\?)/i)>0||t.search(/^data\:image\/jpeg/)===0;s.format=o?On:Ft,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}});function me(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(me.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t===void 0&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let r=1;r<=t;r++)n=this.getPoint(r/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let i=0;const s=n.length;let r;e?r=e:r=t*n[s-1];let a=0,o=s-1,l;for(;a<=o;)if(i=Math.floor(a+(o-a)/2),l=n[i]-r,l<0)a=i+1;else if(l>0)o=i-1;else{o=i;break}if(i=o,n[i]===r)return i/(s-1);const c=n[i],h=n[i+1]-c,f=(r-c)/h;return(i+f)/(s-1)},getTangent:function(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const r=this.getPoint(i),a=this.getPoint(s),o=e||(r.isVector2?new H:new b);return o.copy(a).sub(r).normalize(),o},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new b,i=[],s=[],r=[],a=new b,o=new Te;for(let f=0;f<=t;f++){const u=f/t;i[f]=this.getTangentAt(u,new b),i[f].normalize()}s[0]=new b,r[0]=new b;let l=Number.MAX_VALUE;const c=Math.abs(i[0].x),d=Math.abs(i[0].y),h=Math.abs(i[0].z);c<=l&&(l=c,n.set(1,0,0)),d<=l&&(l=d,n.set(0,1,0)),h<=l&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),r[0].crossVectors(i[0],s[0]);for(let f=1;f<=t;f++){if(s[f]=s[f-1].clone(),r[f]=r[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const u=Math.acos(Me.clamp(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(o.makeRotationAxis(a,u))}r[f].crossVectors(i[f],s[f])}if(e===!0){let f=Math.acos(Me.clamp(s[0].dot(s[t]),-1,1));f/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(f=-f);for(let u=1;u<=t;u++)s[u].applyMatrix4(o.makeRotationAxis(i[u],f*u)),r[u].crossVectors(i[u],s[u])}return{tangents:i,normals:s,binormals:r}},clone:function(){return new this.constructor().copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}});function At(t,e,n,i,s,r,a,o){me.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=i||1,this.aStartAngle=s||0,this.aEndAngle=r||2*Math.PI,this.aClockwise=a||!1,this.aRotation=o||0}At.prototype=Object.create(me.prototype);At.prototype.constructor=At;At.prototype.isEllipseCurve=!0;At.prototype.getPoint=function(t,e){const n=e||new H,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const r=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(r?s=0:s=i),this.aClockwise===!0&&!r&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let o=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),d=Math.sin(this.aRotation),h=o-this.aX,f=l-this.aY;o=h*c-f*d+this.aX,l=h*d+f*c+this.aY}return n.set(o,l)};At.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};At.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t};At.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this};function fs(t,e,n,i,s,r){At.call(this,t,e,n,n,i,s,r),this.type="ArcCurve"}fs.prototype=Object.create(At.prototype);fs.prototype.constructor=fs;fs.prototype.isArcCurve=!0;function Va(){let t=0,e=0,n=0,i=0;function s(r,a,o,l){t=r,e=o,n=-3*r+3*a-2*o-l,i=2*r-2*a+o+l}return{initCatmullRom:function(r,a,o,l,c){s(a,o,c*(o-r),c*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,c,d,h){let f=(a-r)/c-(o-r)/(c+d)+(o-a)/d,u=(o-a)/d-(l-a)/(d+h)+(l-o)/h;f*=d,u*=d,s(a,o,f,u)},calc:function(r){const a=r*r,o=a*r;return t+e*r+n*a+i*o}}}const Ys=new b,Qr=new Va,$r=new Va,ea=new Va;function vt(t=[],e=!1,n="centripetal",i=.5){me.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}vt.prototype=Object.create(me.prototype);vt.prototype.constructor=vt;vt.prototype.isCatmullRomCurve3=!0;vt.prototype.getPoint=function(t,e=new b){const n=e,i=this.points,s=i.length,r=(s-(this.closed?0:1))*t;let a=Math.floor(r),o=r-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:o===0&&a===s-1&&(a=s-2,o=1);let l,c;this.closed||a>0?l=i[(a-1)%s]:(Ys.subVectors(i[0],i[1]).add(i[0]),l=Ys);const d=i[a%s],h=i[(a+1)%s];if(this.closed||a+2<s?c=i[(a+2)%s]:(Ys.subVectors(i[s-1],i[s-2]).add(i[s-1]),c=Ys),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let u=Math.pow(l.distanceToSquared(d),f),p=Math.pow(d.distanceToSquared(h),f),_=Math.pow(h.distanceToSquared(c),f);p<1e-4&&(p=1),u<1e-4&&(u=p),_<1e-4&&(_=p),Qr.initNonuniformCatmullRom(l.x,d.x,h.x,c.x,u,p,_),$r.initNonuniformCatmullRom(l.y,d.y,h.y,c.y,u,p,_),ea.initNonuniformCatmullRom(l.z,d.z,h.z,c.z,u,p,_)}else this.curveType==="catmullrom"&&(Qr.initCatmullRom(l.x,d.x,h.x,c.x,this.tension),$r.initCatmullRom(l.y,d.y,h.y,c.y,this.tension),ea.initCatmullRom(l.z,d.z,h.z,c.z,this.tension));return n.set(Qr.calc(o),$r.calc(o),ea.calc(o)),n};vt.prototype.copy=function(t){me.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};vt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t};vt.prototype.fromJSON=function(t){me.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new b().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this};function fl(t,e,n,i,s){const r=(i-e)*.5,a=(s-n)*.5,o=t*t,l=t*o;return(2*n-2*i+r+a)*l+(-3*n+3*i-2*r-a)*o+r*t+n}function Km(t,e){const n=1-t;return n*n*e}function Qm(t,e){return 2*(1-t)*t*e}function $m(t,e){return t*t*e}function Qi(t,e,n,i){return Km(t,e)+Qm(t,n)+$m(t,i)}function eg(t,e){const n=1-t;return n*n*n*e}function tg(t,e){const n=1-t;return 3*n*n*t*e}function ng(t,e){return 3*(1-t)*t*t*e}function ig(t,e){return t*t*t*e}function $i(t,e,n,i,s){return eg(t,e)+tg(t,n)+ng(t,i)+ig(t,s)}function Wt(t=new H,e=new H,n=new H,i=new H){me.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}Wt.prototype=Object.create(me.prototype);Wt.prototype.constructor=Wt;Wt.prototype.isCubicBezierCurve=!0;Wt.prototype.getPoint=function(t,e=new H){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set($i(t,i.x,s.x,r.x,a.x),$i(t,i.y,s.y,r.y,a.y)),n};Wt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};Wt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};Wt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function rn(t=new b,e=new b,n=new b,i=new b){me.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}rn.prototype=Object.create(me.prototype);rn.prototype.constructor=rn;rn.prototype.isCubicBezierCurve3=!0;rn.prototype.getPoint=function(t,e=new b){const n=e,i=this.v0,s=this.v1,r=this.v2,a=this.v3;return n.set($i(t,i.x,s.x,r.x,a.x),$i(t,i.y,s.y,r.y,a.y),$i(t,i.z,s.z,r.z,a.z)),n};rn.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this};rn.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t};rn.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this};function xt(t=new H,e=new H){me.call(this),this.type="LineCurve",this.v1=t,this.v2=e}xt.prototype=Object.create(me.prototype);xt.prototype.constructor=xt;xt.prototype.isLineCurve=!0;xt.prototype.getPoint=function(t,e=new H){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};xt.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};xt.prototype.getTangent=function(t,e){const n=e||new H;return n.copy(this.v2).sub(this.v1).normalize(),n};xt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};xt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};xt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function jt(t=new b,e=new b){me.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}jt.prototype=Object.create(me.prototype);jt.prototype.constructor=jt;jt.prototype.isLineCurve3=!0;jt.prototype.getPoint=function(t,e=new b){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n};jt.prototype.getPointAt=function(t,e){return this.getPoint(t,e)};jt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this};jt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};jt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function qt(t=new H,e=new H,n=new H){me.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}qt.prototype=Object.create(me.prototype);qt.prototype.constructor=qt;qt.prototype.isQuadraticBezierCurve=!0;qt.prototype.getPoint=function(t,e=new H){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(Qi(t,i.x,s.x,r.x),Qi(t,i.y,s.y,r.y)),n};qt.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};qt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};qt.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function an(t=new b,e=new b,n=new b){me.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}an.prototype=Object.create(me.prototype);an.prototype.constructor=an;an.prototype.isQuadraticBezierCurve3=!0;an.prototype.getPoint=function(t,e=new b){const n=e,i=this.v0,s=this.v1,r=this.v2;return n.set(Qi(t,i.x,s.x,r.x),Qi(t,i.y,s.y,r.y),Qi(t,i.z,s.z,r.z)),n};an.prototype.copy=function(t){return me.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this};an.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t};an.prototype.fromJSON=function(t){return me.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this};function Xt(t=[]){me.call(this),this.type="SplineCurve",this.points=t}Xt.prototype=Object.create(me.prototype);Xt.prototype.constructor=Xt;Xt.prototype.isSplineCurve=!0;Xt.prototype.getPoint=function(t,e=new H){const n=e,i=this.points,s=(i.length-1)*t,r=Math.floor(s),a=s-r,o=i[r===0?r:r-1],l=i[r],c=i[r>i.length-2?i.length-1:r+1],d=i[r>i.length-3?i.length-1:r+2];return n.set(fl(a,o.x,l.x,c.x,d.x),fl(a,o.y,l.y,c.y,d.y)),n};Xt.prototype.copy=function(t){me.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this};Xt.prototype.toJSON=function(){const t=me.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t};Xt.prototype.fromJSON=function(t){me.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new H().fromArray(i))}return this};var sg=Object.freeze({__proto__:null,ArcCurve:fs,CatmullRomCurve3:vt,CubicBezierCurve:Wt,CubicBezierCurve3:rn,EllipseCurve:At,LineCurve:xt,LineCurve3:jt,QuadraticBezierCurve:qt,QuadraticBezierCurve3:an,SplineCurve:Xt});function bn(){me.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}bn.prototype=Object.assign(Object.create(me.prototype),{constructor:bn,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new xt(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=e){const s=n[i]-e,r=this.curves[i],a=r.getLength(),o=a===0?0:1-s/a;return r.getPointAt(o)}i++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const r=s[i],a=r&&r.isEllipseCurve?t*2:r&&(r.isLineCurve||r.isLineCurve3)?1:r&&r.isSplineCurve?t*r.points.length:t,o=r.getPoints(a);for(let l=0;l<o.length;l++){const c=o[l];n&&n.equals(c)||(e.push(c),n=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){me.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=me.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t},fromJSON:function(t){me.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new sg[i.type]().fromJSON(i))}return this}});function Ht(t){bn.call(this),this.type="Path",this.currentPoint=new H,t&&this.setFromPoints(t)}Ht.prototype=Object.assign(Object.create(bn.prototype),{constructor:Ht,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new xt(this.currentPoint.clone(),new H(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,i){const s=new qt(this.currentPoint.clone(),new H(t,e),new H(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this},bezierCurveTo:function(t,e,n,i,s,r){const a=new Wt(this.currentPoint.clone(),new H(t,e),new H(n,i),new H(s,r));return this.curves.push(a),this.currentPoint.set(s,r),this},splineThru:function(t){const e=[this.currentPoint.clone()].concat(t),n=new Xt(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,i,s,r){const a=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(t+a,e+o,n,i,s,r),this},absarc:function(t,e,n,i,s,r){return this.absellipse(t,e,n,n,i,s,r),this},ellipse:function(t,e,n,i,s,r,a,o){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,n,i,s,r,a,o),this},absellipse:function(t,e,n,i,s,r,a,o){const l=new At(t,e,n,i,s,r,a,o);if(this.curves.length>0){const d=l.getPoint(0);d.equals(this.currentPoint)||this.lineTo(d.x,d.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this},copy:function(t){return bn.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=bn.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return bn.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}});function mi(t){Ht.call(this,t),this.uuid=Me.generateUUID(),this.type="Shape",this.holes=[]}mi.prototype=Object.assign(Object.create(Ht.prototype),{constructor:mi,getPointsHoles:function(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Ht.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this},toJSON:function(){const t=Ht.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t},fromJSON:function(t){Ht.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Ht().fromJSON(i))}return this}});function qe(t,e=1){_e.call(this),this.type="Light",this.color=new de(t),this.intensity=e}qe.prototype=Object.assign(Object.create(_e.prototype),{constructor:qe,isLight:!0,copy:function(t){return _e.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=_e.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}});function pl(t,e,n){qe.call(this,t,n),this.type="HemisphereLight",this.position.copy(_e.DefaultUp),this.updateMatrix(),this.groundColor=new de(e)}pl.prototype=Object.assign(Object.create(qe.prototype),{constructor:pl,isHemisphereLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}});function on(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new H(512,512),this.map=null,this.mapPass=null,this.matrix=new Te,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new wr,this._frameExtents=new H(1,1),this._viewportCount=1,this._viewports=[new ze(0,0,1,1)]}Object.assign(on.prototype,{_projScreenMatrix:new Te,_lightPositionWorld:new b,_lookTarget:new b,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,i=this._projScreenMatrix,s=this._lookTarget,r=this._lightPositionWorld;r.setFromMatrixPosition(t.matrixWorld),e.position.copy(r),s.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(s),e.updateMatrixWorld(),i.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}});function Ta(){on.call(this,new it(50,1,.5,500)),this.focus=1}Ta.prototype=Object.assign(Object.create(on.prototype),{constructor:Ta,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=Me.RAD2DEG*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(n!==e.fov||i!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),on.prototype.updateMatrices.call(this,t)}});function ml(t,e,n,i,s,r){qe.call(this,t,e),this.type="SpotLight",this.position.copy(_e.DefaultUp),this.updateMatrix(),this.target=new _e,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(a){this.intensity=a/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=s!==void 0?s:0,this.decay=r!==void 0?r:1,this.shadow=new Ta}ml.prototype=Object.assign(Object.create(qe.prototype),{constructor:ml,isSpotLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Aa(){on.call(this,new it(90,1,.5,500)),this._frameExtents=new H(4,2),this._viewportCount=6,this._viewports=[new ze(2,1,1,1),new ze(0,1,1,1),new ze(3,1,1,1),new ze(1,1,1,1),new ze(3,0,1,1),new ze(1,0,1,1)],this._cubeDirections=[new b(1,0,0),new b(-1,0,0),new b(0,0,1),new b(0,0,-1),new b(0,1,0),new b(0,-1,0)],this._cubeUps=[new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,1,0),new b(0,0,1),new b(0,0,-1)]}Aa.prototype=Object.assign(Object.create(on.prototype),{constructor:Aa,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,i=this.matrix,s=this._lightPositionWorld,r=this._lookTarget,a=this._projScreenMatrix;s.setFromMatrixPosition(t.matrixWorld),n.position.copy(s),r.copy(n.position),r.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(r),n.updateMatrixWorld(),i.makeTranslation(-s.x,-s.y,-s.z),a.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(a)}});function gl(t,e,n,i){qe.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(s){this.intensity=s/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new Aa}gl.prototype=Object.assign(Object.create(qe.prototype),{constructor:gl,isPointLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}});function Pa(t,e,n,i,s,r){Mn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t!==void 0?t:-1,this.right=e!==void 0?e:1,this.top=n!==void 0?n:1,this.bottom=i!==void 0?i:-1,this.near=s!==void 0?s:.1,this.far=r!==void 0?r:2e3,this.updateProjectionMatrix()}Pa.prototype=Object.assign(Object.create(Mn.prototype),{constructor:Pa,isOrthographicCamera:!0,copy:function(t,e){return Mn.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,i,s,r){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=r,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,r=n+t,a=i+e,o=i-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,r=s+l*this.view.width,a-=c*this.view.offsetY,o=a-c*this.view.height}this.projectionMatrix.makeOrthographic(s,r,a,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=_e.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}});function La(){on.call(this,new Pa(-5,5,5,-5,.5,500))}La.prototype=Object.assign(Object.create(on.prototype),{constructor:La,isDirectionalLightShadow:!0,updateMatrices:function(t){on.prototype.updateMatrices.call(this,t)}});function Ca(t,e){qe.call(this,t,e),this.type="DirectionalLight",this.position.copy(_e.DefaultUp),this.updateMatrix(),this.target=new _e,this.shadow=new La}Ca.prototype=Object.assign(Object.create(qe.prototype),{constructor:Ca,isDirectionalLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}});function Ra(t,e){qe.call(this,t,e),this.type="AmbientLight"}Ra.prototype=Object.assign(Object.create(qe.prototype),{constructor:Ra,isAmbientLight:!0});function _l(t,e,n,i){qe.call(this,t,e),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}_l.prototype=Object.assign(Object.create(qe.prototype),{constructor:_l,isRectAreaLight:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=qe.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class rg{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new b)}set(e){for(let n=0;n<9;n++)this.coefficients[n].copy(e[n]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,n){const i=e.x,s=e.y,r=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.282095),n.addScaledVector(a[1],.488603*s),n.addScaledVector(a[2],.488603*r),n.addScaledVector(a[3],.488603*i),n.addScaledVector(a[4],1.092548*(i*s)),n.addScaledVector(a[5],1.092548*(s*r)),n.addScaledVector(a[6],.315392*(3*r*r-1)),n.addScaledVector(a[7],1.092548*(i*r)),n.addScaledVector(a[8],.546274*(i*i-s*s)),n}getIrradianceAt(e,n){const i=e.x,s=e.y,r=e.z,a=this.coefficients;return n.copy(a[0]).multiplyScalar(.886227),n.addScaledVector(a[1],2*.511664*s),n.addScaledVector(a[2],2*.511664*r),n.addScaledVector(a[3],2*.511664*i),n.addScaledVector(a[4],2*.429043*i*s),n.addScaledVector(a[5],2*.429043*s*r),n.addScaledVector(a[6],.743125*r*r-.247708),n.addScaledVector(a[7],2*.429043*i*r),n.addScaledVector(a[8],.429043*(i*i-s*s)),n}add(e){for(let n=0;n<9;n++)this.coefficients[n].add(e.coefficients[n]);return this}addScaledSH(e,n){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(e.coefficients[i],n);return this}scale(e){for(let n=0;n<9;n++)this.coefficients[n].multiplyScalar(e);return this}lerp(e,n){for(let i=0;i<9;i++)this.coefficients[i].lerp(e.coefficients[i],n);return this}equals(e){for(let n=0;n<9;n++)if(!this.coefficients[n].equals(e.coefficients[n]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].fromArray(e,n+s*3);return this}toArray(e=[],n=0){const i=this.coefficients;for(let s=0;s<9;s++)i[s].toArray(e,n+s*3);return e}static getBasisAt(e,n){const i=e.x,s=e.y,r=e.z;n[0]=.282095,n[1]=.488603*s,n[2]=.488603*r,n[3]=.488603*i,n[4]=1.092548*i*s,n[5]=1.092548*s*r,n[6]=.315392*(3*r*r-1),n[7]=1.092548*i*r,n[8]=.546274*(i*i-s*s)}}function Vt(t,e){qe.call(this,void 0,e),this.type="LightProbe",this.sh=t!==void 0?t:new rg}Vt.prototype=Object.assign(Object.create(qe.prototype),{constructor:Vt,isLightProbe:!0,copy:function(t){return qe.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=qe.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}});function yl(t){Ue.call(this,t),this.textures={}}yl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:yl,load:function(t,e,n,i){const s=this,r=new sn(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),s.manager.itemError(t)}},n,i)},parse:function(t){const e=this.textures;function n(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}const i=new qm[t.type];if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=new de().setHex(t.sheen)),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==1&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.skinning!==void 0&&(i.skinning=t.skinning),t.morphTargets!==void 0&&(i.morphTargets=t.morphTargets),t.morphNormals!==void 0&&(i.morphNormals=t.morphNormals),t.dithering!==void 0&&(i.dithering=t.dithering),t.vertexTangents!==void 0&&(i.vertexTangents=t.vertexTangents),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const s in t.uniforms){const r=t.uniforms[s];switch(i.uniforms[s]={},r.type){case"t":i.uniforms[s].value=n(r.value);break;case"c":i.uniforms[s].value=new de().setHex(r.value);break;case"v2":i.uniforms[s].value=new H().fromArray(r.value);break;case"v3":i.uniforms[s].value=new b().fromArray(r.value);break;case"v4":i.uniforms[s].value=new ze().fromArray(r.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(r.value);break;case"m4":i.uniforms[s].value=new Te().fromArray(r.value);break;default:i.uniforms[s].value=r.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.extensions!==void 0)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(t.shading!==void 0&&(i.flatShading=t.shading===1),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let s=t.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new H().fromArray(s)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new H().fromArray(t.clearcoatNormalScale)),t.transmission!==void 0&&(i.transmission=t.transmission),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),i},setTextures:function(t){return this.textures=t,this}});const ag={decodeText:function(t){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}},extractUrlBase:function(t){const e=t.lastIndexOf("/");return e===-1?"./":t.substr(0,e+1)}};function mr(){Be.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}mr.prototype=Object.assign(Object.create(Be.prototype),{constructor:mr,isInstancedBufferGeometry:!0,copy:function(t){return Be.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){const t=Be.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}});function ka(t,e,n,i){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),xe.call(this,t,e,n),this.meshPerAttribute=i||1}ka.prototype=Object.assign(Object.create(xe.prototype),{constructor:ka,isInstancedBufferAttribute:!0,copy:function(t){return xe.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=xe.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}});function bl(t){Ue.call(this,t)}bl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:bl,load:function(t,e,n,i){const s=this,r=new sn(s.manager);r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(o){i?i(o):console.error(o),s.manager.itemError(t)}},n,i)},parse:function(t){const e={},n={};function i(f,u){if(e[u]!==void 0)return e[u];const _=f.interleavedBuffers[u],y=s(f,_.buffer),g=As(_.type,y),m=new Mt(g,_.stride);return m.uuid=_.uuid,e[u]=m,m}function s(f,u){if(n[u]!==void 0)return n[u];const _=f.arrayBuffers[u],y=new Uint32Array(_).buffer;return n[u]=y,y}const r=t.isInstancedBufferGeometry?new mr:new Be,a=t.data.index;if(a!==void 0){const f=As(a.type,a.array);r.setIndex(new xe(f,1))}const o=t.data.attributes;for(const f in o){const u=o[f];let p;if(u.isInterleavedBufferAttribute){const _=i(t.data,u.data);p=new zn(_,u.itemSize,u.offset,u.normalized)}else{const _=As(u.type,u.array),y=u.isInstancedBufferAttribute?ka:xe;p=new y(_,u.itemSize,u.normalized)}u.name!==void 0&&(p.name=u.name),r.setAttribute(f,p)}const l=t.data.morphAttributes;if(l)for(const f in l){const u=l[f],p=[];for(let _=0,y=u.length;_<y;_++){const g=u[_];let m;if(g.isInterleavedBufferAttribute){const E=i(t.data,g.data);m=new zn(E,g.itemSize,g.offset,g.normalized)}else{const E=As(g.type,g.array);m=new xe(E,g.itemSize,g.normalized)}g.name!==void 0&&(m.name=g.name),p.push(m)}r.morphAttributes[f]=p}t.data.morphTargetsRelative&&(r.morphTargetsRelative=!0);const d=t.data.groups||t.data.drawcalls||t.data.offsets;if(d!==void 0)for(let f=0,u=d.length;f!==u;++f){const p=d[f];r.addGroup(p.start,p.count,p.materialIndex)}const h=t.data.boundingSphere;if(h!==void 0){const f=new b;h.center!==void 0&&f.fromArray(h.center),r.boundingSphere=new Pn(f,h.radius)}return t.name&&(r.name=t.name),t.userData&&(r.userData=t.userData),r}});function vl(t){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Ue.call(this,t),this.options={premultiplyAlpha:"none"}}vl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:vl,isImageBitmapLoader:!0,setOptions:function(e){return this.options=e,this},load:function(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,r=Ei.get(t);if(r!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(r),s.manager.itemEnd(t)},0),r;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",fetch(t,a).then(function(o){return o.blob()}).then(function(o){return createImageBitmap(o,s.options)}).then(function(o){Ei.add(t,o),e&&e(o),s.manager.itemEnd(t)}).catch(function(o){i&&i(o),s.manager.itemError(t),s.manager.itemEnd(t)}),s.manager.itemStart(t)}});function rc(){this.type="ShapePath",this.color=new de,this.subPaths=[],this.currentPath=null}Object.assign(rc.prototype,{moveTo:function(t,e){return this.currentPath=new Ht,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this},bezierCurveTo:function(t,e,n,i,s,r){return this.currentPath.bezierCurveTo(t,e,n,i,s,r),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(g){const m=[];for(let E=0,A=g.length;E<A;E++){const T=g[E],v=new mi;v.curves=T.curves,m.push(v)}return m}function i(g,m){const E=m.length;let A=!1;for(let T=E-1,v=0;v<E;T=v++){let P=m[T],U=m[v],K=U.x-P.x,le=U.y-P.y;if(Math.abs(le)>Number.EPSILON){if(le<0&&(P=m[v],K=-K,U=m[T],le=-le),g.y<P.y||g.y>U.y)continue;if(g.y===P.y){if(g.x===P.x)return!0}else{const C=le*(g.x-P.x)-K*(g.y-P.y);if(C===0)return!0;if(C<0)continue;A=!A}}else{if(g.y!==P.y)continue;if(U.x<=g.x&&g.x<=P.x||P.x<=g.x&&g.x<=U.x)return!0}}return A}const s=xn.isClockWise,r=this.subPaths;if(r.length===0)return[];if(e===!0)return n(r);let a,o,l;const c=[];if(r.length===1)return o=r[0],l=new mi,l.curves=o.curves,c.push(l),c;let d=!s(r[0].getPoints());d=t?!d:d;const h=[],f=[];let u=[],p=0,_;f[p]=void 0,u[p]=[];for(let g=0,m=r.length;g<m;g++)o=r[g],_=o.getPoints(),a=s(_),a=t?!a:a,a?(!d&&f[p]&&p++,f[p]={s:new mi,p:_},f[p].s.curves=o.curves,d&&p++,u[p]=[]):u[p].push({h:o,p:_[0]});if(!f[0])return n(r);if(f.length>1){let g=!1;const m=[];for(let E=0,A=f.length;E<A;E++)h[E]=[];for(let E=0,A=f.length;E<A;E++){const T=u[E];for(let v=0;v<T.length;v++){const P=T[v];let U=!0;for(let K=0;K<f.length;K++)i(P.p,f[K].p)&&(E!==K&&m.push({froms:E,tos:K,hole:v}),U?(U=!1,h[K].push(P)):g=!0);U&&h[E].push(P)}}m.length>0&&(g||(u=h))}let y;for(let g=0,m=f.length;g<m;g++){l=f[g].s,c.push(l),y=u[g];for(let E=0,A=y.length;E<A;E++)l.holes.push(y[E].h)}return c}});function ac(t){this.type="Font",this.data=t}Object.assign(ac.prototype,{isFont:!0,generateShapes:function(t,e=100){const n=[],i=og(t,e,this.data);for(let s=0,r=i.length;s<r;s++)Array.prototype.push.apply(n,i[s].toShapes());return n}});function og(t,e,n){const i=Array.from?Array.from(t):String(t).split(""),s=e/n.resolution,r=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*s,a=[];let o=0,l=0;for(let c=0;c<i.length;c++){const d=i[c];if(d===`
`)o=0,l-=r;else{const h=lg(d,s,o,l,n);o+=h.offsetX,a.push(h.path)}}return a}function lg(t,e,n,i,s){const r=s.glyphs[t]||s.glyphs["?"];if(!r){console.error('THREE.Font: character "'+t+'" does not exists in font family '+s.familyName+".");return}const a=new rc;let o,l,c,d,h,f,u,p;if(r.o){const _=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(let y=0,g=_.length;y<g;)switch(_[y++]){case"m":o=_[y++]*e+n,l=_[y++]*e+i,a.moveTo(o,l);break;case"l":o=_[y++]*e+n,l=_[y++]*e+i,a.lineTo(o,l);break;case"q":c=_[y++]*e+n,d=_[y++]*e+i,h=_[y++]*e+n,f=_[y++]*e+i,a.quadraticCurveTo(h,f,c,d);break;case"b":c=_[y++]*e+n,d=_[y++]*e+i,h=_[y++]*e+n,f=_[y++]*e+i,u=_[y++]*e+n,p=_[y++]*e+i,a.bezierCurveTo(h,f,u,p,c,d);break}}return{offsetX:r.ha*e,path:a}}function xl(t){Ue.call(this,t)}xl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:xl,load:function(t,e,n,i){const s=this,r=new sn(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(a){let o;try{o=JSON.parse(a)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),o=JSON.parse(a.substring(65,a.length-2))}const l=s.parse(o);e&&e(l)},n,i)},parse:function(t){return new ac(t)}});let Zs;const cg={getContext:function(){return Zs===void 0&&(Zs=new(window.AudioContext||window.webkitAudioContext)),Zs},setContext:function(t){Zs=t}};function wl(t){Ue.call(this,t)}wl.prototype=Object.assign(Object.create(Ue.prototype),{constructor:wl,load:function(t,e,n,i){const s=this,r=new sn(s.manager);r.setResponseType("arraybuffer"),r.setPath(s.path),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(t,function(a){try{const o=a.slice(0);cg.getContext().decodeAudioData(o,function(c){e(c)})}catch(o){i?i(o):console.error(o),s.manager.itemError(t)}},n,i)}});function Ml(t,e,n){Vt.call(this,void 0,n);const i=new de().set(t),s=new de().set(e),r=new b(i.r,i.g,i.b),a=new b(s.r,s.g,s.b),o=Math.sqrt(Math.PI),l=o*Math.sqrt(.75);this.sh.coefficients[0].copy(r).add(a).multiplyScalar(o),this.sh.coefficients[1].copy(r).sub(a).multiplyScalar(l)}Ml.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Ml,isHemisphereLightProbe:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this},toJSON:function(t){return Vt.prototype.toJSON.call(this,t)}});function Sl(t,e){Vt.call(this,void 0,e);const n=new de().set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}Sl.prototype=Object.assign(Object.create(Vt.prototype),{constructor:Sl,isAmbientLightProbe:!0,copy:function(t){return Vt.prototype.copy.call(this,t),this},toJSON:function(t){return Vt.prototype.toJSON.call(this,t)}});const El=new Te,Tl=new Te;function hg(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new it,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new it,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(hg.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const i=t.projectionMatrix.clone(),s=e.eyeSep/2,r=s*e.near/e.focus,a=e.near*Math.tan(Me.DEG2RAD*e.fov*.5)/e.zoom;let o,l;Tl.elements[12]=-s,El.elements[12]=s,o=-a*e.aspect+r,l=a*e.aspect+r,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(i),o=-a*e.aspect-r,l=a*e.aspect-r,i.elements[0]=2*e.near/(l-o),i.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(i)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Tl),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(El)}});function oc(t,e,n){this.binding=t,this.valueSize=n;let i,s,r;switch(e){case"quaternion":i=this._slerp,s=this._slerpAdditive,r=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,r=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,r=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=r,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(oc.prototype,{accumulate:function(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let r=this.cumulativeWeight;if(r===0){for(let a=0;a!==i;++a)n[s+a]=n[a];r=e}else{r+=e;const a=e/r;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=r},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,r=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const o=e*this._origIndex;this._mixBufferRegion(n,i,o,1-s,e)}r>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let o=e,l=e+e;o!==l;++o)if(n[o]!==n[o+e]){a.setValue(n,i);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let s=n,r=i;s!==r;++s)e[s]=e[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,i,s){if(i>=.5)for(let r=0;r!==s;++r)t[e+r]=t[n+r]},_slerp:function(t,e,n,i){ht.slerpFlat(t,e,t,e,t,n,i)},_slerpAdditive:function(t,e,n,i,s){const r=this._workIndex*s;ht.multiplyQuaternionsFlat(t,r,t,e,t,n),ht.slerpFlat(t,e,t,e,t,r,i)},_lerp:function(t,e,n,i,s){const r=1-i;for(let a=0;a!==s;++a){const o=e+a;t[o]=t[o]*r+t[n+a]*i}},_lerpAdditive:function(t,e,n,i,s){for(let r=0;r!==s;++r){const a=e+r;t[a]=t[a]+t[n+r]*i}}});const Wa="\\[\\]\\.:\\/",ug=new RegExp("["+Wa+"]","g"),ja="[^"+Wa+"]",dg="[^"+Wa.replace("\\.","")+"]",fg=/((?:WC+[\/:])*)/.source.replace("WC",ja),pg=/(WCOD+)?/.source.replace("WCOD",dg),mg=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ja),gg=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ja),_g=new RegExp("^"+fg+pg+mg+gg+"$"),yg=["material","materials","bones"];function lc(t,e,n){const i=n||ut.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}Object.assign(lc.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}});function ut(t,e,n){this.path=e,this.parsedPath=n||ut.parseTrackName(e),this.node=ut.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(ut,{Composite:lc,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new ut.Composite(t,e,n):new ut(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(ug,"")},parseTrackName:function(t){const e=_g.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);yg.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let r=0;r<s.length;r++){const a=s[r];if(a.name===e||a.uuid===e)return a;const o=n(a.children);if(o)return o}return null},i=n(t.children);if(i)return i}return null}});Object.assign(ut.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,n){e[n]=this.node[this.propertyName]},function(e,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)e[n++]=i[s]},function(e,n){e[n]=this.resolvedProperty[this.propertyIndex]},function(e,n){this.resolvedProperty.toArray(e,n)}],SetterByBindingTypeAndVersioning:[[function(e,n){this.targetObject[this.propertyName]=e[n]},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.targetObject[this.propertyName]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[n++]},function(e,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[n++];this.targetObject.needsUpdate=!0},function(e,n){const i=this.resolvedProperty;for(let s=0,r=i.length;s!==r;++s)i[s]=e[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty[this.propertyIndex]=e[n]},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty[this.propertyIndex]=e[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,n){this.resolvedProperty.fromArray(e,n)},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.needsUpdate=!0},function(e,n){this.resolvedProperty.fromArray(e,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(e,n){this.bind(),this.getValue(e,n)},setValue:function(e,n){this.bind(),this.setValue(e,n)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=ut.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let l=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let c=0;c<t.length;c++)if(t[c].name===l){l=c;break}break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(l!==void 0){if(t[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[l]}}const r=t[i];if(r===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}o=this.BindingType.ArrayElement,this.resolvedProperty=r,this.propertyIndex=s}else r.fromArray!==void 0&&r.toArray!==void 0?(o=this.BindingType.HasFromToArray,this.resolvedProperty=r):Array.isArray(r)?(o=this.BindingType.EntireArray,this.resolvedProperty=r):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][a]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}});Object.assign(ut.prototype,{_getValue_unbound:ut.prototype.getValue,_setValue_unbound:ut.prototype.setValue});function bg(){this.uuid=Me.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}Object.assign(bg.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,r=s.length;let a,o=t.length,l=this.nCachedObjects_;for(let c=0,d=arguments.length;c!==d;++c){const h=arguments[c],f=h.uuid;let u=e[f];if(u===void 0){u=o++,e[f]=u,t.push(h);for(let p=0,_=r;p!==_;++p)s[p].push(new ut(h,n[p],i[p]))}else if(u<l){a=t[u];const p=--l,_=t[p];e[_.uuid]=u,t[u]=_,e[f]=p,t[p]=h;for(let y=0,g=r;y!==g;++y){const m=s[y],E=m[p];let A=m[u];m[u]=E,A===void 0&&(A=new ut(h,n[y],i[y])),m[p]=A}}else t[u]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let r=0,a=arguments.length;r!==a;++r){const o=arguments[r],l=o.uuid,c=e[l];if(c!==void 0&&c>=s){const d=s++,h=t[d];e[h.uuid]=c,t[c]=h,e[l]=d,t[d]=o;for(let f=0,u=i;f!==u;++f){const p=n[f],_=p[d],y=p[c];p[c]=_,p[d]=y}}}this.nCachedObjects_=s},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,r=t.length;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,d=e[c];if(d!==void 0)if(delete e[c],d<s){const h=--s,f=t[h],u=--r,p=t[u];e[f.uuid]=d,t[d]=f,e[p.uuid]=h,t[h]=p,t.pop();for(let _=0,y=i;_!==y;++_){const g=n[_],m=g[h],E=g[u];g[d]=m,g[h]=E,g.pop()}}else{const h=--r,f=t[h];h>0&&(e[f.uuid]=d),t[d]=f,t.pop();for(let u=0,p=i;u!==p;++u){const _=n[u];_[d]=_[h],_.pop()}}}this.nCachedObjects_=s},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(i!==void 0)return s[i];const r=this._paths,a=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,d=new Array(l);i=s.length,n[t]=i,r.push(t),a.push(e),s.push(d);for(let h=c,f=o.length;h!==f;++h){const u=o[h];d[h]=new ut(u,t,e)}return d},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,s=this._parsedPaths,r=this._bindings,a=r.length-1,o=r[a],l=t[a];e[l]=n,r[n]=o,r.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}});class vg{constructor(e,n,i=null,s=n.blendMode){this._mixer=e,this._clip=n,this._localRoot=i,this.blendMode=s;const r=n.tracks,a=r.length,o=new Array(a),l={endingStart:oi,endingEnd:oi};for(let c=0;c!==a;++c){const d=r[c].createInterpolant(null);o[c]=d,d.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Vh,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,n){return this.loop=e,this.repetitions=n,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,n,i){if(e.fadeOut(n),this.fadeIn(n),i){const s=this._clip.duration,r=e._clip.duration,a=r/s,o=s/r;e.warp(1,a,n),this.warp(o,1,n)}return this}crossFadeTo(e,n,i){return e.crossFadeFrom(this,n,i)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,n,i){const s=this._mixer,r=s.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=s._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=r,l[1]=r+i,c[0]=e/a,c[1]=n/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,n,i,s){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*i;if(l<0||i===0)return;this._startTime=null,n=i*l}n*=this._updateTimeScale(e);const a=this._updateTime(n),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Nl:for(let d=0,h=l.length;d!==h;++d)l[d].evaluate(a),c[d].accumulateAdditive(o);break;case Ua:default:for(let d=0,h=l.length;d!==h;++d)l[d].evaluate(a),c[d].accumulate(s,o)}}}_updateWeight(e){let n=0;if(this.enabled){n=this.weight;const i=this._weightInterpolant;if(i!==null){const s=i.evaluate(e)[0];n*=s,e>i.parameterPositions[1]&&(this.stopFading(),s===0&&(this.enabled=!1))}}return this._effectiveWeight=n,n}_updateTimeScale(e){let n=0;if(!this.paused){n=this.timeScale;const i=this._timeScaleInterpolant;i!==null&&(n*=i.evaluate(e)[0],e>i.parameterPositions[1]&&(this.stopWarping(),n===0?this.paused=!0:this.timeScale=n))}return this._effectiveTimeScale=n,n}_updateTime(e){const n=this._clip.duration,i=this.loop;let s=this.time+e,r=this._loopCount;const a=i===Wh;if(e===0)return r===-1?s:a&&(r&1)===1?n-s:s;if(i===Gh){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(s>=n)s=n;else if(s<0)s=0;else{this.time=s;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),s>=n||s<0){const o=Math.floor(s/n);s-=n*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,s=e>0?n:0,this.time=s,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=s,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=s;if(a&&(r&1)===1)return n-s}return s}_setEndings(e,n,i){const s=this._interpolantSettings;i?(s.endingStart=li,s.endingEnd=li):(e?s.endingStart=this.zeroSlopeAtStart?li:oi:s.endingStart=ir,n?s.endingEnd=this.zeroSlopeAtEnd?li:oi:s.endingEnd=ir)}_scheduleFading(e,n,i){const s=this._mixer,r=s.time;let a=this._weightInterpolant;a===null&&(a=s._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=n,o[1]=r+e,l[1]=i,this}}function Al(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Al.prototype=Object.assign(Object.create(Pt.prototype),{constructor:Al,_bindAction:function(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,r=t._propertyBindings,a=t._interpolants,o=n.uuid,l=this._bindingsByRootAndName;let c=l[o];c===void 0&&(c={},l[o]=c);for(let d=0;d!==s;++d){const h=i[d],f=h.name;let u=c[f];if(u!==void 0)r[d]=u;else{if(u=r[d],u!==void 0){u._cacheIndex===null&&(++u.referenceCount,this._addInactiveBinding(u,o,f));continue}const p=e&&e._propertyBindings[d].binding.parsedPath;u=new oc(ut.create(n,f,p),h.ValueTypeName,h.getValueSize()),++u.referenceCount,this._addInactiveBinding(u,o,f),r[d]=u}a[d].resultBuffer=u.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,s=this._actionsByClip[i];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const i=this._actions,s=this._actionsByClip;let r=s[e];if(r===void 0)r={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=r;else{const a=r.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),r.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,r=this._actionsByClip,a=r[s],o=a.knownActions,l=o[o.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,o[c]=l,o.pop(),t._byClipCacheIndex=null;const d=a.actionByRoot,h=(t._localRoot||this._root).uuid;delete d[h],o.length===0&&delete r[s],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s},_addInactiveBinding:function(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let r=i[e];r===void 0&&(r={},i[e]=r),r[n]=t,t._cacheIndex=s.length,s.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,r=this._bindingsByRootAndName,a=r[i],o=e[e.length-1],l=t._cacheIndex;o._cacheIndex=l,e[l]=o,e.pop(),delete a[s],Object.keys(a).length===0&&delete r[i]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new hr(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const i=e||this._root,s=i.uuid;let r=typeof t=="string"?Dt.findByName(i,t):t;const a=r!==null?r.uuid:t,o=this._actionsByClip[a];let l=null;if(n===void 0&&(r!==null?n=r.blendMode:n=Ua),o!==void 0){const d=o.actionByRoot[s];if(d!==void 0&&d.blendMode===n)return d;l=o.knownActions[0],r===null&&(r=l._clip)}if(r===null)return null;const c=new vg(this,r,e,n);return this._bindAction(c,l),this._addInactiveAction(c,a,s),c},existingAction:function(t,e){const n=e||this._root,i=n.uuid,s=typeof t=="string"?Dt.findByName(n,t):t,r=s?s.uuid:t,a=this._actionsByClip[r];return a!==void 0&&a.actionByRoot[i]||null},stopAllAction:function(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),r=this._accuIndex^=1;for(let l=0;l!==n;++l)e[l]._update(i,t,s,r);const a=this._bindings,o=this._nActiveBindings;for(let l=0;l!==o;++l)a[l].apply(r);return this},setTime:function(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const r=s.knownActions;for(let a=0,o=r.length;a!==o;++a){const l=r[a];this._deactivateAction(l);const c=l._cacheIndex,d=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,d._cacheIndex=c,e[c]=d,e.pop(),this._removeInactiveBindingsForAction(l)}delete i[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const r in n){const a=n[r].actionByRoot,o=a[e];o!==void 0&&(this._deactivateAction(o),this._removeInactiveAction(o))}const i=this._bindingsByRootAndName,s=i[e];if(s!==void 0)for(const r in s){const a=s[r];a.restoreOriginalState(),this._removeInactiveBinding(a)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Pl(t,e,n){Mt.call(this,t,e),this.meshPerAttribute=n||1}Pl.prototype=Object.assign(Object.create(Mt.prototype),{constructor:Pl,isInstancedInterleavedBuffer:!0,copy:function(t){return Mt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Mt.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Mt.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}});function cc(t,e,n,i,s){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}Object.defineProperty(cc.prototype,"needsUpdate",{set:function(t){t===!0&&this.version++}});Object.assign(cc.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}});function Ut(t,e,n,i){this.ray=new gs(t,e),this.near=n||0,this.far=i||1/0,this.camera=null,this.layers=new Bl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function Ll(t,e){return t.distance-e.distance}function Ia(t,e,n,i){if(t.layers.test(e.layers)&&t.raycast(e,n),i===!0){const s=t.children;for(let r=0,a=s.length;r<a;r++)Ia(s[r],e,n,!0)}}Object.assign(Ut.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,e,n){const i=n||[];return Ia(t,this,i,e),i.sort(Ll),i},intersectObjects:function(t,e,n){const i=n||[];if(Array.isArray(t)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(let s=0,r=t.length;s<r;s++)Ia(t[s],this,i,e);return i.sort(Ll),i}});class Cl{constructor(e=1,n=0,i=0){return this.radius=e,this.phi=n,this.theta=i,this}set(e,n,i){return this.radius=e,this.phi=n,this.theta=i,this}clone(){return new this.constructor().copy(this)}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,n,i){return this.radius=Math.sqrt(e*e+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(Me.clamp(n/this.radius,-1,1))),this}}const Rl=new H;class xg{constructor(e,n){Object.defineProperty(this,"isBox2",{value:!0}),this.min=e!==void 0?e:new H(1/0,1/0),this.max=n!==void 0?n:new H(-1/0,-1/0)}set(e,n){return this.min.copy(e),this.max.copy(n),this}setFromPoints(e){this.makeEmpty();for(let n=0,i=e.length;n<i;n++)this.expandByPoint(e[n]);return this}setFromCenterAndSize(e,n){const i=Rl.copy(n).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new H),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new H),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,n){return n===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),n=new H),n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,n){return n===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),n=new H),n.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Rl.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}function gr(t){_e.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}gr.prototype=Object.create(_e.prototype);gr.prototype.constructor=gr;gr.prototype.isImmediateRenderObject=!0;const mn=new b,Js=new Te,ta=new Te;class wg extends rr{constructor(e){const n=hc(e),i=new Be,s=[],r=[],a=new de(0,0,1),o=new de(0,1,0);for(let c=0;c<n.length;c++){const d=n[c];d.parent&&d.parent.isBone&&(s.push(0,0,0),s.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}i.setAttribute("position",new Ne(s,3)),i.setAttribute("color",new Ne(r,3));const l=new Tt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=n,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const n=this.bones,i=this.geometry,s=i.getAttribute("position");ta.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<n.length;r++){const o=n[r];o.parent&&o.parent.isBone&&(Js.multiplyMatrices(ta,o.matrixWorld),mn.setFromMatrixPosition(Js),s.setXYZ(a,mn.x,mn.y,mn.z),Js.multiplyMatrices(ta,o.parent.matrixWorld),mn.setFromMatrixPosition(Js),s.setXYZ(a+1,mn.x,mn.y,mn.z),a+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function hc(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,hc(t.children[n]));return e}class Mg extends rr{constructor(e=10,n=10,i=4473924,s=8947848){i=new de(i),s=new de(s);const r=n/2,a=e/n,o=e/2,l=[],c=[];for(let f=0,u=0,p=-o;f<=n;f++,p+=a){l.push(-o,0,p,o,0,p),l.push(p,0,-o,p,0,o);const _=f===r?i:s;_.toArray(c,u),u+=3,_.toArray(c,u),u+=3,_.toArray(c,u),u+=3,_.toArray(c,u),u+=3}const d=new Be;d.setAttribute("position",new Ne(l,3)),d.setAttribute("color",new Ne(c,3));const h=new Tt({vertexColors:!0,toneMapped:!1});super(d,h),this.type="GridHelper"}}const Sg=new Float32Array(1);new Int32Array(Sg.buffer);me.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(me.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t};Object.assign(bn.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new mt;for(let n=0,i=t.length;n<i;n++){const s=t[n];e.vertices.push(new b(s.x,s.y,s.z||0))}return e}});Object.assign(Ht.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}});Object.create(vt.prototype);Object.create(vt.prototype);function uc(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),vt.call(this,t),this.type="catmullrom"}uc.prototype=Object.create(vt.prototype);Object.assign(uc.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});Mg.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};wg.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};Object.assign(Ue.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),ag.extractUrlBase(t)}});Ue.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};Object.assign(xg.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(An.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}});Object.assign(Pn.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}});wr.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)};Object.assign(Me,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Me.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Me.ceilPowerOfTwo(t)}});Object.assign(pt.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}});Object.assign(Te.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new b().setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,i,s,r){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,i,n,s,r)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}});tn.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)};Object.assign(ht.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}});Object.assign(gs.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}});Object.assign(ot.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}});Object.assign(ot,{barycoordFromPoint:function(t,e,n,i,s){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),ot.getBarycoord(t,e,n,i,s)},normal:function(t,e,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),ot.getNormal(t,e,n,i)}});Object.assign(mi.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Um(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Wm(this,t)}});Object.assign(H.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(b.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(ze.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}});Object.assign(mt.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.assign(_e.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(_e.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.assign($e.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}});Object.defineProperties($e.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),jh},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});Object.defineProperties(da.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Object.defineProperty(ma.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}});fa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};Object.defineProperty(me.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}});it.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(t)};Object.defineProperties(qe.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}});Object.defineProperties(xe.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===ts},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(ts)}}});Object.assign(xe.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?ts:xr),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(Be.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new xe(arguments[1],arguments[2]))):t==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e)},addDrawCall:function(t,e,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}});Object.defineProperties(Be.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(mr.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}});Object.defineProperties(Ut.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}});Object.defineProperties(Mt.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===ts},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}});Object.assign(Mt.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(t===!0?ts:xr),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}});Object.assign(sc.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}});Object.assign($l.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}});Object.defineProperties(ye.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new de}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===Il}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}});Object.defineProperties(Gn.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Hn.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}});Object.defineProperties(dt.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}});Object.assign(_s.prototype,{clearTarget:function(t,e,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,i)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}});Object.defineProperties(_s.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=t===!0?zl:ms}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}});Object.defineProperties(Kl.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});Object.defineProperties(Nt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}});_i.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)};_i.prototype.clear=function(t,e,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,i)};Pi.crossOrigin=void 0;Pi.loadTexture=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const s=new pr;s.setCrossOrigin(this.crossOrigin);const r=s.load(t,n,void 0,i);return e&&(r.mapping=e),r};Pi.loadTextureCube=function(t,e,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const s=new fr;s.setCrossOrigin(this.crossOrigin);const r=s.load(t,n,void 0,i);return e&&(r.mapping=e),r};Pi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};Pi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:vc}}));var dc=(t=>(t.Cube="cube",t.HalfCube="halfCube",t.StairsCube="stairsCube",t.Flower1Cube="flower1Cube",t))(dc||{}),O=dc,Eg="./assets/1.4ee44383.png",Tg="./assets/2.e52c24af.png",Ag="./assets/3.1d2e76a5.png",Pg="./assets/4.623e357f.png",Lg="./assets/5.1c3ee6aa.png",Cg="./assets/6.a5dce513.png",Rg="./assets/anvil_base.4cabcffe.png",kg="./assets/anvil_top_damaged_0.8c5df6f3.png",Ig="./assets/anvil_top_damaged_1.4e377a59.png",Og="./assets/anvil_top_damaged_2.8d1e5162.png",Dg="./assets/atlas.9e7a2ed7.png",Fg="./assets/beacon.10275b84.png",Ng="./assets/bed_feet_end.ef2b9935.png",zg="./assets/bed_feet_side.9fa80957.png",Bg="./assets/bed_feet_top.2e110003.png",Ug="./assets/bed_head_end.0fa1c6b5.png",Hg="./assets/bed_head_side.46c8ce5a.png",Gg="./assets/bed_head_top.3112430d.png",Vg="./assets/bedrock.54088be8.png",Wg="./assets/bookshelf.79d96a48.png",jg="./assets/brewing_stand.dfe53a70.png",qg="./assets/brewing_stand_base.23bda4ed.png",Xg="./assets/brick.d74622e7.png",Yg="./assets/cactus_bottom.e141075b.png",Zg="./assets/cactus_side.0f403c2e.png",Jg="./assets/cactus_top.0538f7c7.png",Kg="./assets/cake_bottom.66c03469.png",Qg="./assets/cake_inner.46decaf8.png",$g="./assets/cake_side.87d5e734.png",e0="./assets/cake_top.f57fd082.png",t0="./assets/carrots_stage_0.c4b749eb.png",n0="./assets/carrots_stage_1.c74bd9e5.png",i0="./assets/carrots_stage_2.c7657811.png",s0="./assets/carrots_stage_3.a9ff26f6.png",r0="./assets/cauldron_bottom.12d12880.png",a0="./assets/cauldron_inner.432dbf59.png",o0="./assets/cauldron_side.7e5662cf.png",l0="./assets/cauldron_top.0c9a3f25.png",c0="./assets/clay.e09dba95.png",h0="./assets/coal_block.45b6d0d1.png",u0="./assets/coal_ore.e99973ba.png",d0="./assets/cobblestone.58e7a8d0.png",f0="./assets/cobblestone_mossy.a7fdace1.png",p0="./assets/cocoa_stage_0.b22ec58b.png",m0="./assets/cocoa_stage_1.bb86aded.png",g0="./assets/cocoa_stage_2.13bd5279.png",_0="./assets/command_block.539ce1f5.png",y0="./assets/comparator_off.f56f76b3.png",b0="./assets/comparator_on.bad92ce8.png",v0="./assets/crafting_table_front.2d26be59.png",x0="./assets/crafting_table_side.aa1d8bfe.png",w0="./assets/crafting_table_top.32208808.png",M0="./assets/daylight_detector_side.b2092477.png",S0="./assets/daylight_detector_top.73127edf.png",E0="./assets/deadbush.a47441da.png",T0="./assets/destroy_stage_0.f499533e.png",A0="./assets/destroy_stage_1.0de13fe3.png",P0="./assets/destroy_stage_2.3dad4672.png",L0="./assets/destroy_stage_3.47e37d00.png",C0="./assets/destroy_stage_4.27806171.png",R0="./assets/destroy_stage_5.a1594b01.png",k0="./assets/destroy_stage_6.5410c19b.png",I0="./assets/destroy_stage_7.d3f13380.png",O0="./assets/destroy_stage_8.0812dac1.png",D0="./assets/destroy_stage_9.1a04b108.png",F0="./assets/diamond_block.ffc0d871.png",N0="./assets/diamond_ore.78faaf2c.png",z0="./assets/dirt.fb045025.png",B0="./assets/dirt_podzol_side.5dd198b3.png",U0="./assets/dirt_podzol_top.7c162251.png",H0="./assets/dispenser_front_horizontal.b8f7af16.png",G0="./assets/dispenser_front_vertical.dd120166.png",V0="./assets/door_iron_lower.5535b5da.png",W0="./assets/door_iron_upper.81eda91d.png",j0="./assets/door_wood_lower.751f5959.png",q0="./assets/door_wood_upper.7e32610b.png",X0="./assets/double_plant_fern_bottom.81077c8b.png",Y0="./assets/double_plant_fern_top.df01fde3.png",Z0="./assets/double_plant_grass_bottom.8922e388.png",J0="./assets/double_plant_grass_top.187f7e9c.png",K0="./assets/double_plant_paeonia_bottom.f325ac20.png",Q0="./assets/double_plant_paeonia_top.a43be8ac.png",$0="./assets/double_plant_rose_bottom.155b18f9.png",e_="./assets/double_plant_rose_top.2d911834.png",t_="./assets/double_plant_sunflower_back.c5844b87.png",n_="./assets/double_plant_sunflower_bottom.8f4b126e.png",i_="./assets/double_plant_sunflower_front.b1e2d21b.png",s_="./assets/double_plant_sunflower_top.8a598e43.png",r_="./assets/double_plant_syringa_bottom.c3a8da79.png",a_="./assets/double_plant_syringa_top.b0bfe09a.png",o_="./assets/dragon_egg.fc19de89.png",l_="./assets/dropper_front_horizontal.242e3354.png",c_="./assets/dropper_front_vertical.812031fa.png",h_="./assets/emerald_block.3af75337.png",u_="./assets/emerald_ore.0d298a4f.png",d_="./assets/enchanting_table_bottom.9933436b.png",f_="./assets/enchanting_table_side.efd38bdb.png",p_="./assets/enchanting_table_top.3b64a27f.png",m_="./assets/end_stone.f697d8b3.png",g_="./assets/endframe_eye.ec101516.png",__="./assets/endframe_side.0a7edb28.png",y_="./assets/endframe_top.cc47521f.png",b_="./assets/farmland_dry.3c60e48c.png",v_="./assets/farmland_wet.cb49d2e1.png",x_="./assets/fern.17e887f9.png",w_="./assets/fire_layer_0.aa2fa0e7.png",M_="./assets/fire_layer_1.82e4aaef.png",S_="./assets/flower_allium.68316f7f.png",E_="./assets/flower_blue_orchid.6296c692.png",T_="./assets/flower_dandelion.e6fe8217.png",A_="./assets/flower_houstonia.65bf6f36.png",P_="./assets/flower_oxeye_daisy.e559f1ae.png",L_="./assets/flower_paeonia.2b56dd06.png",C_="./assets/flower_pot.94e0bc50.png",R_="./assets/flower_rose.36250489.png",k_="./assets/flower_tulip_orange.9614fdd6.png",I_="./assets/flower_tulip_pink.473f1879.png",O_="./assets/flower_tulip_red.1e00daa4.png",D_="./assets/flower_tulip_white.65a32240.png",F_="./assets/furnace_front_off.f3495924.png",N_="./assets/furnace_front_on.a16879e4.png",z_="./assets/furnace_side.4cf28792.png",B_="./assets/furnace_top.fc197ab2.png",U_="./assets/glass.47e6c403.png",H_="./assets/glass_black.c1cf3096.png",G_="./assets/glass_blue.e361b905.png",V_="./assets/glass_brown.1c9640c2.png",W_="./assets/glass_cyan.e402d81f.png",j_="./assets/glass_gray.0fb52d04.png",q_="./assets/glass_green.e1c2e3c1.png",X_="./assets/glass_light_blue.327fd61d.png",Y_="./assets/glass_lime.b78b3693.png",Z_="./assets/glass_magenta.0391d7c4.png",J_="./assets/glass_orange.e5a1dcdf.png",K_="./assets/glass_pane_top.ed69dc98.png",Q_="./assets/glass_pane_top_black.69c870dc.png",$_="./assets/glass_pane_top_blue.fc7facf7.png",ey="./assets/glass_pane_top_brown.0593bd74.png",ty="./assets/glass_pane_top_cyan.16231acd.png",ny="./assets/glass_pane_top_gray.15ca80d3.png",iy="./assets/glass_pane_top_green.578f5951.png",sy="./assets/glass_pane_top_light_blue.6315dca8.png",ry="./assets/glass_pane_top_lime.d2c2ca12.png",ay="./assets/glass_pane_top_magenta.6f15e858.png",oy="./assets/glass_pane_top_orange.09b15047.png",ly="./assets/glass_pane_top_pink.42336b58.png",cy="./assets/glass_pane_top_purple.a874defe.png",hy="./assets/glass_pane_top_red.678140f3.png",uy="./assets/glass_pane_top_silver.3b99a406.png",dy="./assets/glass_pane_top_white.1b307566.png",fy="./assets/glass_pane_top_yellow.c93fb666.png",py="./assets/glass_pink.051dca98.png",my="./assets/glass_purple.94cdd688.png",gy="./assets/glass_red.b7f9a78a.png",_y="./assets/glass_silver.384d4467.png",yy="./assets/glass_white.bc5cb68b.png",by="./assets/glass_yellow.11378122.png",vy="./assets/glowstone.d6b0cb68.png",xy="./assets/gold_block.e58ed761.png",wy="./assets/gold_ore.be0237a6.png",My="./assets/grass_side.1f5d4845.png",Sy="./assets/grass_side_overlay.b9b92c64.png",Ey="./assets/grass_side_snowed.964a1f6a.png",Ty="./assets/grass_top.b2aa2204.png",Ay="./assets/grass_top_green.be9cf310.png",Py="./assets/gravel.054656b3.png",Ly="./assets/hardened_clay.62fd8ba1.png",Cy="./assets/hardened_clay_stained_black.d24e5df3.png",Ry="./assets/hardened_clay_stained_blue.2b07e794.png",ky="./assets/hardened_clay_stained_brown.8665bb14.png",Iy="./assets/hardened_clay_stained_cyan.77edc9be.png",Oy="./assets/hardened_clay_stained_gray.8863388d.png",Dy="./assets/hardened_clay_stained_green.562360d1.png",Fy="./assets/hardened_clay_stained_light_blue.26000140.png",Ny="./assets/hardened_clay_stained_lime.adef7b1d.png",zy="./assets/hardened_clay_stained_magenta.5e666b67.png",By="./assets/hardened_clay_stained_orange.203b87e0.png",Uy="./assets/hardened_clay_stained_pink.64040142.png",Hy="./assets/hardened_clay_stained_purple.9a1a4cd7.png",Gy="./assets/hardened_clay_stained_red.27642943.png",Vy="./assets/hardened_clay_stained_silver.aadb3717.png",Wy="./assets/hardened_clay_stained_white.d674ab2e.png",jy="./assets/hardened_clay_stained_yellow.a6c96488.png",qy="./assets/hay_block_side.591026ca.png",Xy="./assets/hay_block_top.54e8d8a9.png",Yy="./assets/hopper_inside.6b9a0cba.png",Zy="./assets/hopper_outside.5cb3a731.png",Jy="./assets/cauldron_top.0c9a3f25.png",Ky="./assets/ice.811fd126.png",Qy="./assets/ice_packed.af2413c7.png",$y="./assets/iron_bars.9b2c6b12.png",eb="./assets/iron_block.11e01710.png",tb="./assets/iron_ore.81c082a2.png",nb="./assets/itemframe_background.766f2f38.png",ib="./assets/jukebox_side.e074c49e.png",sb="./assets/jukebox_top.06e295c1.png",rb="./assets/ladder.a62f4a70.png",ab="./assets/lapis_block.1705bfa6.png",ob="./assets/lapis_ore.74545bf2.png",lb="./assets/lava_flow.ee3673eb.png",cb="./assets/lava_still.8bc4c492.png",hb="./assets/leaves_acacia.50cc5b0d.png",ub="./assets/leaves_acacia_opaque.ace70b13.png",db="./assets/leaves_acacia.50cc5b0d.png",fb="./assets/leaves_acacia_opaque.ace70b13.png",pb="./assets/leaves_acacia.50cc5b0d.png",mb="./assets/leaves_acacia_opaque.ace70b13.png",gb="./assets/leaves_jungle.d42f5476.png",_b="./assets/leaves_jungle_opaque.3794b345.png",yb="./assets/leaves_acacia.50cc5b0d.png",bb="./assets/leaves_acacia_opaque.ace70b13.png",vb="./assets/leaves_spruce.c05bc731.png",xb="./assets/leaves_spruce_opaque.79f7f545.png",wb="./assets/lever.bc8d5be0.png",Mb="./assets/log_acacia.23dba3fe.png",Sb="./assets/log_acacia_top.269d6781.png",Eb="./assets/log_big_oak.f9099836.png",Tb="./assets/log_big_oak_top.74a762b0.png",Ab="./assets/log_birch.928118c7.png",Pb="./assets/log_birch_top.da6e5f58.png",Lb="./assets/log_jungle.92e0c520.png",Cb="./assets/log_jungle_top.d8049db8.png",Rb="./assets/log_oak.6f24bf4e.png",kb="./assets/log_oak_top.f9045998.png",Ib="./assets/log_spruce.9e557c9b.png",Ob="./assets/log_spruce_top.680923bd.png",Db="./assets/melon_side.576e7dfe.png",Fb="./assets/melon_stem_connected.61f12575.png",Nb="./assets/melon_stem_disconnected.ffbf229b.png",zb="./assets/melon_top.32780919.png",Bb="./assets/mob_spawner.f6b65a99.png",Ub="./assets/mushroom_block_inside.0cf1bc24.png",Hb="./assets/mushroom_block_skin_brown.1e868b94.png",Gb="./assets/mushroom_block_skin_red.39e7e2a6.png",Vb="./assets/mushroom_block_skin_stem.659c6fe0.png",Wb="./assets/mushroom_brown.3197a583.png",jb="./assets/mushroom_red.cb28da44.png",qb="./assets/mycelium_side.4c926fda.png",Xb="./assets/mycelium_top.d17c1b39.png",Yb="./assets/nether_brick.9e9f921e.png",Zb="./assets/nether_wart_stage_0.d8e508e8.png",Jb="./assets/nether_wart_stage_1.7859e19f.png",Kb="./assets/nether_wart_stage_2.732b30d3.png",Qb="./assets/netherrack.aa436e0d.png",$b="./assets/jukebox_side.e074c49e.png",ev="./assets/obsidian.5456fc99.png",tv="./assets/furnace_top.fc197ab2.png",nv="./assets/piston_inner.bc6e5edc.png",iv="./assets/piston_side.e9e13d76.png",sv="./assets/piston_top_normal.a7cae489.png",rv="./assets/piston_top_sticky.16e3923a.png",av="./assets/planks_acacia.ca4ee6c5.png",ov="./assets/planks_big_oak.b01a86e2.png",lv="./assets/planks_birch.9d6f3352.png",cv="./assets/planks_jungle.4970d7e8.png",hv="./assets/planks_oak.9dd3c835.png",uv="./assets/planks_spruce.08976411.png",dv="./assets/portal.1c937c9d.png",fv="./assets/carrots_stage_0.c4b749eb.png",pv="./assets/carrots_stage_1.c74bd9e5.png",mv="./assets/carrots_stage_2.c7657811.png",gv="./assets/potatoes_stage_3.8f801d7a.png",_v="./assets/pumpkin_face_off.e2c21085.png",yv="./assets/pumpkin_face_on.f912d24f.png",bv="./assets/pumpkin_side.413c5c30.png",vv="./assets/melon_stem_connected.61f12575.png",xv="./assets/melon_stem_disconnected.ffbf229b.png",wv="./assets/pumpkin_top.e7452a6d.png",Mv="./assets/quartz_block_bottom.81c55f51.png",Sv="./assets/quartz_block_chiseled.7620b5e1.png",Ev="./assets/quartz_block_chiseled_top.b3bb9098.png",Tv="./assets/quartz_block_lines.ecc66db9.png",Av="./assets/quartz_block_lines_top.c826287d.png",Pv="./assets/quartz_block_side.db39589d.png",Lv="./assets/quartz_block_side.db39589d.png",Cv="./assets/quartz_ore.e20b1c6a.png",Rv="./assets/rail_activator.657f072c.png",kv="./assets/rail_activator_powered.603a5714.png",Iv="./assets/rail_detector.6d10fe4b.png",Ov="./assets/rail_detector_powered.0335525d.png",Dv="./assets/rail_golden.2ab0b409.png",Fv="./assets/rail_golden_powered.e53d64b9.png",Nv="./assets/rail_normal.297ec4b9.png",zv="./assets/rail_normal_turned.de844d16.png",Bv="./assets/red_sand.3da842d7.png",Uv="./assets/redstone_block.f964d3aa.png",Hv="./assets/redstone_dust_cross.4815ca09.png",Gv="./assets/redstone_dust_line_overlay.a901afae.png",Vv="./assets/redstone_dust_line.1211cd63.png",Wv="./assets/redstone_dust_line_overlay.a901afae.png",jv="./assets/redstone_lamp_off.34cf23a5.png",qv="./assets/redstone_lamp_on.2e2faadb.png",Xv="./assets/redstone_ore.d5c28eb0.png",Yv="./assets/redstone_torch_off.7fddaea2.png",Zv="./assets/redstone_torch_on.535ad488.png",Jv="./assets/reeds.44200a25.png",Kv="./assets/repeater_off.0aa9be5c.png",Qv="./assets/repeater_on.0ad7eeb9.png",$v="./assets/sand.9aae2f05.png",ex="./assets/sandstone_bottom.2ecee6a4.png",tx="./assets/sandstone_carved.f9bad502.png",nx="./assets/sandstone_normal.3dcd7603.png",ix="./assets/sandstone_smooth.0c0dfc70.png",sx="./assets/sandstone_top.0cf7cab6.png",rx="./assets/sapling_acacia.aa60b560.png",ax="./assets/sapling_birch.c363352b.png",ox="./assets/sapling_jungle.49021c91.png",lx="./assets/sapling_oak.a9a515fc.png",cx="./assets/sapling_roofed_oak.939f1942.png",hx="./assets/sapling_spruce.a3f5abf8.png",ux="./assets/snow.60c0ef13.png",dx="./assets/soul_sand.8471955a.png",fx="./assets/sponge.7396d0db.png",px="./assets/stone.489928bc.png",mx="./assets/stone_slab_side.5e701b44.png",gx="./assets/stone_slab_top.65e8a0b1.png",_x="./assets/stonebrick.4b35ff37.png",yx="./assets/stonebrick_carved.c92ee7bf.png",bx="./assets/stonebrick_cracked.80a65e67.png",vx="./assets/stonebrick_mossy.7784348f.png",xx="./assets/tallgrass.7a2b3d45.png",wx="./assets/tnt_bottom.4092a0bc.png",Mx="./assets/tnt_side.6a5ed560.png",Sx="./assets/tnt_top.2350fed7.png",Ex="./assets/torch_on.eba87b99.png",Tx="./assets/trapdoor.01090e6c.png",Ax="./assets/trip_wire.3ff6790b.png",Px="./assets/trip_wire_source.c7ffc8dd.png",Lx="./assets/vine.784e120d.png",Cx="./assets/water_flow.89af5588.png",Rx="./assets/water_still.f4a5a43c.png",kx="./assets/waterlily.81a79aff.png",Ix="./assets/web.24ce322a.png",Ox="./assets/wheat_stage_0.07b7c7f4.png",Dx="./assets/wheat_stage_1.b55a4062.png",Fx="./assets/wheat_stage_2.2e3f122b.png",Nx="./assets/wheat_stage_3.5fb8f256.png",zx="./assets/wheat_stage_4.d61ab7b3.png",Bx="./assets/wheat_stage_5.d238687a.png",Ux="./assets/wheat_stage_6.52bd01ce.png",Hx="./assets/wheat_stage_7.ab581ca5.png",Gx="./assets/wool_colored_black.b4aeeb25.png",Vx="./assets/wool_colored_blue.d3ec9522.png",Wx="./assets/wool_colored_brown.b116d41e.png",jx="./assets/wool_colored_cyan.a85f811f.png",qx="./assets/wool_colored_gray.f124ffbc.png",Xx="./assets/wool_colored_green.80c1d30b.png",Yx="./assets/wool_colored_light_blue.c60b8612.png",Zx="./assets/wool_colored_lime.620940b6.png",Jx="./assets/wool_colored_magenta.e0f42fc9.png",Kx="./assets/wool_colored_orange.8dcb6a3f.png",Qx="./assets/wool_colored_pink.bbe7586a.png",$x="./assets/wool_colored_purple.1c442de3.png",ew="./assets/wool_colored_red.641fe2c4.png",tw="./assets/wool_colored_silver.2839b29b.png",nw="./assets/wool_colored_white.2ff22680.png",iw="./assets/wool_colored_yellow.aadd3635.png",R={test1:Eg,test2:Tg,test3:Ag,test4:Pg,test5:Lg,test6:Cg,anvil_base:Rg,anvil_top_damaged_0:kg,anvil_top_damaged_1:Ig,anvil_top_damaged_2:Og,atlas:Dg,beacon:Fg,bed_feet_end:Ng,bed_feet_side:zg,bed_feet_top:Bg,bed_head_end:Ug,bed_head_side:Hg,bed_head_top:Gg,bedrock:Vg,bookshelf:Wg,brewing_stand:jg,brewing_stand_base:qg,brick:Xg,cactus_bottom:Yg,cactus_side:Zg,cactus_top:Jg,cake_bottom:Kg,cake_inner:Qg,cake_side:$g,cake_top:e0,carrots_stage_0:t0,carrots_stage_1:n0,carrots_stage_2:i0,carrots_stage_3:s0,cauldron_bottom:r0,cauldron_inner:a0,cauldron_side:o0,cauldron_top:l0,clay:c0,coal_block:h0,coal_ore:u0,cobblestone:d0,cobblestone_mossy:f0,cocoa_stage_0:p0,cocoa_stage_1:m0,cocoa_stage_2:g0,command_block:_0,comparator_off:y0,comparator_on:b0,crafting_table_front:v0,crafting_table_side:x0,crafting_table_top:w0,daylight_detector_side:M0,daylight_detector_top:S0,deadbush:E0,destroy_stage_0:T0,destroy_stage_1:A0,destroy_stage_2:P0,destroy_stage_3:L0,destroy_stage_4:C0,destroy_stage_5:R0,destroy_stage_6:k0,destroy_stage_7:I0,destroy_stage_8:O0,destroy_stage_9:D0,diamond_block:F0,diamond_ore:N0,dirt:z0,dirt_podzol_side:B0,dirt_podzol_top:U0,dispenser_front_horizontal:H0,dispenser_front_vertical:G0,door_iron_lower:V0,door_iron_upper:W0,door_wood_lower:j0,door_wood_upper:q0,double_plant_fern_bottom:X0,double_plant_fern_top:Y0,double_plant_grass_bottom:Z0,double_plant_grass_top:J0,double_plant_paeonia_bottom:K0,double_plant_paeonia_top:Q0,double_plant_rose_bottom:$0,double_plant_rose_top:e_,double_plant_sunflower_back:t_,double_plant_sunflower_bottom:n_,double_plant_sunflower_front:i_,double_plant_sunflower_top:s_,double_plant_syringa_bottom:r_,double_plant_syringa_top:a_,dragon_egg:o_,dropper_front_horizontal:l_,dropper_front_vertical:c_,emerald_block:h_,emerald_ore:u_,enchanting_table_bottom:d_,enchanting_table_side:f_,enchanting_table_top:p_,end_stone:m_,endframe_eye:g_,endframe_side:__,endframe_top:y_,farmland_dry:b_,farmland_wet:v_,fern:x_,fire_layer_0:w_,fire_layer_1:M_,flower_allium:S_,flower_blue_orchid:E_,flower_dandelion:T_,flower_houstonia:A_,flower_oxeye_daisy:P_,flower_paeonia:L_,flower_pot:C_,flower_rose:R_,flower_tulip_orange:k_,flower_tulip_pink:I_,flower_tulip_red:O_,flower_tulip_white:D_,furnace_front_off:F_,furnace_front_on:N_,furnace_side:z_,furnace_top:B_,glass:U_,glass_black:H_,glass_blue:G_,glass_brown:V_,glass_cyan:W_,glass_gray:j_,glass_green:q_,glass_light_blue:X_,glass_lime:Y_,glass_magenta:Z_,glass_orange:J_,glass_pane_top:K_,glass_pane_top_black:Q_,glass_pane_top_blue:$_,glass_pane_top_brown:ey,glass_pane_top_cyan:ty,glass_pane_top_gray:ny,glass_pane_top_green:iy,glass_pane_top_light_blue:sy,glass_pane_top_lime:ry,glass_pane_top_magenta:ay,glass_pane_top_orange:oy,glass_pane_top_pink:ly,glass_pane_top_purple:cy,glass_pane_top_red:hy,glass_pane_top_silver:uy,glass_pane_top_white:dy,glass_pane_top_yellow:fy,glass_pink:py,glass_purple:my,glass_red:gy,glass_silver:_y,glass_white:yy,glass_yellow:by,glowstone:vy,gold_block:xy,gold_ore:wy,grass_side:My,grass_side_overlay:Sy,grass_side_snowed:Ey,grass_top:Ty,grass_top_green:Ay,gravel:Py,hardened_clay:Ly,hardened_clay_stained_black:Cy,hardened_clay_stained_blue:Ry,hardened_clay_stained_brown:ky,hardened_clay_stained_cyan:Iy,hardened_clay_stained_gray:Oy,hardened_clay_stained_green:Dy,hardened_clay_stained_light_blue:Fy,hardened_clay_stained_lime:Ny,hardened_clay_stained_magenta:zy,hardened_clay_stained_orange:By,hardened_clay_stained_pink:Uy,hardened_clay_stained_purple:Hy,hardened_clay_stained_red:Gy,hardened_clay_stained_silver:Vy,hardened_clay_stained_white:Wy,hardened_clay_stained_yellow:jy,hay_block_side:qy,hay_block_top:Xy,hopper_inside:Yy,hopper_outside:Zy,hopper_top:Jy,ice:Ky,ice_packed:Qy,iron_bars:$y,iron_block:eb,iron_ore:tb,itemframe_background:nb,jukebox_side:ib,jukebox_top:sb,ladder:rb,lapis_block:ab,lapis_ore:ob,lava_flow:lb,lava_still:cb,leaves_acacia:hb,leaves_acacia_opaque:ub,leaves_big_oak:db,leaves_big_oak_opaque:fb,leaves_birch:pb,leaves_birch_opaque:mb,leaves_jungle:gb,leaves_jungle_opaque:_b,leaves_oak:yb,leaves_oak_opaque:bb,leaves_spruce:vb,leaves_spruce_opaque:xb,lever:wb,log_acacia:Mb,log_acacia_top:Sb,log_big_oak:Eb,log_big_oak_top:Tb,log_birch:Ab,log_birch_top:Pb,log_jungle:Lb,log_jungle_top:Cb,log_oak:Rb,log_oak_top:kb,log_spruce:Ib,log_spruce_top:Ob,melon_side:Db,melon_stem_connected:Fb,melon_stem_disconnected:Nb,melon_top:zb,mob_spawner:Bb,mushroom_block_inside:Ub,mushroom_block_skin_brown:Hb,mushroom_block_skin_red:Gb,mushroom_block_skin_stem:Vb,mushroom_brown:Wb,mushroom_red:jb,mycelium_side:qb,mycelium_top:Xb,nether_brick:Yb,nether_wart_stage_0:Zb,nether_wart_stage_1:Jb,nether_wart_stage_2:Kb,netherrack:Qb,noteblock:$b,obsidian:ev,piston_bottom:tv,piston_inner:nv,piston_side:iv,piston_top_normal:sv,piston_top_sticky:rv,planks_acacia:av,planks_big_oak:ov,planks_birch:lv,planks_jungle:cv,planks_oak:hv,planks_spruce:uv,portal:dv,potatoes_stage_0:fv,potatoes_stage_1:pv,potatoes_stage_2:mv,potatoes_stage_3:gv,pumpkin_face_off:_v,pumpkin_face_on:yv,pumpkin_side:bv,pumpkin_stem_connected:vv,pumpkin_stem_disconnected:xv,pumpkin_top:wv,quartz_block_bottom:Mv,quartz_block_chiseled:Sv,quartz_block_chiseled_top:Ev,quartz_block_lines:Tv,quartz_block_lines_top:Av,quartz_block_side:Pv,quartz_block_top:Lv,quartz_ore:Cv,rail_activator:Rv,rail_activator_powered:kv,rail_detector:Iv,rail_detector_powered:Ov,rail_golden:Dv,rail_golden_powered:Fv,rail_normal:Nv,rail_normal_turned:zv,red_sand:Bv,redstone_block:Uv,redstone_dust_cross:Hv,redstone_dust_cross_overlay:Gv,redstone_dust_line:Vv,redstone_dust_line_overlay:Wv,redstone_lamp_off:jv,redstone_lamp_on:qv,redstone_ore:Xv,redstone_torch_off:Yv,redstone_torch_on:Zv,reeds:Jv,repeater_off:Kv,repeater_on:Qv,sand:$v,sandstone_bottom:ex,sandstone_carved:tx,sandstone_normal:nx,sandstone_smooth:ix,sandstone_top:sx,sapling_acacia:rx,sapling_birch:ax,sapling_jungle:ox,sapling_oak:lx,sapling_roofed_oak:cx,sapling_spruce:hx,snow:ux,soul_sand:dx,sponge:fx,stone:px,stone_slab_side:mx,stone_slab_top:gx,stonebrick:_x,stonebrick_carved:yx,stonebrick_cracked:bx,stonebrick_mossy:vx,tallgrass:xx,tnt_bottom:wx,tnt_side:Mx,tnt_top:Sx,torch_on:Ex,trapdoor:Tx,trip_wire:Ax,trip_wire_source:Px,vine:Lx,water_flow:Cx,water_still:Rx,waterlily:kx,web:Ix,wheat_stage_0:Ox,wheat_stage_1:Dx,wheat_stage_2:Fx,wheat_stage_3:Nx,wheat_stage_4:zx,wheat_stage_5:Bx,wheat_stage_6:Ux,wheat_stage_7:Hx,wool_colored_black:Gx,wool_colored_blue:Vx,wool_colored_brown:Wx,wool_colored_cyan:jx,wool_colored_gray:qx,wool_colored_green:Xx,wool_colored_light_blue:Yx,wool_colored_lime:Zx,wool_colored_magenta:Jx,wool_colored_orange:Kx,wool_colored_pink:Qx,wool_colored_purple:$x,wool_colored_red:ew,wool_colored_silver:tw,wool_colored_white:nw,wool_colored_yellow:iw};const sw={grassdirt:{key:"grassdirt",images:[R.grass_side,R.grass_top,R.dirt],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[{},{color:11664236}],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},test:{key:"test",images:[R.test1,R.test2,R.test3,R.test4,R.test5,R.test6],imageSet:[0,1,2,3,4,5],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},grass:{key:"grass",images:[R.grass_top],imageSet:[0,0,0,0,0,0],materialParameters:{color:11664236},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},dirt:{key:"dirt",images:[R.dirt],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},dirt_podzol:{key:"dirt_podzol",images:[R.dirt_podzol_side,R.dirt_podzol_top,R.dirt],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},redstone_block:{key:"redstone_block",images:[R.redstone_block],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},diamond_block:{key:"diamond_block",images:[R.diamond_block],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},cobblestone:{key:"cobblestone",images:[R.cobblestone],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},cobblestone_mossy:{key:"cobblestone_mossy",images:[R.cobblestone_mossy],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stone:{key:"stone",images:[R.stone],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stone_slab:{key:"stone_slab",images:[R.stone_slab_side,R.stone_slab_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stonebrick:{key:"stonebrick",images:[R.stonebrick],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stonebrick_carved:{key:"stonebrick_carved",images:[R.stonebrick_carved],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stonebrick_cracked:{key:"stonebrick_cracked",images:[R.stonebrick_cracked],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},stonebrick_mossy:{key:"stonebrick_mossy",images:[R.stonebrick_mossy],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},brick:{key:"brick",images:[R.brick],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},planks_birch:{key:"planks_birch",images:[R.planks_birch],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},planks_acacia:{key:"planks_acacia",images:[R.planks_acacia],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},planks_jungle:{key:"planks_jungle",images:[R.planks_jungle],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},planks_oak:{key:"planks_oak",images:[R.planks_oak],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},planks_spruce:{key:"planks_spruce",images:[R.planks_spruce],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},log_acacia:{key:"log_acacia",images:[R.log_acacia,R.log_acacia_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_acacia:{key:"leaves_acacia",images:[R.leaves_acacia],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884,transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_acacia_opaque:{key:"leaves_acacia_opaque",images:[R.leaves_acacia_opaque],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},log_birch:{key:"log_birch",images:[R.log_birch,R.log_birch_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_birch:{key:"leaves_birch",images:[R.leaves_birch],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884,transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_birch_opaque:{key:"leaves_birch_opaque",images:[R.leaves_birch_opaque],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},log_jungle:{key:"log_jungle",images:[R.log_jungle,R.log_jungle_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_jungle:{key:"leaves_jungle",images:[R.leaves_jungle],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884,transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_jungle_opaque:{key:"leaves_jungle_opaque",images:[R.leaves_jungle_opaque],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},log_oak:{key:"log_oak",images:[R.log_oak,R.log_oak_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_oak:{key:"leaves_oak",images:[R.leaves_oak],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884,transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_oak_opaque:{key:"leaves_oak_opaque",images:[R.leaves_oak_opaque],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},log_spruce:{key:"log_spruce",images:[R.log_spruce,R.log_spruce_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_spruce:{key:"leaves_spruce",images:[R.leaves_spruce],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884,transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},leaves_spruce_opaque:{key:"leaves_spruce_opaque",images:[R.leaves_spruce_opaque],imageSet:[0,0,0,0,0,0],materialParameters:{color:9025884},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass:{key:"glass",images:[R.glass],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_black:{key:"glass_black",images:[R.glass_black],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_blue:{key:"glass_blue",images:[R.glass_blue],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_brown:{key:"glass_brown",images:[R.glass_brown],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_cyan:{key:"glass_cyan",images:[R.glass_cyan],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_gray:{key:"glass_gray",images:[R.glass_gray],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_green:{key:"glass_green",images:[R.glass_green],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_light_blue:{key:"glass_light_blue",images:[R.glass_light_blue],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_lime:{key:"glass_lime",images:[R.glass_lime],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_magenta:{key:"glass_magenta",images:[R.glass_magenta],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_orange:{key:"glass_orange",images:[R.glass_orange],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_pink:{key:"glass_pink",images:[R.glass_pink],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_purple:{key:"glass_purple",images:[R.glass_purple],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_red:{key:"glass_red",images:[R.glass_red],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_silver:{key:"glass_silver",images:[R.glass_silver],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_white:{key:"glass_white",images:[R.glass_white],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glass_yellow:{key:"glass_yellow",images:[R.glass_yellow],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},glowstone:{key:"glowstone",images:[R.glowstone],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},gold_block:{key:"gold_block",images:[R.gold_block],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},gold_ore:{key:"gold_ore",images:[R.gold_ore],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},clay:{key:"clay",images:[R.clay],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay:{key:"hardened_clay",images:[R.hardened_clay],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_black:{key:"hardened_clay_stained_black",images:[R.hardened_clay_stained_black],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_blue:{key:"hardened_clay_stained_blue",images:[R.hardened_clay_stained_blue],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_brown:{key:"hardened_clay_stained_brown",images:[R.hardened_clay_stained_brown],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_cyan:{key:"hardened_clay_stained_cyan",images:[R.hardened_clay_stained_cyan],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_gray:{key:"hardened_clay_stained_gray",images:[R.hardened_clay_stained_gray],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_green:{key:"hardened_clay_stained_green",images:[R.hardened_clay_stained_green],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_light_blue:{key:"hardened_clay_stained_light_blue",images:[R.hardened_clay_stained_light_blue],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_lime:{key:"hardened_clay_stained_lime",images:[R.hardened_clay_stained_lime],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_magenta:{key:"hardened_clay_stained_magenta",images:[R.hardened_clay_stained_magenta],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_orange:{key:"hardened_clay_stained_orange",images:[R.hardened_clay_stained_orange],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_pink:{key:"hardened_clay_stained_pink",images:[R.hardened_clay_stained_pink],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_purple:{key:"hardened_clay_stained_purple",images:[R.hardened_clay_stained_purple],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_red:{key:"hardened_clay_stained_red",images:[R.hardened_clay_stained_red],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_silver:{key:"hardened_clay_stained_silver",images:[R.hardened_clay_stained_silver],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_white:{key:"hardened_clay_stained_white",images:[R.hardened_clay_stained_white],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},hardened_clay_stained_yellow:{key:"hardened_clay_stained_yellow",images:[R.hardened_clay_stained_yellow],imageSet:[0,0,0,0,0,0],materialParameters:{transparent:!0},materialParametersForOneList:[],cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},melon:{key:"melon",images:[R.melon_side,R.melon_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},pumpkin_face_off:{key:"pumpkin_face_off",images:[R.pumpkin_face_off,R.pumpkin_side,R.pumpkin_top],imageSet:[0,1,2,2,1,1],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},pumpkin_face_on:{key:"pumpkin_face_on",images:[R.pumpkin_face_on,R.pumpkin_side,R.pumpkin_top],imageSet:[0,1,2,2,1,1],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},test_half:{key:"test_half",images:[""],imageSet:[0,0,0,0,0,0],materialParameters:{color:16777215,transparent:!0,opacity:.8},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},stone_slab_half:{key:"stone_slab_half",images:[R.stone_slab_side,R.stone_slab_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},brick_half:{key:"brick_half",images:[R.brick],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},planks_birch_half:{key:"planks_birch_half",images:[R.planks_birch],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},planks_acacia_half:{key:"planks_acacia_half",images:[R.planks_acacia],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},planks_jungle_half:{key:"planks_jungle_half",images:[R.planks_jungle],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},planks_oak_half:{key:"planks_oak_half",images:[R.planks_oak],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},planks_spruce_half:{key:"planks_spruce_half",images:[R.planks_spruce],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.HalfCube}},cobblestone_stairs:{key:"cobblestone_stairs",images:[R.cobblestone],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},cobblestone_mossy_stairs:{key:"cobblestone_mossy_stairs",images:[R.cobblestone_mossy],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},stone_stairs:{key:"stone_stairs",images:[R.stone],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},stone_slab_stairs:{key:"stone_slab_stairs",images:[R.stone_slab_side,R.stone_slab_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},brick_stairs:{key:"brick_stairs",images:[R.brick],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},planks_birch_stairs:{key:"planks_birch_stairs",images:[R.planks_birch],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},planks_acacia_stairs:{key:"planks_acacia_stairs",images:[R.planks_acacia],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},planks_jungle_stairs:{key:"planks_jungle_stairs",images:[R.planks_jungle],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},planks_oak_stairs:{key:"planks_oak_stairs",images:[R.planks_oak],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},planks_spruce_stairs:{key:"planks_spruce_stairs",images:[R.planks_spruce],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.StairsCube}},hay_block:{key:"hay_block",images:[R.hay_block_side,R.hay_block_top],imageSet:[0,0,1,1,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},sandstone_normal:{key:"sandstone_normal",images:[R.sandstone_normal,R.sandstone_top,R.sandstone_bottom],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},sandstone_smooth:{key:"sandstone_smooth",images:[R.sandstone_smooth,R.sandstone_top,R.sandstone_bottom],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},sandstone_carved:{key:"sandstone_carved",images:[R.sandstone_carved,R.sandstone_top,R.sandstone_bottom],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!0,y:!0,z:!0}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},tnt:{key:"tnt",images:[R.tnt_side,R.tnt_top,R.tnt_bottom],imageSet:[0,0,1,2,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_white:{key:"wool_colored_white",images:[R.wool_colored_white],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_black:{key:"wool_colored_black",images:[R.wool_colored_black],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_blue:{key:"wool_colored_blue",images:[R.wool_colored_blue],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_brown:{key:"wool_colored_brown",images:[R.wool_colored_brown],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_cyan:{key:"wool_colored_cyan",images:[R.wool_colored_cyan],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_gray:{key:"wool_colored_gray",images:[R.wool_colored_gray],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_green:{key:"wool_colored_green",images:[R.wool_colored_green],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_light_blue:{key:"wool_colored_light_blue",images:[R.wool_colored_light_blue],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_lime:{key:"wool_colored_lime",images:[R.wool_colored_lime],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_magenta:{key:"wool_colored_magenta",images:[R.wool_colored_magenta],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_orange:{key:"wool_colored_orange",images:[R.wool_colored_orange],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_pink:{key:"wool_colored_pink",images:[R.wool_colored_pink],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_purple:{key:"wool_colored_purple",images:[R.wool_colored_purple],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_red:{key:"wool_colored_red",images:[R.wool_colored_red],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_silver:{key:"wool_colored_silver",images:[R.wool_colored_silver],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},wool_colored_yellow:{key:"wool_colored_yellow",images:[R.wool_colored_yellow],imageSet:[0,0,0,0,0,0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!1,z:!1}},cubeAttributes:{isPenetrable:!1,isIndestructible:!1,geometryType:O.Cube}},flower_rose:{key:"flower_rose",images:[R.flower_rose],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_allium:{key:"flower_allium",images:[R.flower_allium],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_blue_orchid:{key:"flower_blue_orchid",images:[R.flower_blue_orchid],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_dandelion:{key:"flower_dandelion",images:[R.flower_dandelion],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_houstonia:{key:"flower_houstonia",images:[R.flower_houstonia],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_oxeye_daisy:{key:"flower_oxeye_daisy",images:[R.flower_oxeye_daisy],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_paeonia:{key:"flower_paeonia",images:[R.flower_paeonia],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_tulip_orange:{key:"flower_tulip_orange",images:[R.flower_tulip_orange],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_tulip_pink:{key:"flower_tulip_pink",images:[R.flower_tulip_pink],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_tulip_red:{key:"flower_tulip_red",images:[R.flower_tulip_red],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},flower_tulip_white:{key:"flower_tulip_white",images:[R.flower_tulip_white],imageSet:[0],materialParameters:{},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}},tallgrass:{key:"tallgrass",images:[R.tallgrass],imageSet:[0],materialParameters:{color:11664236},materialParametersForOneList:[],meshParameters:{rotateEnable:{x:!1,y:!0,z:!1}},cubeAttributes:{isPenetrable:!0,isIndestructible:!1,geometryType:O.Flower1Cube}}};var Oe=sw,qa={enableShadow:!1,enableDirectionalLight:!0},rw=[[new H(0,0),new H(.5,0),new H(1,0)],[new H(0,.5),new H(.5,.5),new H(1,.5)],[new H(0,1),new H(.5,1),new H(1,1)]];class Gt{constructor(e){if(Gt._instanceObj&&Gt._instanceObj[e.key])return Gt._instanceObj[e.key];this.cubeOptions=e,this._materials=[],this._materialsMap={},this._materialsHalfMap={},this._geometry=void 0,this._geometryMap={},this._cubeSize=1,this.buildMaterials(),this.buildGeometry(),Gt._instanceObj={[e.key]:this}}buildGeometry(){if(this._geometryMap&&(this._geometry=this._geometryMap[this.cubeOptions.cubeAttributes.geometryType]),this._geometry)return;let e;this.cubeOptions.cubeAttributes!==void 0&&this.cubeOptions.cubeAttributes.geometryType!==void 0&&(e=this.cubeOptions.cubeAttributes.geometryType);let n;const i=rw,s=this._cubeSize,r=s/Math.sqrt(2);switch(e){case O.Cube:n=new lr(this._cubeSize,this._cubeSize,this._cubeSize);break;case O.HalfCube:n=new lr(this._cubeSize,this._cubeSize/2,this._cubeSize);break;case O.StairsCube:n=new mt,n.vertices=[new b(s/2,-s/2,s/2),new b(s/2,-s/2,-s/2),new b(-s/2,-s/2,-s/2),new b(-s/2,-s/2,s/2),new b(s/2,0,s/2),new b(s/2,0,-s/2),new b(0,0,-s/2),new b(0,0,s/2),new b(0,s/2,s/2),new b(0,s/2,-s/2),new b(-s/2,s/2,-s/2),new b(-s/2,s/2,s/2)],n.faces=[new Le(0,2,1),new Le(0,3,2),new Le(0,1,5),new Le(0,5,4),new Le(7,6,9),new Le(7,9,8),new Le(4,5,6),new Le(4,6,7),new Le(8,9,10),new Le(8,10,11),new Le(2,3,11),new Le(2,11,10),new Le(7,8,11),new Le(7,11,3),new Le(7,3,0),new Le(7,0,4),new Le(6,10,9),new Le(6,2,10),new Le(6,1,2),new Le(6,5,1)],n.faceVertexUvs[0][0]=[i[0][0],i[2][2],i[0][2]],n.faceVertexUvs[0][1]=[i[0][0],i[2][0],i[2][2]],n.faceVertexUvs[0][2]=[i[0][0],i[0][2],i[1][2]],n.faceVertexUvs[0][3]=[i[0][0],i[1][2],i[1][0]],n.faceVertexUvs[0][4]=n.faceVertexUvs[0][2],n.faceVertexUvs[0][5]=n.faceVertexUvs[0][3],n.faceVertexUvs[0][6]=n.faceVertexUvs[0][2],n.faceVertexUvs[0][7]=n.faceVertexUvs[0][3],n.faceVertexUvs[0][8]=n.faceVertexUvs[0][2],n.faceVertexUvs[0][9]=n.faceVertexUvs[0][3],n.faceVertexUvs[0][10]=[i[0][0],i[0][2],i[2][2]],n.faceVertexUvs[0][11]=[i[0][0],i[2][2],i[2][0]],n.faceVertexUvs[0][12]=[i[1][1],i[2][1],i[2][0]],n.faceVertexUvs[0][13]=[i[1][1],i[2][0],i[0][0]],n.faceVertexUvs[0][14]=[i[1][1],i[0][0],i[0][2]],n.faceVertexUvs[0][15]=[i[1][1],i[0][2],i[1][2]],n.faceVertexUvs[0][16]=[i[1][1],i[2][0],i[2][1]],n.faceVertexUvs[0][17]=[i[1][1],i[0][0],i[2][0]],n.faceVertexUvs[0][18]=[i[1][1],i[0][2],i[0][0]],n.faceVertexUvs[0][19]=[i[1][1],i[1][2],i[0][2]],n.computeFaceNormals(),this._geometry=n;break;case O.Flower1Cube:n=new mt,n.vertices=[new b(r/2,-s/2,r/2),new b(r/2,-s/2,-r/2),new b(-r/2,-s/2,-r/2),new b(-r/2,-s/2,r/2),new b(r/2,s/2,r/2),new b(r/2,s/2,-r/2),new b(-r/2,s/2,-r/2),new b(-r/2,s/2,r/2),new b(s/2,-s/2,s/2),new b(s/2,-s/2,-s/2),new b(-s/2,-s/2,-s/2),new b(-s/2,-s/2,s/2),new b(s/2,s/2,s/2),new b(s/2,s/2,-s/2),new b(-s/2,s/2,-s/2),new b(-s/2,s/2,s/2)],n.faces=[new Le(0,2,6),new Le(0,6,4),new Le(3,1,5),new Le(3,5,7),new Le(8,11,10),new Le(8,10,9),new Le(8,15,11),new Le(8,12,15),new Le(8,9,13),new Le(8,13,12),new Le(14,12,13),new Le(14,15,12),new Le(14,13,9),new Le(14,9,10),new Le(14,11,15),new Le(14,10,11)];for(let a=0;a<n.faces.length;a++)a<4?n.faces[a].materialIndex=0:n.faces[a].materialIndex=1;n.faceVertexUvs[0][0]=[i[0][0],i[0][2],i[2][2]],n.faceVertexUvs[0][1]=[i[0][0],i[2][2],i[2][0]],n.faceVertexUvs[0][2]=n.faceVertexUvs[0][0],n.faceVertexUvs[0][3]=n.faceVertexUvs[0][1];for(let a=4;a<16;a++)n.faceVertexUvs[0][a]=[new H,new H,new H];n.computeFaceNormals();break;default:throw"unknow geometryType"}this._geometry=n,this._geometryMap[this.cubeOptions.cubeAttributes.geometryType]=this._geometry}buildMaterials(){if(this._materialsMap&&(this._materials=this._materialsMap[this.cubeOptions.key]),this._materials&&this._materials.length!==0)return;this._materials=[];let e=new pr,n=[];for(let r in this.cubeOptions.images){let a=this.cubeOptions.images[r];if(a===""||a===void 0)n.push(void 0);else{let o=e.load(a);o.generateMipmaps=!0,o.minFilter=ao,o.magFilter=rt,n.push(o)}}let i=[];for(let r in n){let a=n[r];i.push(new Tn({map:a,fog:!0,...this.cubeOptions.materialParameters?this.cubeOptions.materialParameters:{},...this.cubeOptions.materialParametersForOneList&&this.cubeOptions.materialParametersForOneList[r]?this.cubeOptions.materialParametersForOneList[r]:{}}))}let s=this.cubeOptions.cubeAttributes!==void 0&&this.cubeOptions.cubeAttributes.geometryType;for(let r in this.cubeOptions.imageSet){let a=this.cubeOptions.imageSet[r],o=i[a];switch(s){case O.HalfCube:if("0145".indexOf(r)>=0){if(this._materialsHalfMap||(this._materialsHalfMap={}),this._materialsHalfMap[this.cubeOptions.key])o=this._materialsHalfMap[this.cubeOptions.key];else if(o.map){let l=o.clone();l.map=o.map.clone();let c=e.load(this.cubeOptions.images[this.cubeOptions.imageSet[r]]);c.generateMipmaps=!0,c.minFilter=ao,c.magFilter=rt,c.wrapS=c.wrapT=$s,c.repeat.set(1,.5),l.map=c,o=l,this._materialsHalfMap[this.cubeOptions.key]=o}}break;case O.Flower1Cube:Number(r)===0?(o.transparent=!0,o.depthWrite=!1,o.side=Ti):(o.transparent=!0,o.opacity=0);break}this._materials.push(o)}s===O.Flower1Cube&&this._materials.length<=1&&this._materials.push(new wn({transparent:!0,opacity:0})),this._materialsMap[this.cubeOptions.key]=this._materials}buildCube(e,n,i,s,r,a,o){var h,f,u,p,_,y;let l={x:e,y:n,z:i},c={rotateX:r,rotateY:a,rotateZ:o};s&&(typeof s=="string"&&(s=Oe[s]),this.cubeOptions=s,this.buildGeometry(),this.buildMaterials()),s=s,l.x=l.x||0,l.y=l.y||0,l.z=l.z||0;let d=new $e(this._geometry,this._materials);return d.receiveShadow=d.castShadow=qa.enableShadow,d.position.x=l.x,d.position.y=l.y,d.position.z=l.z,d.userData={saveInfo:[e,n,i,this.cubeOptions.key,r,a,o],fullCubePosition:{x:d.position.x,y:d.position.y,z:d.position.z},cubeTypeKey:this.cubeOptions.key,cubeAttributes:this.cubeOptions.cubeAttributes},c.rotateX&&((f=(h=s==null?void 0:s.meshParameters)==null?void 0:h.rotateEnable)==null?void 0:f.x)&&d.rotateX(c.rotateX*Math.PI/180),c.rotateY&&((p=(u=s==null?void 0:s.meshParameters)==null?void 0:u.rotateEnable)==null?void 0:p.y)&&d.rotateY(c.rotateY*Math.PI/180),c.rotateZ&&((y=(_=s==null?void 0:s.meshParameters)==null?void 0:_.rotateEnable)==null?void 0:y.z)&&d.rotateZ(c.rotateZ*Math.PI/180),d.name=this.cubeOptions.key+"("+l.x+","+l.y+","+l.z+")",d}}function aw(t){if(!t)throw"invalid elementId";let e=document.getElementById(t);return e||(e=document.createElement("div"),e.id="canvas-wrapper",e.style.height="100%",e.style.width="100%",e.style.cursor="pointer",document.body.appendChild(e)),e}function ow(){let t=new $l,e=8900331;return t.name="SCENE",t.fog=new Ga(e,.03),function(i){if(i=i||1,i===1){t.background=new de(e);return}let s=new fr().load([R.test1,R.test2,R.test3,R.test4,R.test5,R.test6]);if(i===2)t.background=s;else{let r=Ot.cube;r.uniforms.tCube.value=s;let a=new dt({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:r.uniforms,depthWrite:!1,side:nt}),o=new $e(new lr(1e6,1e6,1e6),a);t.add(o)}}(1),t}function lw(){let t=new Ra;return t.castShadow=!1,t.color=new de().setHex(16777215),t.intensity=fc(),t}function fc(t,e,n){return Math.min(Math.max(n||0,t||0),e||0)}function cw(){let t=new Ca;return t.castShadow=qa.enableShadow,t.color=new de().setHex(16777215),t.intensity=pc(),t.shadow.radius=512,t.position.x=100,t.position.y=100,t.position.z=100,t}function pc(t,e,n){return Math.min(Math.max(n||0,t||0),e||0)/4}function hw(){let t=new it;return t.name="CAMERA",t.fov=45,t.near=.1,t.far=200,t.position.x=10,t.position.y=21,t.position.z=11,t.lookAt(new b(0,22,2)),t}function uw(){let t=new _s;return t.shadowMap.enabled=qa.enableShadow,t.setClearColor(16777215,1),t}var dw="./assets/bgmPart.9a4f6295.ogg",fw={bgmPart:dw};function pw(){let t=0,e=[fw.bgmPart];const n=new Audio;n.volume=.5,n.preload="auto",n.controls=!0,n.autoplay=!0,n.hidden=!0,n.style.display="none",n.style.position="fixed",n.style.top="0",n.style.right="0",n.style.zIndex="101",n.loop=!1,n.src=e[t],n.addEventListener("ended",i,!1),document.addEventListener("click",s,!1),document.body.appendChild(n);function i(){t++;let r=Math.random()*5e4+1e4;t>=e.length&&(t=0),setTimeout(()=>{n.src=e[t],n.play()},r)}function s(){n.play().then(()=>{document.removeEventListener("click",s,!1)})}return n}var ps=function(t,e){e===void 0&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),e===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=t,this.domElement=e,this.enabled=!0,this.target=new b,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!0,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:gn.ROTATE,MIDDLE:gn.DOLLY,RIGHT:gn.PAN},this.touches={ONE:_n.ROTATE,TWO:_n.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),o=a.NONE},this.update=function(){var S=new b,J=new ht().setFromUnitVectors(t.up,new b(0,1,0)),he=J.clone().invert(),te=new b,pe=new ht,Fe=2*Math.PI;return function(){var Ri=n.object.position;S.copy(Ri).sub(n.target),S.applyQuaternion(J),c.setFromVector3(S),n.autoRotate&&o===a.NONE&&K(P()),n.enableDamping?(c.theta+=d.theta*n.dampingFactor,c.phi+=d.phi*n.dampingFactor):(c.theta+=d.theta,c.phi+=d.phi);var Lt=n.minAzimuthAngle,wt=n.maxAzimuthAngle;return isFinite(Lt)&&isFinite(wt)&&(Lt<-Math.PI?Lt+=Fe:Lt>Math.PI&&(Lt-=Fe),wt<-Math.PI?wt+=Fe:wt>Math.PI&&(wt-=Fe),Lt<=wt?c.theta=Math.max(Lt,Math.min(wt,c.theta)):c.theta=c.theta>(Lt+wt)/2?Math.max(Lt,c.theta):Math.min(wt,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),S.setFromSpherical(c),S.applyQuaternion(he),Ri.copy(n.target).add(S),n.object.lookAt(n.target),n.enableDamping===!0?(d.theta*=1-n.dampingFactor,d.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(d.set(0,0,0),f.set(0,0,0)),h=1,u||te.distanceToSquared(n.object.position)>l||8*(1-pe.dot(n.object.quaternion))>l?(n.dispatchEvent(i),te.copy(n.object.position),pe.copy(n.object.quaternion),u=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",$,!1),n.domElement.removeEventListener("pointerdown",ee,!1),n.domElement.removeEventListener("wheel",q,!1),n.domElement.removeEventListener("touchstart",Z,!1),n.domElement.removeEventListener("touchend",ue,!1),n.domElement.removeEventListener("touchmove",ie,!1),n.domElement.ownerDocument.removeEventListener("pointermove",fe,!1),n.domElement.ownerDocument.removeEventListener("pointerup",re,!1),n.domElement.removeEventListener("keydown",L,!1)};var n=this,i={type:"change"},s={type:"start"},r={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},o=a.NONE,l=1e-6,c=new Cl,d=new Cl,h=1,f=new b,u=!1,p=new H,_=new H,y=new H,g=new H,m=new H,E=new H,A=new H,T=new H,v=new H;function P(){return 2*Math.PI/60/60*n.autoRotateSpeed}function U(){return Math.pow(.95,n.zoomSpeed)}function K(S){d.theta-=S}function le(S){d.phi-=S}var C=function(){var S=new b;return function(he,te){S.setFromMatrixColumn(te,0),S.multiplyScalar(-he),f.add(S)}}(),B=function(){var S=new b;return function(he,te){n.screenSpacePanning===!0?S.setFromMatrixColumn(te,1):(S.setFromMatrixColumn(te,0),S.crossVectors(n.object.up,S)),S.multiplyScalar(he),f.add(S)}}(),D=function(){var S=new b;return function(he,te){var pe=n.domElement;if(n.object.isPerspectiveCamera){var Fe=n.object.position;S.copy(Fe).sub(n.target);var Qe=S.length();Qe*=Math.tan(n.object.fov/2*Math.PI/180),C(2*he*Qe/pe.clientHeight,n.object.matrix),B(2*te*Qe/pe.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(C(he*(n.object.right-n.object.left)/n.object.zoom/pe.clientWidth,n.object.matrix),B(te*(n.object.top-n.object.bottom)/n.object.zoom/pe.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function z(S){n.object.isPerspectiveCamera?h/=S:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*S)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(S){n.object.isPerspectiveCamera?h*=S:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/S)),n.object.updateProjectionMatrix(),u=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(S){p.set(S.clientX,S.clientY)}function G(S){A.set(S.clientX,S.clientY)}function j(S){g.set(S.clientX,S.clientY)}function se(S){_.set(S.clientX,S.clientY),y.subVectors(_,p).multiplyScalar(n.rotateSpeed);var J=n.domElement;K(2*Math.PI*y.x/J.clientHeight),le(2*Math.PI*y.y/J.clientHeight),p.copy(_),n.update()}function ce(S){T.set(S.clientX,S.clientY),v.subVectors(T,A),v.y>0?z(U()):v.y<0&&k(U()),A.copy(T),n.update()}function oe(S){m.set(S.clientX,S.clientY),E.subVectors(m,g).multiplyScalar(n.panSpeed),D(E.x,E.y),g.copy(m),n.update()}function be(S){S.deltaY<0?k(U()):S.deltaY>0&&z(U()),n.update()}function we(S){var J=!1;switch(S.keyCode){case n.keys.UP:D(0,n.keyPanSpeed),J=!0;break;case n.keys.BOTTOM:D(0,-n.keyPanSpeed),J=!0;break;case n.keys.LEFT:D(n.keyPanSpeed,0),J=!0;break;case n.keys.RIGHT:D(-n.keyPanSpeed,0),J=!0;break}J&&(S.preventDefault(),n.update())}function He(S){if(S.touches.length==1)p.set(S.touches[0].pageX,S.touches[0].pageY);else{var J=.5*(S.touches[0].pageX+S.touches[1].pageX),he=.5*(S.touches[0].pageY+S.touches[1].pageY);p.set(J,he)}}function W(S){if(S.touches.length==1)g.set(S.touches[0].pageX,S.touches[0].pageY);else{var J=.5*(S.touches[0].pageX+S.touches[1].pageX),he=.5*(S.touches[0].pageY+S.touches[1].pageY);g.set(J,he)}}function Ke(S){var J=S.touches[0].pageX-S.touches[1].pageX,he=S.touches[0].pageY-S.touches[1].pageY,te=Math.sqrt(J*J+he*he);A.set(0,te)}function ge(S){n.enableZoom&&Ke(S),n.enablePan&&W(S)}function Re(S){n.enableZoom&&Ke(S),n.enableRotate&&He(S)}function ve(S){if(S.touches.length==1)_.set(S.touches[0].pageX,S.touches[0].pageY);else{var J=.5*(S.touches[0].pageX+S.touches[1].pageX),he=.5*(S.touches[0].pageY+S.touches[1].pageY);_.set(J,he)}y.subVectors(_,p).multiplyScalar(n.rotateSpeed);var te=n.domElement;K(2*Math.PI*y.x/te.clientHeight),le(2*Math.PI*y.y/te.clientHeight),p.copy(_)}function De(S){if(S.touches.length==1)m.set(S.touches[0].pageX,S.touches[0].pageY);else{var J=.5*(S.touches[0].pageX+S.touches[1].pageX),he=.5*(S.touches[0].pageY+S.touches[1].pageY);m.set(J,he)}E.subVectors(m,g).multiplyScalar(n.panSpeed),D(E.x,E.y),g.copy(m)}function Se(S){var J=S.touches[0].pageX-S.touches[1].pageX,he=S.touches[0].pageY-S.touches[1].pageY,te=Math.sqrt(J*J+he*he);T.set(0,te),v.set(0,Math.pow(T.y/A.y,n.zoomSpeed)),z(v.y),A.copy(T)}function X(S){n.enableZoom&&Se(S),n.enablePan&&De(S)}function Q(S){n.enableZoom&&Se(S),n.enableRotate&&ve(S)}function ee(S){if(n.enabled!==!1)switch(S.pointerType){case"mouse":case"pen":M(S);break}}function fe(S){if(n.enabled!==!1)switch(S.pointerType){case"mouse":case"pen":x(S);break}}function re(S){switch(S.pointerType){case"mouse":case"pen":Y();break}}function M(S){S.preventDefault(),n.domElement.focus?n.domElement.focus():window.focus();var J;switch(S.button){case 0:J=n.mouseButtons.LEFT;break;case 1:J=n.mouseButtons.MIDDLE;break;case 2:J=n.mouseButtons.RIGHT;break;default:J=-1}switch(J){case gn.DOLLY:if(n.enableZoom===!1)return;G(S),o=a.DOLLY;break;case gn.ROTATE:if(S.ctrlKey||S.metaKey||S.shiftKey){if(n.enablePan===!1)return;j(S),o=a.PAN}else{if(n.enableRotate===!1)return;I(S),o=a.ROTATE}break;case gn.PAN:if(S.ctrlKey||S.metaKey||S.shiftKey){if(n.enableRotate===!1)return;I(S),o=a.ROTATE}else{if(n.enablePan===!1)return;j(S),o=a.PAN}break;default:o=a.NONE}o!==a.NONE&&(n.domElement.ownerDocument.addEventListener("pointermove",fe,!1),n.domElement.ownerDocument.addEventListener("pointerup",re,!1),n.dispatchEvent(s))}function x(S){if(n.enabled!==!1)switch(S.preventDefault(),o){case a.ROTATE:if(n.enableRotate===!1)return;se(S);break;case a.DOLLY:if(n.enableZoom===!1)return;ce(S);break;case a.PAN:if(n.enablePan===!1)return;oe(S);break}}function Y(S){n.domElement.ownerDocument.removeEventListener("pointermove",fe,!1),n.domElement.ownerDocument.removeEventListener("pointerup",re,!1),n.enabled!==!1&&(n.dispatchEvent(r),o=a.NONE)}function q(S){n.enabled===!1||n.enableZoom===!1||o!==a.NONE&&o!==a.ROTATE||(S.preventDefault(),S.stopPropagation(),n.dispatchEvent(s),be(S),n.dispatchEvent(r))}function L(S){n.enabled===!1||n.enableKeys===!1||n.enablePan===!1||we(S)}function Z(S){if(n.enabled!==!1){switch(S.preventDefault(),S.touches.length){case 1:switch(n.touches.ONE){case _n.ROTATE:if(n.enableRotate===!1)return;He(S),o=a.TOUCH_ROTATE;break;case _n.PAN:if(n.enablePan===!1)return;W(S),o=a.TOUCH_PAN;break;default:o=a.NONE}break;case 2:switch(n.touches.TWO){case _n.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ge(S),o=a.TOUCH_DOLLY_PAN;break;case _n.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Re(S),o=a.TOUCH_DOLLY_ROTATE;break;default:o=a.NONE}break;default:o=a.NONE}o!==a.NONE&&n.dispatchEvent(s)}}function ie(S){if(n.enabled!==!1)switch(S.preventDefault(),S.stopPropagation(),o){case a.TOUCH_ROTATE:if(n.enableRotate===!1)return;ve(S),n.update();break;case a.TOUCH_PAN:if(n.enablePan===!1)return;De(S),n.update();break;case a.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;X(S),n.update();break;case a.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Q(S),n.update();break;default:o=a.NONE}}function ue(S){n.enabled!==!1&&(n.dispatchEvent(r),o=a.NONE)}function $(S){n.enabled!==!1&&S.preventDefault()}n.domElement.addEventListener("contextmenu",$,!1),n.domElement.addEventListener("pointerdown",ee,!1),n.domElement.addEventListener("wheel",q,!1),n.domElement.addEventListener("touchstart",Z,!1),n.domElement.addEventListener("touchend",ue,!1),n.domElement.addEventListener("touchmove",ie,!1),n.domElement.addEventListener("keydown",L,!1),this.update()};ps.prototype=Object.create(Pt.prototype);ps.prototype.constructor=ps;var Oa=function(t,e){ps.call(this,t,e),this.screenSpacePanning=!1,this.mouseButtons.LEFT=gn.PAN,this.mouseButtons.RIGHT=gn.ROTATE,this.touches.ONE=_n.PAN,this.touches.TWO=_n.DOLLY_ROTATE};Oa.prototype=Object.create(Pt.prototype);Oa.prototype.constructor=Oa;class mw{constructor(e,n){this.camera=e,e.lookAt(10,40,10);const i=new ps(e,n);i.enableZoom=!1,i.enableRotate=!1,i.dampingFactor=1,i.enablePan=!1,i.autoRotate=!0,i.autoRotateSpeed=2,this.controls=i}initClickFunction(e){window.addEventListener("mousedown",n=>{let i=gw(n,e,this.camera);if(i.length>0){let s=i[0].object;console.log("\u70B9\u51FB\u7684\u5BF9\u8C61\uFF1A"+s.name)}},!1)}}function gw(t,e,n){let i=new Ut,s=new H;return s.x=t.clientX/window.innerWidth*2-1,s.y=-(t.clientY/window.innerHeight)*2+1,i.setFromCamera(s,n),i.intersectObjects(e)}var _r=function(t,e){e===void 0&&(console.warn('THREE.PointerLockControls: The second parameter "domElement" is now mandatory.'),e=document.body),this.domElement=e,this.isLocked=!1,this.minPolarAngle=0,this.maxPolarAngle=Math.PI;var n=this,i={type:"change"},s={type:"lock"},r={type:"unlock"},a=new Li(0,0,0,"YXZ"),o=Math.PI/2,l=new b;function c(f){if(n.isLocked!==!1){var u=f.movementX||f.mozMovementX||f.webkitMovementX||0,p=f.movementY||f.mozMovementY||f.webkitMovementY||0;a.setFromQuaternion(t.quaternion),a.y-=u*.002,a.x-=p*.002,a.x=Math.max(o-n.maxPolarAngle,Math.min(o-n.minPolarAngle,a.x)),t.quaternion.setFromEuler(a),n.dispatchEvent(i)}}function d(){n.domElement.ownerDocument.pointerLockElement===n.domElement?(n.dispatchEvent(s),n.isLocked=!0):(n.dispatchEvent(r),n.isLocked=!1)}function h(){console.error("THREE.PointerLockControls: Unable to use Pointer Lock API")}this.connect=function(){n.domElement.ownerDocument.addEventListener("mousemove",c,!1),n.domElement.ownerDocument.addEventListener("pointerlockchange",d,!1),n.domElement.ownerDocument.addEventListener("pointerlockerror",h,!1)},this.disconnect=function(){n.domElement.ownerDocument.removeEventListener("mousemove",c,!1),n.domElement.ownerDocument.removeEventListener("pointerlockchange",d,!1),n.domElement.ownerDocument.removeEventListener("pointerlockerror",h,!1)},this.dispose=function(){this.disconnect()},this.getObject=function(){return t},this.getDirection=function(){var f=new b(0,0,-1);return function(u){return u.copy(f).applyQuaternion(t.quaternion)}}(),this.moveForward=function(f){l.setFromMatrixColumn(t.matrix,0),l.crossVectors(t.up,l),t.position.addScaledVector(l,f)},this.moveRight=function(f){l.setFromMatrixColumn(t.matrix,0),t.position.addScaledVector(l,f)},this.lock=function(){this.domElement.requestPointerLock()},this.unlock=function(){n.domElement.ownerDocument.exitPointerLock()},this.connect()};_r.prototype=Object.create(Pt.prototype);_r.prototype.constructor=_r;class _w{constructor(e,n,i,s){this.previewCube=void 0,this.camera=e,this.domElement=n,this.objects=i,this.objectsImpenetrable=void 0,this.scene=s,this.currentCubeTypeIndex=0,this.checkRay={X0:[],X1:[],Z0:[],Z1:[],Y0:[],Y1:[]},this.sightRay=new Ut,this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.moveUp=!1,this.moveDown=!1,this.preRunning=void 0,this.isRunning=!1,this.canJump=!1,this.switchFly=void 0,this.canFly=!0,this.switchFlyKeyUped=!1,this.isFlying=!1,this.velocity=new b,this.direction=new b,this.worldOption={g:8},this.personOption={height:1.8,sightHeight:1.5,jumpHeight:1.3,speedWalk:5.7,speedRun:10,accelerateRateStart:.3,accelerateRateStop:.8,thickness:.6},this.initControl(),this.initMaskerForSightControl(),this.initAim(),this.initKeyboardFunction(),this.initMouseFunction(),this.selectObjectsImpenetrable()}update(e){e=e||.016,this.controls.isLocked||(this.moveForward=!1,this.moveBackward=!1,this.moveLeft=!1,this.moveRight=!1,this.moveUp=!1,this.moveDown=!1),this.updateCameraPosition(e),this.updatePreviewCube(e)}initControl(){this.controls=new _r(this.camera,this.domElement)}initMaskerForSightControl(){let e=document.createElement("div");e.style.position="absolute",e.style.zIndex="100",e.style.width="100%",e.style.height="100%",e.style.top="0",e.style.left="0",e.id="blocker",e.style.backgroundColor="rgba(0, 0, 0, 0.3)",document.body.append(e),e.addEventListener("click",()=>{this.controls.lock()},!1),this.controls.addEventListener("lock",function(){e.style.display="none"}),this.controls.addEventListener("unlock",function(){e.style.display="block"})}initAim(){let e=s=>{s.style.position="fixed",s.style.left="50%",s.style.top="50%",s.style.transform="translate(-50%,-50%)",s.style.zIndex="1",s.style.fontSize="100%",s.style.fontWeight="bold",s.style.textAlign="center",s.style.verticalAlign="middle",s.style.lineHeight="10px",s.style.fontFamily='"Times New Roman",serif',s.style.backgroundColor="#E0E0E0"},n=document.createElement("div");n.style.height="2px",n.style.width="20px",e(n),document.body.append(n);let i=document.createElement("div");i.style.height="20px",i.style.width="2px",e(i),document.body.append(i)}initKeyboardFunction(){let e=i=>{switch(i.keyCode){case 38:case 87:if(this.moveForward)break;this.preRunning?(this.isRunning=performance.now()-this.preRunning<=200,this.preRunning=performance.now()):this.preRunning=performance.now(),this.moveForward=!0;break;case 37:case 65:if(this.moveLeft)break;this.moveLeft=!0;break;case 40:case 83:if(this.moveBackward)break;this.moveBackward=!0;break;case 39:case 68:if(this.moveRight)break;this.moveRight=!0;break;case 32:if(!this.canJump&&this.switchFlyKeyUped&&(this.isFlying=this.canFly),this.canJump&&(this.velocity.y+=Math.sqrt(2*this.worldOption.g*7.74*this.personOption.jumpHeight)),this.canJump=!1,this.isFlying){if(this.switchFly?performance.now()-this.switchFly<=200&&(this.isFlying=!this.switchFlyKeyUped):this.switchFly=performance.now(),this.moveUp)break;this.moveUp=!0,this.switchFlyKeyUped=!1}this.switchFly=performance.now();break;case 16:if(this.moveDown)break;this.moveDown=!0;break}},n=i=>{switch(i.keyCode){case 38:case 87:this.isRunning=!1,this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 16:this.moveDown=!1;break;case 32:this.moveUp=!1,this.switchFlyKeyUped=!0;break}};document.addEventListener("keydown",e,!1),document.addEventListener("keyup",n,!1)}initMouseFunction(){let e=n=>{n?(this.currentCubeTypeIndex++,this.currentCubeTypeIndex===Object.keys(Oe).length&&(this.currentCubeTypeIndex=0)):(this.currentCubeTypeIndex===0&&(this.currentCubeTypeIndex=Object.keys(Oe).length),this.currentCubeTypeIndex--)};window.addEventListener("mousedown",n=>{this.sightRay.setFromCamera(new H(0,0),this.camera);let i=this.sightRay.intersectObjects(this.objects);if(i.length>0&&(console.log("\u70B9\u51FB\u5BF9\u8C61\u3010"+i[0].object.name+"\u3011",i[0]),i[0]&&i[0].distance<=10&&i[0].face&&i[0].face.normal&&i[0].object&&i[0].object.position)){if(n.button===0&&this.controls.isLocked){this.removeCube(i[0].object);return}if(n.button===2&&this.controls.isLocked){this.addCube(i[0]);return}}},!1),window.addEventListener("wheel",n=>{console.log("\u6ED1\u8F6E",n,this.currentCubeTypeIndex),n=n||window.event,n instanceof WheelEvent&&e(n.deltaY<0)})}updatePreviewCube(e){var n,i;if(!this.previewCube)this.previewCube=new Gt(Oe[Object.keys(Oe)[this.currentCubeTypeIndex]]).buildCube(),this.scene.add(this.previewCube);else{if(this.previewCube.geometryMap||(this.previewCube.geometryMap={}),this.previewCubeType!==Object.keys(Oe)[this.currentCubeTypeIndex])if(this.previewCubeType=Object.keys(Oe)[this.currentCubeTypeIndex],this.previewCube.geometryMap[Object.keys(Oe)[this.currentCubeTypeIndex]])this.previewCube.geometry=this.previewCube.geometryMap[Object.keys(Oe)[this.currentCubeTypeIndex]];else{let s=(i=(n=new Gt(Oe[Object.keys(Oe)[this.currentCubeTypeIndex]]))==null?void 0:n._geometry)==null?void 0:i.clone();s&&(s.scale(.01,.01,.01),this.previewCube.geometry=s,this.previewCube.geometryMap[Object.keys(Oe)[this.currentCubeTypeIndex]]=s)}this.previewCube.material=new Gt(Oe[Object.keys(Oe)[this.currentCubeTypeIndex]])._materials,this.previewCube.position.copy(this.camera.position),this.previewCubeRotation?this.previewCubeRotation.y!==void 0&&(this.previewCubeRotation.y+=Math.PI/180*60*e%Math.PI):this.previewCubeRotation={y:0},this.previewCube.rotation.copy(this.camera.rotation),this.previewCube.position.add(new b(0,-.065,-.2).applyAxisAngle(new b(0,0,1),this.camera.rotation.z).applyAxisAngle(new b(0,1,0),this.camera.rotation.y).applyAxisAngle(new b(1,0,0),this.camera.rotation.x)),this.previewCube.rotateY(Math.PI/4+(this.previewCubeRotation.y||0))}}updateCameraPosition(e){const n=new b;n.copy(this.controls.getObject().position);{this.direction.z=Number(this.moveForward)-Number(this.moveBackward),this.direction.x=Number(this.moveRight)-Number(this.moveLeft),this.direction.normalize();let i=this.isRunning?this.personOption.speedRun:this.personOption.speedWalk;if(this.moveForward||this.moveBackward){let l=this.velocity.z+this.direction.z*i*this.personOption.accelerateRateStart;this.velocity.z=Math.abs(l)<i?l:this.direction.z*i}else this.velocity.z=Math.abs(this.velocity.z)>1?this.velocity.z*this.personOption.accelerateRateStop:0;let s=this.controls.getObject().position.x;if(this.controls.moveRight(this.velocity.x*e),this.moveLeft||this.moveRight){let l=this.velocity.x+this.direction.x*i*this.personOption.accelerateRateStart;this.velocity.x=Math.abs(l)<i?l:this.direction.x*i}else this.velocity.x=Math.abs(this.velocity.x)>1?this.velocity.x*this.personOption.accelerateRateStop:0;let r=this.controls.getObject().position.z;this.controls.moveForward(this.velocity.z*e);const a=[-(this.personOption.sightHeight-.05),-(this.personOption.sightHeight-this.personOption.height/2),this.personOption.height-this.personOption.sightHeight-.05,-(this.personOption.sightHeight-.5),this.personOption.height-this.personOption.sightHeight-.5];let o=this.personOption.thickness/2;{let l,c;for(let u=0;u<10;u++){this.checkRay.Z0[u]===void 0&&this.checkRay.Z0.push(new Ut(new b,new b(0,0,-1),0,0)),this.checkRay.Z0[u].ray.origin.copy(n),this.checkRay.Z0[u].ray.origin.x=s,this.checkRay.Z0[u].ray.origin.x+=(u%2===0?1:-1)*o,this.checkRay.Z0[u].ray.origin.y+=a[Math.floor(u/2)];let p=this.checkRay.Z0[u].intersectObjects(this.objectsImpenetrable);p.length>0&&(c=p[0].point.z,l=Math.max(l===void 0?c:l,c))}let d,h;for(let u=0;u<10;u++){this.checkRay.Z1[u]===void 0&&this.checkRay.Z1.push(new Ut(new b,new b(0,0,1),0,0)),this.checkRay.Z1[u].ray.origin.copy(n),this.checkRay.Z1[u].ray.origin.x=s,this.checkRay.Z1[u].ray.origin.x+=(u%2===0?1:-1)*o,this.checkRay.Z1[u].ray.origin.y+=a[Math.floor(u/2)];let p=this.checkRay.Z1[u].intersectObjects(this.objectsImpenetrable);p.length>0&&(h=p[0].point.z,d=Math.min(d===void 0?h:d,h))}let f=this.controls.getObject().position.z;f=Math.min(d===void 0?f:d-this.personOption.thickness/2-.01,f),f=Math.max(l===void 0?f:l+this.personOption.thickness/2+.01,f),this.controls.getObject().position.z=f}{let l,c;for(let u=0;u<10;u++){this.checkRay.X0[u]===void 0&&this.checkRay.X0.push(new Ut(new b,new b(-1,0,0),0,0)),this.checkRay.X0[u].ray.origin.copy(n),this.checkRay.X0[u].ray.origin.z=r,this.checkRay.X0[u].ray.origin.z+=(u%2===0?1:-1)*o,this.checkRay.X0[u].ray.origin.y+=a[Math.floor(u/2)];let p=this.checkRay.X0[u].intersectObjects(this.objectsImpenetrable);p.length>0&&(c=p[0].point.x,l=Math.max(l===void 0?c:l,c))}let d,h;for(let u=0;u<10;u++){this.checkRay.X1[u]===void 0&&this.checkRay.X1.push(new Ut(new b,new b(1,0,0),0,0)),this.checkRay.X1[u].ray.origin.copy(n),this.checkRay.X1[u].ray.origin.z=r,this.checkRay.X1[u].ray.origin.z+=(u%2===0?1:-1)*o,this.checkRay.X1[u].ray.origin.y+=a[Math.floor(u/2)];let p=this.checkRay.X1[u].intersectObjects(this.objectsImpenetrable);p.length>0&&(h=p[0].point.x,d=Math.min(d===void 0?h:d,h))}let f=this.controls.getObject().position.x;f=Math.max(l===void 0?f:l+this.personOption.thickness/2+.01,f),f=Math.min(d===void 0?f:d-this.personOption.thickness/2-.01,f),this.controls.getObject().position.x=f}}{let i;if(this.isFlying){this.velocity.y=0,this.direction.y=Number(this.moveUp)-Number(this.moveDown),this.direction.normalize();let o=this.isRunning?this.personOption.speedRun:this.personOption.speedWalk;if(this.moveUp||this.moveDown){let c=this.velocity.y+this.direction.y*o*this.personOption.accelerateRateStart;Math.abs(c)<o?this.velocity.y=c:this.velocity.y=this.direction.y*o}else this.velocity.y=Math.abs(this.velocity.y)>1?this.velocity.y*this.personOption.accelerateRateStop:0;i=this.controls.getObject().position.y+this.velocity.y*e*2}let s;{for(let l=0;l<5;l++)this.checkRay.Y0[l]===void 0&&this.checkRay.Y0.push(new Ut(new b,new b(0,-1,0),0,0)),this.checkRay.Y0[l].ray.origin.copy(n);let o=this.personOption.thickness/2;this.checkRay.Y0[0].ray.origin.x+=o,this.checkRay.Y0[0].ray.origin.z-=o,this.checkRay.Y0[1].ray.origin.x+=o,this.checkRay.Y0[1].ray.origin.z+=o,this.checkRay.Y0[2].ray.origin.x-=o,this.checkRay.Y0[2].ray.origin.z+=o,this.checkRay.Y0[3].ray.origin.x-=o,this.checkRay.Y0[3].ray.origin.z-=o;for(let l=0;l<5;l++){let c=this.checkRay.Y0[l].intersectObjects(this.objectsImpenetrable);if(c.length>0){let d=c[0].point.y;s=Math.max(s===void 0?d:s,d)}}}let r;{for(let l=0;l<5;l++)this.checkRay.Y1[l]===void 0&&this.checkRay.Y1.push(new Ut(new b,new b(0,1,0),0,0)),this.checkRay.Y1[l].ray.origin.copy(n);let o=this.personOption.thickness/2-.001;this.checkRay.Y1[0].ray.origin.x+=o,this.checkRay.Y1[0].ray.origin.z-=o,this.checkRay.Y1[1].ray.origin.x+=o,this.checkRay.Y1[1].ray.origin.z+=o,this.checkRay.Y1[2].ray.origin.x-=o,this.checkRay.Y1[2].ray.origin.z+=o,this.checkRay.Y1[3].ray.origin.x-=o,this.checkRay.Y1[3].ray.origin.z-=o;for(let l=0;l<5;l++){let c=this.checkRay.Y1[l].intersectObjects(this.objectsImpenetrable);if(c.length>0){let d=c[0].point.y;r=Math.min(r===void 0?d:r,d)}}}let a=this.isFlying?i:this.controls.getObject().position.y+this.velocity.y*e;if(a===void 0)return;r!==void 0&&a>r-(this.personOption.height-this.personOption.sightHeight)&&(a=r-(this.personOption.height-this.personOption.sightHeight),this.velocity.y=0),s!==void 0?(a=Math.max(s+this.personOption.sightHeight,a),a===s+this.personOption.sightHeight?(this.velocity.y=0,this.canJump=!0,this.isFlying=!1):this.velocity.y-=this.worldOption.g*Math.sqrt(e)):this.velocity.y-=this.worldOption.g*Math.sqrt(e),this.controls.getObject().position.y=a}this.controls.getObject().position.y<-200&&(this.velocity.y=0,this.controls.getObject().position.y=100,this.controls.getObject().position.x=10,this.controls.getObject().position.z=11)}removeCube(e){let n=this.objects.findIndex(s=>s.id===e.id);n>=0&&this.objects.splice(n,1);const i=this.scene.getObjectById(e.id);i&&(this.scene.remove(i),this.selectObjectsImpenetrable())}addCube(e){var y;let n=(y=e.face)==null?void 0:y.normal,i=e.object.rotation,s=e.object.position,r=e.point,a=Oe[e.object.userData.cubeTypeKey].cubeAttributes&&Oe[e.object.userData.cubeTypeKey].cubeAttributes.geometryType===O.HalfCube,o=Oe[e.object.userData.cubeTypeKey].cubeAttributes&&Oe[e.object.userData.cubeTypeKey].cubeAttributes.geometryType===O.Flower1Cube,l=Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes&&Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes.geometryType===O.Flower1Cube,c=Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes&&Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes.geometryType===O.HalfCube,d=Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes&&Oe[Object.keys(Oe)[this.currentCubeTypeIndex]].cubeAttributes.geometryType===O.StairsCube,h=new b(n==null?void 0:n.x,n==null?void 0:n.y,n==null?void 0:n.z);h=h.applyAxisAngle(new b(0,0,1),i.z),h=h.applyAxisAngle(new b(0,1,0),i.y),h=h.applyAxisAngle(new b(1,0,0),i.x),h.round();let f;if(!o&&l&&h.y!==1)return;if(o)f=s;else{let g=h.y;a?c?h.y!==0&&(g=h.y/2):h.y!==0?(s.y>0?s.y%1===.25:s.y%1===-.75)?g=h.y*(h.y>0?3:5)/4:g=h.y*(h.y>0?5:3)/4:(s.y>0?s.y%1===.25:s.y%1===-.75)?g=-1/4:g=1/4:c&&(h.y!==0?g=h.y*3/4:g=(r.y>s.y?1:-1)/4),f={x:s.x+h.x,y:s.y+g,z:s.z+h.z};{let m;for(let E of this.objects)Math.round(E.position.x)===Math.round(f.x)&&Math.round(E.position.y)===Math.round(f.y)&&Math.round(E.position.z)===Math.round(f.z)&&(m=E);if(m){if(m.userData.cubeAttributes.geometryType===O.Flower1Cube)this.removeCube(m);else if(!c)return}}}let u={x:0,y:0,z:0};if(!c){let g,m=this.camera.getWorldDirection(new b(1,0,0));Math.abs(m.x)>=Math.abs(m.z)?g=new b(-m.x,0,0):g=new b(0,0,-m.z),g.normalize().round(),Math.abs(m.y)>=.5&&(g.y=m.y>0?1:-1),g.x===1?u.y=0:g.x===-1?u.y=180:g.z===1?u.y=-90:g.z===-1&&(u.y=90),g.y!==0&&(u.z=g.y>0?-90:90),u.z+=90}d&&(u.z-=90);let _=new Gt(Oe[Object.keys(Oe)[this.currentCubeTypeIndex]]).buildCube(f.x,f.y,f.z,Oe[Object.keys(Oe)[this.currentCubeTypeIndex]],0,u.y,u.z);o&&this.removeCube(e.object),this.scene.add(_),this.objects.push(_),this.selectObjectsImpenetrable()}selectObjectsImpenetrable(){this.objectsImpenetrable=this.objects.filter(e=>!(e.userData&&e.userData.cubeAttributes&&e.userData.cubeAttributes.isPenetrable))}}var mc=(t=>(t.ShowOrbitControl="ShowOrbitControl",t.MCFirstPersonControl="MCFirstPersonControl",t))(mc||{});const yw=(t,e,n,i,s)=>{let r;switch(t){case"ShowOrbitControl":let a=new mw(n,i.domElement);a.initClickFunction(e.children),r=a.controls;break;case"MCFirstPersonControl":r=new _w(n,i.domElement,s,e);break}return r};class bw{constructor(){this.objects=[],this.prevTime=performance.now()}init(e="canvas-wrapper"){this.canvasEl=aw(e),this.scene=ow(),this.lightAmbient=lw(),this.scene.add(this.lightAmbient),this.lightDirectional=cw(),this.scene.add(this.lightDirectional),this.camera=hw(),this.camera.aspect=this.canvasEl.offsetWidth/this.canvasEl.offsetHeight,this.camera.updateProjectionMatrix(),this.scene.add(this.camera),this.renderer=uw(),this.renderer.setSize(this.canvasEl.offsetWidth,this.canvasEl.offsetHeight),this.renderer.setPixelRatio(window.devicePixelRatio),this.canvasEl.appendChild(this.renderer.domElement),this.controls=yw(mc.MCFirstPersonControl,this.scene,this.camera,this.renderer,this.objects),this.bgmPlayer=pw(),this.changeLight=this.changeLightFunBuilder(),this.addBlocks(),this.startAnimate()}startAnimate(){this.animate(),window.addEventListener("resize",()=>{this.camera.aspect=this.canvasEl.offsetWidth/this.canvasEl.offsetHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.canvasEl.offsetWidth,this.canvasEl.offsetHeight)})}animate(){var i,s,r;(s=(i=this.statsWindow)==null?void 0:i.stats)==null||s.update();let e=performance.now(),n=(e-this.prevTime)/1e3;this.prevTime=e,(r=this.controls)==null||r.update(n),this.renderer.render(this.scene,this.camera),this.changeLight(),requestAnimationFrame(()=>{this.animate()})}changeLightFunBuilder(){let e={current:1,low:.5,high:1,becomeHigher:!0};return()=>{this.lightAmbient.intensity=fc(e.current,e.high,e.low),this.lightDirectional&&(this.lightDirectional.intensity=pc(e.current,e.high,e.low)),e.becomeHigher?e.current<=1?e.current-=2e-4:e.becomeHigher=!1:e.current>=.5?e.current+=2e-4:e.becomeHigher=!0}}addBlocks(){var s;let e=[[3,9,2,"stone",void 0,void 0,void 0],[3,9,3,"stone",void 0,void 0,void 0],[3,9,9,"stone",void 0,void 0,void 0],[4,9,4,"stone",void 0,void 0,void 0],[5,9,1,"stone",void 0,void 0,void 0],[5,9,6,"stone",void 0,void 0,void 0],[6,9,1,"stone",void 0,void 0,void 0],[7,9,5,"wool_colored_pink",void 0,void 0,void 0],[7,9,7,"stone",void 0,void 0,void 0],[7,9,10,"stone",void 0,void 0,void 0],[8,9,3,"stone",void 0,void 0,void 0],[8,9,5,"stone",void 0,void 0,void 0],[8,9,11,"stone",void 0,void 0,void 0],[9,9,4,"stone",void 0,void 0,void 0],[9,9,8,"stone",void 0,void 0,void 0],[11,9,11,"stone",void 0,void 0,void 0],[12,9,8,"stone",void 0,void 0,void 0],[2,9,2,"stone",0,180,90],[2,9,3,"stone",0,-90,90],[2,9,9,"stone",0,-90,90],[7,9,14,"grass",0,0,180],[8,9,14,"grass",0,0,180],[9,9,14,"grass",0,0,180],[10,9,14,"grass",0,0,180],[11,9,14,"grass",0,0,180],[6,9,14,"stone",0,0,180],[6,9,13,"grass",0,0,90],[8,9,13,"grass",0,0,90],[9,9,13,"grass",0,0,90],[10,9,13,"grass",0,0,90],[11,9,13,"grass",0,0,90],[12,9,13,"grass",0,0,180],[6,9,12,"grass",0,0,90],[7,9,12,"grass",0,0,90],[8,9,12,"grass",0,0,90],[9,9,12,"grass",0,0,90],[10,9,12,"grass",0,0,90],[11,9,12,"grass",0,0,90],[12,9,12,"grass",0,0,90],[6,9,10,"grass",0,0,180],[10,9,11,"grass",0,90,90],[10,9,10,"grass",0,90,180],[9,9,10,"grass",0,90,90],[10,9,9,"grass",0,90,180],[8,9,9,"grass",0,90,90],[7,9,9,"grass",0,0,90],[6,9,9,"grass",0,0,180],[12,9,11,"grass",0,90,180],[11,9,10,"grass",0,90,180],[11,9,8,"grass",0,90,180],[11,9,9,"grass",0,90,180],[7,9,6,"grass",0,180,180],[9,9,6,"grass",0,180,90],[10,9,8,"grass",0,90,90],[8,9,8,"grass",0,90,90],[9,9,7,"grass",0,90,90],[7,9,8,"grass",0,90,90],[6,9,8,"grass",0,90,90],[6,9,7,"grass",0,90,90],[6,9,6,"grass",0,90,180],[5,9,8,"grass",0,90,180],[5,9,9,"grass",0,90,180],[4,9,9,"grass",0,90,180],[4,9,8,"grass",0,90,90],[9,9,5,"grass",0,90,180],[9,9,3,"grass",0,0,180],[7,9,3,"grass",0,0,90],[6,9,3,"wool_colored_pink",0,0,90],[5,9,3,"grass",0,0,90],[5,9,5,"grass",0,90,180],[4,9,7,"grass",0,90,90],[3,9,8,"grass",0,90,90],[4,9,6,"grass",0,180,180],[7,9,4,"grass",0,180,180],[3,9,4,"grass",0,0,90],[3,9,6,"grass",0,90,90],[3,9,5,"grass",0,0,180],[3,9,7,"wool_colored_pink",0,90,180],[2,9,8,"grass",0,90,180],[2,9,7,"grass",0,90,180],[2,9,6,"grass",0,90,180],[2,9,5,"grass",0,90,180],[2,9,4,"grass",0,90,180],[8,9,2,"grass",0,180,90],[8,9,4,"grass",0,180,180],[6,9,2,"grass",0,-90,90],[5,9,2,"grass",0,180,90],[4,9,3,"grass",0,180,90],[9,9,1,"grass",0,180,90],[8,9,1,"grass",0,180,90],[4,9,1,"grass",0,180,180],[3,9,1,"grass",0,180,180],[1,9,9,"grass",0,90,90],[1,9,8,"grass",0,90,90],[1,9,7,"grass",0,90,90],[1,9,6,"grass",0,90,90],[1,9,5,"grass",0,90,90],[1,9,4,"grass",0,90,90],[10,10,8,"grass",0,180,180],[11,10,9,"grass",0,-90,90],[11,10,10,"grass",0,-90,180],[12,9,10,"grass",0,90,180],[12,9,9,"grass",0,-90,180],[6,9,4,"grass",0,90,180],[2,10,5,"tallgrass",0,180,180],[2,10,4,"tallgrass",0,180,180],[2,10,7,"tallgrass",0,180,180],[2,10,8,"tallgrass",0,180,180],[11,10,14,"tallgrass",0,-90,180],[1,10,4,"tallgrass",0,-90,90],[7,9,0,"grass",0,0,180],[9,10,1,"tallgrass",0,-90,90],[10,10,9,"grass",0,180,90],[6,9,5,"wool_colored_pink",0,-90,180],[7,9,1,"grass",0,-90,180],[7,9,2,"grass",0,180,180],[9,9,2,"grass",0,180,180],[8,10,5,"tallgrass",0,-90,180],[9,10,7,"flower_houstonia",0,90,90],[9,10,10,"flower_houstonia",0,90,180],[6,10,14,"tallgrass",0,-90,180],[7,10,12,"tallgrass",0,0,180],[8,10,12,"tallgrass",0,0,180],[9,10,14,"tallgrass",0,0,180],[32,26,20,"stonebrick_cracked",0,180,180],[32,28,20,"stonebrick_cracked",0,180,180],[32,29,20,"cobblestone",0,-90,90],[32,28.25,19,"stone_slab_half",0,0,0],[31,28.25,20,"stone_slab_half",0,0,0],[32,28.25,21,"stone_slab_half",0,0,0],[33,28.25,20,"stone_slab_half",0,0,0],[31,27.75,20,"stone_slab_half",0,0,0],[30,27.75,20,"stone_slab_half",0,0,0],[32,27.75,21,"stone_slab_half",0,0,0],[32,27.75,22,"stone_slab_half",0,0,0],[33,27.75,20,"stone_slab_half",0,0,0],[34,27.75,20,"stone_slab_half",0,0,0],[32,27.75,19,"stone_slab_half",0,0,0],[32,27.75,18,"stone_slab_half",0,0,0],[33,26.25,20,"stone_slab_half",0,0,0],[32,26.25,19,"stone_slab_half",0,0,0],[31,26.25,20,"stone_slab_half",0,0,0],[32,26.25,21,"stone_slab_half",0,0,0],[32,25,20,"stonebrick",0,0,0],[33,25,20,"stone_slab_stairs",0,0,0],[32,25,19,"stone_slab_stairs",0,90,0],[31,25,20,"stone_slab_stairs",0,180,0],[32,25,21,"stone_slab_stairs",0,-90,0],[32,24,20,"stonebrick",0,-90,0],[32,23,20,"stonebrick",0,-90,0],[31,24,20,"stone_slab_stairs",0,180,-90],[32,24,21,"stone_slab_stairs",0,-90,-90],[33,24,20,"stone_slab_stairs",0,0,-90],[32,24,19,"stone_slab_stairs",0,90,-90],[32,27,21,"cobblestone_stairs",0,90,0],[31,27,20,"cobblestone_stairs",0,0,0],[32,27,19,"cobblestone_stairs",0,-90,0],[33,27,20,"cobblestone_stairs",0,180,0],[32,27,20,"glowstone",0,90,90],[32,26,20,"stonebrick_cracked",0,180,180],[32,28,20,"stonebrick_cracked",0,180,180],[32,29,20,"cobblestone",0,-90,90],[32,28.25,19,"stone_slab_half",0,0,0],[31,28.25,20,"stone_slab_half",0,0,0],[32,28.25,21,"stone_slab_half",0,0,0],[33,28.25,20,"stone_slab_half",0,0,0],[31,27.75,20,"stone_slab_half",0,0,0],[30,27.75,20,"stone_slab_half",0,0,0],[32,27.75,21,"stone_slab_half",0,0,0],[32,27.75,22,"stone_slab_half",0,0,0],[33,27.75,20,"stone_slab_half",0,0,0],[34,27.75,20,"stone_slab_half",0,0,0],[32,27.75,19,"stone_slab_half",0,0,0],[32,27.75,18,"stone_slab_half",0,0,0],[33,26.25,20,"stone_slab_half",0,0,0],[32,26.25,19,"stone_slab_half",0,0,0],[31,26.25,20,"stone_slab_half",0,0,0],[32,26.25,21,"stone_slab_half",0,0,0],[32,25,20,"stonebrick",0,0,0],[33,25,20,"stone_slab_stairs",0,0,0],[32,25,19,"stone_slab_stairs",0,90,0],[31,25,20,"stone_slab_stairs",0,180,0],[32,25,21,"stone_slab_stairs",0,-90,0],[32,24,20,"stonebrick",0,-90,0],[32,23,20,"stonebrick",0,-90,0],[31,24,20,"stone_slab_stairs",0,180,-90],[32,24,21,"stone_slab_stairs",0,-90,-90],[33,24,20,"stone_slab_stairs",0,0,-90],[32,24,19,"stone_slab_stairs",0,90,-90],[32,27,21,"cobblestone_stairs",0,90,0],[31,27,20,"cobblestone_stairs",0,0,0],[32,27,19,"cobblestone_stairs",0,-90,0],[33,27,20,"cobblestone_stairs",0,180,0],[32,27,20,"glowstone",0,90,90],[32,26,20,"stonebrick_cracked",0,180,180],[32,28,20,"stonebrick_cracked",0,180,180],[32,29,20,"cobblestone",0,-90,90],[32,28.25,19,"stone_slab_half",0,0,0],[31,28.25,20,"stone_slab_half",0,0,0],[32,28.25,21,"stone_slab_half",0,0,0],[33,28.25,20,"stone_slab_half",0,0,0],[31,27.75,20,"stone_slab_half",0,0,0],[30,27.75,20,"stone_slab_half",0,0,0],[32,27.75,21,"stone_slab_half",0,0,0],[32,27.75,22,"stone_slab_half",0,0,0],[33,27.75,20,"stone_slab_half",0,0,0],[34,27.75,20,"stone_slab_half",0,0,0],[32,27.75,19,"stone_slab_half",0,0,0],[32,27.75,18,"stone_slab_half",0,0,0],[33,26.25,20,"stone_slab_half",0,0,0],[32,26.25,19,"stone_slab_half",0,0,0],[31,26.25,20,"stone_slab_half",0,0,0],[32,26.25,21,"stone_slab_half",0,0,0],[32,25,20,"stonebrick",0,0,0],[33,25,20,"stone_slab_stairs",0,0,0],[32,25,19,"stone_slab_stairs",0,90,0],[31,25,20,"stone_slab_stairs",0,180,0],[32,25,21,"stone_slab_stairs",0,-90,0],[32,24,20,"stonebrick",0,-90,0],[32,23,20,"stonebrick",0,-90,0],[31,24,20,"stone_slab_stairs",0,180,-90],[32,24,21,"stone_slab_stairs",0,-90,-90],[33,24,20,"stone_slab_stairs",0,0,-90],[32,24,19,"stone_slab_stairs",0,90,-90],[32,27,21,"cobblestone_stairs",0,90,0],[31,27,20,"cobblestone_stairs",0,0,0],[32,27,19,"cobblestone_stairs",0,-90,0],[33,27,20,"cobblestone_stairs",0,180,0],[32,27,20,"glowstone",0,90,90],[32,26,20,"stonebrick_cracked",0,180,180],[32,28,20,"stonebrick_cracked",0,180,180],[32,29,20,"cobblestone",0,-90,90],[32,28.25,19,"stone_slab_half",0,0,0],[31,28.25,20,"stone_slab_half",0,0,0],[32,28.25,21,"stone_slab_half",0,0,0],[33,28.25,20,"stone_slab_half",0,0,0],[31,27.75,20,"stone_slab_half",0,0,0],[30,27.75,20,"stone_slab_half",0,0,0],[32,27.75,21,"stone_slab_half",0,0,0],[32,27.75,22,"stone_slab_half",0,0,0],[33,27.75,20,"stone_slab_half",0,0,0],[34,27.75,20,"stone_slab_half",0,0,0],[32,27.75,19,"stone_slab_half",0,0,0],[32,27.75,18,"stone_slab_half",0,0,0],[33,26.25,20,"stone_slab_half",0,0,0],[32,26.25,19,"stone_slab_half",0,0,0],[31,26.25,20,"stone_slab_half",0,0,0],[32,26.25,21,"stone_slab_half",0,0,0],[32,25,20,"stonebrick",0,0,0],[33,25,20,"stone_slab_stairs",0,0,0],[32,25,19,"stone_slab_stairs",0,90,0],[31,25,20,"stone_slab_stairs",0,180,0],[32,25,21,"stone_slab_stairs",0,-90,0],[32,24,20,"stonebrick",0,-90,0],[32,23,20,"stonebrick",0,-90,0],[31,24,20,"stone_slab_stairs",0,180,-90],[32,24,21,"stone_slab_stairs",0,-90,-90],[33,24,20,"stone_slab_stairs",0,0,-90],[32,24,19,"stone_slab_stairs",0,90,-90],[32,27,21,"cobblestone_stairs",0,90,0],[31,27,20,"cobblestone_stairs",0,0,0],[32,27,19,"cobblestone_stairs",0,-90,0],[33,27,20,"cobblestone_stairs",0,180,0],[32,27,20,"glowstone",0,90,90],[8,9,7,"grassdirt",0,90,180],[8,9,6,"grassdirt",0,90,180],[9,9,9,"grassdirt",0,90,180],[8,9,10,"grassdirt",0,90,180],[6,9,11,"grassdirt",0,90,90],[7,9,11,"grassdirt",0,90,180],[5,9,7,"grassdirt",0,0,180],[9,9,11,"cobblestone",0,0,180],[7,9,13,"stone",0,-90,180],[1,9,3,"grass",0,0,180],[1,9,2,"grass",0,0,180],[1,9,1,"grass",0,0,180],[2,9,1,"grass",0,0,180],[0,9,1,"grass",0,90,180],[0,9,2,"grass",0,90,180],[0,9,0,"grass",0,0,180],[1,9,0,"grass",0,0,180],[5,9,4,"log_spruce",0,90,180],[5,10,4,"log_spruce",0,90,180],[5,10,3,"log_spruce",0,90,180],[4,10,3,"log_spruce",0,90,180],[5,13,3,"log_spruce",0,-90,180],[6,10,3,"log_spruce",0,0,180],[6,10,4,"log_spruce",0,-90,90],[5,10,2,"log_spruce",0,0,90],[4,14,4,"wool_colored_pink",0,90,180],[4,14,3,"wool_colored_pink",0,90,180],[5,14,3,"wool_colored_pink",0,90,180],[5,15,4,"wool_colored_pink",0,90,180],[4,15,4,"wool_colored_pink",0,90,180],[4,15,3,"wool_colored_pink",0,90,180],[5,15,3,"wool_colored_pink",0,90,180],[4,16,3,"wool_colored_pink",0,180,90],[4,16,4,"wool_colored_pink",0,180,90],[5,16,4,"wool_colored_pink",0,-90,90],[5,16,5,"wool_colored_pink",0,-90,90],[6,16,4,"wool_colored_pink",0,0,90],[7,16,4,"wool_colored_pink",0,0,90],[7,17,4,"wool_colored_pink",0,0,90],[5,16,3,"wool_colored_pink",0,0,90],[5,16,2,"wool_colored_pink",0,0,90],[6,16,3,"wool_colored_pink",0,0,90],[6,16,2,"wool_colored_pink",0,0,90],[6,16,1,"wool_colored_pink",0,90,90],[6,16,0,"wool_colored_pink",0,90,90],[5,15,2,"wool_colored_pink",0,90,90],[5,16,1,"wool_colored_pink",0,90,90],[4,16,1,"wool_colored_pink",0,90,90],[5,16,0,"wool_colored_pink",0,90,90],[4,16,0,"wool_colored_pink",0,90,90],[3,16,0,"wool_colored_pink",0,90,90],[3,16,-1,"wool_colored_pink",0,180,90],[2,16,0,"wool_colored_pink",0,180,90],[3,15,3,"wool_colored_pink",0,180,90],[2,15,3,"wool_colored_pink",0,180,90],[3,15,2,"wool_colored_pink",0,180,90],[3,16,3,"wool_colored_pink",0,180,90],[2,15,2,"wool_colored_pink",0,180,90],[2,16,3,"wool_colored_pink",0,180,90],[3,16,4,"wool_colored_pink",0,180,90],[2,16,4,"wool_colored_pink",0,180,90],[3,16,5,"wool_colored_pink",0,180,90],[2,16,5,"wool_colored_pink",0,180,90],[3,15,4,"wool_colored_pink",0,-90,90],[4,15,5,"wool_colored_pink",0,-90,90],[4,15,6,"wool_colored_pink",0,-90,90],[3,15,5,"wool_colored_pink",0,-90,90],[4,15,7,"wool_colored_pink",0,-90,90],[3,15,6,"wool_colored_pink",0,-90,90],[3,16,6,"wool_colored_pink",0,-90,90],[4,16,5,"wool_colored_pink",0,-90,90],[5,15,5,"wool_colored_pink",0,-90,90],[6,15,5,"wool_colored_pink",0,-90,90],[7,15,5,"wool_colored_pink",0,-90,90],[8,16,5,"wool_colored_pink",0,0,90],[8,16,4,"wool_colored_pink",0,0,90],[7,16,3,"wool_colored_pink",0,0,90],[8,16,3,"wool_colored_pink",0,0,90],[7,16,2,"wool_colored_pink",0,0,90],[7,16,1,"wool_colored_pink",0,90,90],[6,14,3,"wool_colored_pink",0,90,90],[6,15,3,"wool_colored_pink",0,90,90],[5,17,0,"wool_colored_pink",0,90,90],[4,17,0,"wool_colored_pink",0,90,180],[3,17,0,"wool_colored_pink",0,180,180],[2,17,0,"wool_colored_pink",0,180,180],[6,17,2,"wool_colored_pink",0,180,90],[3,17,1,"wool_colored_pink",0,180,180],[2,17,1,"wool_colored_pink",0,180,180],[3,16,1,"wool_colored_pink",0,180,180],[4,16,2,"wool_colored_pink",0,180,180],[3,17,3,"wool_colored_pink",0,180,180],[2,17,3,"wool_colored_pink",0,-90,180],[3,17,5,"wool_colored_pink",0,-90,180],[3,17,6,"wool_colored_pink",0,-90,180],[5,17,5,"wool_colored_pink",0,-90,90],[6,16,5,"wool_colored_pink",0,-90,90],[5,17,3,"wool_colored_pink",0,-90,90],[5,17,4,"wool_colored_pink",0,-90,90],[6,16,6,"wool_colored_pink",0,0,180],[7,16,5,"wool_colored_pink",0,0,180],[6,17,5,"wool_colored_pink",0,0,180],[6,17,3,"wool_colored_pink",0,0,180],[7,17,3,"wool_colored_pink",0,0,180],[7,17,2,"wool_colored_pink",0,0,180],[6,17,1,"wool_colored_pink",0,90,180],[3,17,4,"wool_colored_pink",0,180,180],[2,17,4,"wool_colored_pink",0,180,180],[4,17,1,"wool_colored_pink",0,-90,180],[4,17,4,"wool_colored_pink",0,-90,180],[4,17,5,"wool_colored_pink",0,-90,180],[4,17,6,"wool_colored_pink",0,-90,180],[6,15,2,"wool_colored_pink",0,0,90],[7,15,2,"wool_colored_pink",0,0,90],[7,15,3,"wool_colored_pink",0,0,90],[5,15,1,"wool_colored_pink",0,0,90],[6,15,1,"wool_colored_pink",0,0,90],[5,15,0,"wool_colored_pink",0,90,90],[4,15,2,"wool_colored_pink",0,90,90],[4,15,0,"wool_colored_pink",0,180,90],[3,15,1,"wool_colored_pink",0,180,90],[2,15,1,"wool_colored_pink",0,180,90],[3,16,2,"wool_colored_pink",0,180,90],[2,16,2,"wool_colored_pink",0,180,90],[4,17,2,"wool_colored_pink",0,180,90],[3,14,4,"log_spruce",0,180,90],[2,15,4,"log_spruce",0,180,90],[5,14,4,"log_spruce",0,-90,90],[5,14,5,"log_spruce",0,-90,90],[6,15,6,"log_spruce",0,-90,90],[6,14,2,"log_spruce",0,0,90],[7,15,1,"log_spruce",0,0,90],[2,15,6,"wool_colored_pink",0,180,90],[5,15,6,"wool_colored_pink",0,-90,90],[5,16,6,"wool_colored_pink",0,-90,90],[7,15,6,"wool_colored_pink",0,-90,90],[6,15,4,"wool_colored_pink",0,0,90],[6,15,0,"wool_colored_pink",0,90,90],[7,14,5,"wool_colored_pink",0,0,90],[4,15,1,"wool_colored_pink",0,90,90],[3,14,0,"wool_colored_pink",0,180,90],[1,14,2,"wool_colored_pink",0,180,90],[1,16,2,"wool_colored_pink",0,180,0],[1,16,3,"wool_colored_pink",0,180,0],[1,15,3,"wool_colored_pink",0,180,0],[1,15,4,"wool_colored_pink",0,180,0],[2,15,5,"wool_colored_pink",0,180,0],[3,14,6,"wool_colored_pink",0,180,0],[1,14,4,"wool_colored_pink",0,180,0],[8,15,6,"wool_colored_pink",0,0,90],[7,16,6,"wool_colored_pink",0,0,90],[6,14,4,"glass_pink",0,-90,90],[6,14,5,"glass_pink",0,-90,90],[7,15,4,"glass_pink",0,0,90],[5,14,6,"glass_pink",0,-90,90],[4,14,5,"glass_pink",0,-90,90],[2,14,4,"glass_pink",0,-90,90],[3,14,5,"glass_pink",0,-90,90],[3,14,3,"glass_pink",0,180,90],[2,14,3,"glass_pink",0,180,90],[5,14,2,"glass_pink",0,180,90],[4,14,2,"glass_pink",0,180,90],[5,14,1,"glass_pink",0,180,90],[4,14,1,"glass_pink",0,180,90],[3,15,0,"glass_pink",0,180,90],[2,16,1,"glass_pink",0,180,90],[1,15,2,"glass_pink",0,180,90],[1,15,5,"glass_pink",0,180,90],[2,17,5,"glass_pink",0,-90,90],[4,16,6,"glass_pink",0,-90,90],[6,17,6,"glass_pink",0,-90,90],[7,17,5,"glass_pink",0,-90,90],[5,16,7,"glass_pink",0,0,90],[5,17,6,"glass_pink",0,-90,90],[7,14,4,"glass_pink",0,90,90],[7,14,3,"glass_pink",0,90,90],[6,14,1,"wool_colored_pink",0,0,90],[4,15,-1,"wool_colored_pink",0,0,90],[5,16,-1,"wool_colored_pink",0,0,90],[2,15,0,"wool_colored_pink",0,90,90],[2,14,5,"wool_colored_pink",0,-90,90],[7,14,6,"wool_colored_pink",0,-90,90],[8,14,3,"wool_colored_pink",0,0,90],[4,14,6,"wool_colored_pink",0,-90,90],[6,14,6,"wool_colored_pink",0,0,90],[6,15,7,"wool_colored_pink",0,0,90],[6,14,0,"wool_colored_pink",0,0,90],[7,14,1,"wool_colored_pink",0,0,90],[7,14,2,"wool_colored_pink",0,0,90],[4,14,0,"wool_colored_pink",0,90,90],[5,14,0,"wool_colored_pink",0,90,90],[8,15,2,"wool_colored_pink",0,0,90],[3,15,7,"wool_colored_pink",0,-90,90],[1,15,1,"wool_colored_pink",0,180,90],[2,14,2,"wool_colored_pink",0,90,90],[2,14,1,"wool_colored_pink",0,90,90],[5,11,4,"log_spruce",0,0,180],[5,10,5,"log_spruce",0,-90,180],[5,12,4,"log_spruce",0,-90,90],[5,12,3,"log_spruce",0,0,0],[5,13,2,"log_spruce",0,0,90],[4,10,4,"log_spruce",0,-90,90],[4,9,5,"log_spruce",0,-90,90],[4,9,2,"log_spruce",0,180,90],[3,18,3,"glass_pink",0,0,90],[4,18,0,"glass_pink",0,0,90],[6,17,0,"glass_pink",0,0,90],[6,18,1,"glass_pink",0,0,90],[6,18,2,"glass_pink",0,0,90],[6,18,3,"glass_pink",0,0,90],[6,17,4,"glass_pink",0,0,90],[5,18,5,"glass_pink",0,0,180],[6,18,5,"glass_pink",0,0,180],[8,17,3,"glass_pink",0,0,180],[2,17,2,"glass_pink",0,0,180],[4,18,3,"wool_colored_pink",0,90,180],[4,18,2,"wool_colored_pink",0,90,180],[5,17,2,"wool_colored_pink",0,90,180],[5,18,2,"wool_colored_pink",0,90,180],[6,18,4,"wool_colored_pink",0,90,180],[4,18,4,"wool_colored_pink",0,0,180],[5,18,4,"wool_colored_pink",0,0,180],[5,18,3,"wool_colored_pink",0,0,180],[4,18,1,"wool_colored_pink",0,0,180],[5,18,1,"wool_colored_pink",0,90,180],[7,15,0,"wool_colored_pink",0,90,90],[6,15,-1,"wool_colored_pink",0,90,90],[5,15,-1,"wool_colored_pink",0,90,90],[5,15,-2,"wool_colored_pink",0,90,90],[4,15,-2,"wool_colored_pink",0,90,90],[3,15,-1,"wool_colored_pink",0,90,90],[5,10,6,"flower_houstonia",0,0,90],[3,10,5,"flower_houstonia",0,-90,90],[5,11,3,"flower_houstonia",0,0,90],[6,11,4,"tallgrass",0,-90,90],[10,11,8,"tallgrass",0,-90,90],[7,10,4,"tallgrass",0,-90,90],[4,10,8,"tallgrass",0,-90,90],[6,10,9,"tallgrass",0,-90,180],[6,10,10,"tallgrass",0,0,90],[3,10,1,"tallgrass",0,-90,180]],n=new Gt(Oe.grass);for(let r of e){let a=n.buildCube(...r);this.scene.add(a),this.objects.push(a)}let i=[[32,26,20,"stonebrick_cracked",0,180,180],[32,28,20,"stonebrick_cracked",0,180,180],[32,29,20,"cobblestone",0,-90,90],[32,28.25,19,"stone_slab_half",0,0,0],[31,28.25,20,"stone_slab_half",0,0,0],[32,28.25,21,"stone_slab_half",0,0,0],[33,28.25,20,"stone_slab_half",0,0,0],[31,27.75,20,"stone_slab_half",0,0,0],[30,27.75,20,"stone_slab_half",0,0,0],[32,27.75,21,"stone_slab_half",0,0,0],[32,27.75,22,"stone_slab_half",0,0,0],[33,27.75,20,"stone_slab_half",0,0,0],[34,27.75,20,"stone_slab_half",0,0,0],[32,27.75,19,"stone_slab_half",0,0,0],[32,27.75,18,"stone_slab_half",0,0,0],[33,26.25,20,"stone_slab_half",0,0,0],[32,26.25,19,"stone_slab_half",0,0,0],[31,26.25,20,"stone_slab_half",0,0,0],[32,26.25,21,"stone_slab_half",0,0,0],[32,25,20,"stonebrick",0,0,0],[33,25,20,"stone_slab_stairs",0,0,0],[32,25,19,"stone_slab_stairs",0,90,0],[31,25,20,"stone_slab_stairs",0,180,0],[32,25,21,"stone_slab_stairs",0,-90,0],[32,24,20,"stonebrick",0,-90,0],[32,23,20,"stonebrick",0,-90,0],[31,24,20,"stone_slab_stairs",0,180,-90],[32,24,21,"stone_slab_stairs",0,-90,-90],[33,24,20,"stone_slab_stairs",0,0,-90],[32,24,19,"stone_slab_stairs",0,90,-90],[32,27,21,"cobblestone_stairs",0,90,0],[31,27,20,"cobblestone_stairs",0,0,0],[32,27,19,"cobblestone_stairs",0,-90,0],[33,27,20,"cobblestone_stairs",0,180,0],[32,27,20,"glowstone",0,90,90]];for(let r of i){let a=n.buildCube(...r);a.position.x-=44,a.position.y-=16,a.position.z-=25,this.scene.add(a),this.objects.push(a)}for(let r of i){let a=n.buildCube(...r);a.position.x-=10,a.position.y-=8,a.position.z-=45,this.scene.add(a),this.objects.push(a)}for(let r of i){let a=n.buildCube(...r);a.position.x-=45,a.position.y-=5,a.position.z+=15,this.scene.add(a),this.objects.push(a)}{let r=new Tn({transparent:!0,opacity:.3,color:16777215,side:Ti});for(let a=0;a<=50;a++){const o=Math.round(Math.random()*10+4),l=4,c=Math.round(Math.random()*10+4);let d=new $e(new lr(o,l,c),r);if(d.position.x=5+(Math.random()>.5?-1:1)*Math.round(Math.random()*60)+o/2,d.position.z=(Math.random()>.5?-1:1)*Math.round(Math.random()*60)+c/2,d.position.y=Math.round(Math.random()*60)-10,d.position.y>2&&d.position.y<15&&Math.abs(d.position.x)<20&&Math.abs(d.position.z)<20){a--;continue}this.scene.add(d)}}this.controls&&"selectObjectsImpenetrable"in this.controls&&((s=this.controls)==null||s.selectObjectsImpenetrable())}}export{bw as default};
